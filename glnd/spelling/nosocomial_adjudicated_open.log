1                                                          The SAS System                              09:54 Friday, October 8, 2010

NOTE: Copyright (c) 2002-2003 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) 9.1 (TS1M3)
      Licensed to EMORY UNIVERSITY - T&R, Site 0014217002.
NOTE: This session is executing on the SunOS 5.9 platform.



NOTE: SAS 9.1.3 Service Pack 4

You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.20 seconds
      cpu time            0.08 seconds
      

NOTE: AUTOEXEC processing beginning; file is /home/bwu2/spelling/autoexec.sas.

NOTE: Libref RAND was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/randomization
NOTE: Libref GLND was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas
NOTE: Libref LIBRARY was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /home/bwu2/spelling
NOTE: Libref GLND_DF was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/reporting/df_reporting
NOTE: Libref GLND_EXT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/external_data
NOTE: Libref GLND_REP was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/reporting

NOTE: AUTOEXEC processing completed.

1          /* nosocomial_adjudicated_open.sas
2           *
3           * partially inherits/supercedes the former "nosocomial_open.sas", last used for the 2/13/2008 DSMB report and now
2                                                          The SAS System                              09:54 Friday, October 8, 2010

3        ! incorporates Dr. Blumberg's
4           * infection adjudication findings
5           *
6           * created July 2008
7           */
8          
9          libname glnd_cur "/glnd/sas";
NOTE: Libname GLND_CUR refers to the same physical library as GLND.
NOTE: Libref GLND_CUR was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas
10         
11         options nodate nonumber;
12         
13         title ;
14         
15         
16         * macro for making a table BY episode;
17         *%inc "/glnd/sas/reporting/include/nosocomial_episode_table_open.sas" ;
18         %inc "nosocomial_episode_table_open.sas" ;
432        
433        
434        ** 1. COMPILED A SAVED DATASET (old one was not stored in GLND) of all reported suspected infections, PRIOR TO
434      ! ADJUDICATION.
435        	LEAVING ALL ORIGINAL DATA INTACT (no removing repeate organisms) **;
436        
437        
438         	
438      !   proc sort data= glnd.status; by id ; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

438      !                                            
439        	
439      !  proc sort data= glnd.plate101; by id dfseq; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439      !                                                  
440        	
440      !  proc sort data= glnd.plate102; by id dfseq; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440      !                                                  
441        	
                                                           The SAS System

441      !  proc sort data= glnd.plate103; by id dfseq; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441      !                                                  
442        
443        	* gather dates and infection data from forms;
444        
445        	
445      !  data glnd_rep.suspected_noso_before_adj ;
446        		merge	glnd.plate101 (in = frozen keep = id dfseq dt_infect cult_obtain cult_positive cult_org_code_1)
447        				glnd.plate102 (keep = id dfseq cult_org_code_2 cult_org_code_3 cult_org_code_4 cult_org_code_5 )
448        				glnd.plate103 (keep = id dfseq infect_confirm site_code type_code)
449        				glnd_cur.plate101 (keep = id dfseq org_spec_1)
450        				glnd_cur.plate102 (keep = id dfseq org_spec_2 org_spec_3 org_spec_4 org_spec_5)
451        				;
452        		by id dfseq;
453        
454        ******** fix the output by wbh 09282010 *******************************************;
455        ***********************************************************************************;
456        		if lowcase(scan(org_spec_1,1))='yeast' then org_spec_1='Yeast not specified';
457        		if lowcase(scan(org_spec_2,1))='yeast' then org_spec_2='Yeast not specified';
458        		if lowcase(scan(org_spec_3,1))='yeast' then org_spec_3='Yeast not specified';
459        		if lowcase(scan(org_spec_4,1))='yeast' then org_spec_4='Yeast not specified';
460        		if lowcase(scan(org_spec_5,1))='yeast' then org_spec_5='Yeast not specified';
461        
462        		if lowcase(strip(org_spec_1))='enterococcus species' then org_spec_1='Enterococcus species not specified';
463        		if lowcase(strip(org_spec_2))='enterococcus species' then org_spec_2='Enterococcus species not specified';
464        		if lowcase(strip(org_spec_3))='enterococcus species' then org_spec_3='Enterococcus species not specified';
465        		if lowcase(strip(org_spec_4))='enterococcus species' then org_spec_4='Enterococcus species not specified';
466        		if lowcase(strip(org_spec_5))='enterococcus species' then org_spec_5='Enterococcus species not specified';
467        /*
468        		if lowcase(strip(org_spec_1))='Klebsiella not specified' then org_spec_1='not specified';
469        		if lowcase(strip(org_spec_2))='Klebsiella not specified' then org_spec_2='not specified';
470        		if lowcase(strip(org_spec_3))='Klebsiella not specified' then org_spec_3='not specified';
471        		if lowcase(strip(org_spec_4))='Klebsiella not specified' then org_spec_4='not specified';
472        		if lowcase(strip(org_spec_5))='Klebsiella not specified' then org_spec_5='not specified';
473        */
474        
475        		if lowcase(strip(org_spec_1))='enterococcus species, beta-lactama negative' then org_spec_1='Enterococcus species,
475      ! beta-lactamase negative';
476        		if lowcase(strip(org_spec_2))='enterococcus species, beta-lactama negative' then org_spec_2='Enterococcus species,
476      ! beta-lactamase negative';
477        		if lowcase(strip(org_spec_3))='enterococcus species, beta-lactama negative' then org_spec_3='Enterococcus species,
477      ! beta-lactamase negative';
478        		if lowcase(strip(org_spec_4))='enterococcus species, beta-lactama negative' then org_spec_4='Enterococcus species,
478      ! beta-lactamase negative';
479        		if lowcase(strip(org_spec_5))='enterococcus species, beta-lactama negative' then org_spec_5='Enterococcus species,
479      ! beta-lactamase negative';
480        
481        
482        		if lowcase(strip(org_spec_1))='lactobacillus' then org_spec_1='Lactobacillus species';
483        		if lowcase(strip(org_spec_2))='lactobacillus' then org_spec_2='Lactobacillus species';
484        		if lowcase(strip(org_spec_3))='lactobacillus' then org_spec_3='Lactobacillus species';
                                                           The SAS System

485        		if lowcase(strip(org_spec_4))='lactobacillus' then org_spec_4='Lactobacillus species';
486        		if lowcase(strip(org_spec_5))='lactobacillus' then org_spec_5='Lactobacillus species';
487        
488        		if ~frozen then delete;
489        	run;

NOTE: There were 236 observations read from the data set GLND.PLATE101.
NOTE: There were 236 observations read from the data set GLND.PLATE102.
NOTE: There were 236 observations read from the data set GLND.PLATE103.
NOTE: There were 236 observations read from the data set GLND_CUR.PLATE101.
NOTE: There were 236 observations read from the data set GLND_CUR.PLATE102.
NOTE: The data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ has 236 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.29 seconds
      cpu time            0.06 seconds
      

490        	
491        	
492        	/*
493        	glnd.plate101 (keep = id dfseq dt_infect cult_obtain cult_positive cult_org_code_1 org_spec_1 )
494        				glnd.plate102 (keep = id dfseq cult_org_code_2 cult_org_code_3 cult_org_code_4 cult_org_code_5 org_spec_2 org_spec_3
494      ! org_spec_4 org_spec_5)
495        				glnd.plate103 (keep = id dfseq infect_confirm site_code type_code)
496        				*/
497        	
498        	
499        	
499      !  data glnd_rep.suspected_noso_before_adj ;
500        		merge 	glnd_rep.suspected_noso_before_adj  (in = has_infection)
501        				glnd.status	(keep = id dt_random center apache_2)
502        			;
503        	
504        		by id;
505        
506        
507        		* delete people brought in from status with NO infections ;
508        			if ~has_infection then DELETE;
509        
510        		* determine if prevalent or incident. 
511        			* incident if yes to nosocomial (pg 3) and more than 2 calendar days after randomization (though technically 48 hours
511      ! after time of study drug starting, we do not record time of infection onset, nor is this something that is possible to
511      ! determine) ;
512        			* prevalent if yes to nosocomial (pg 3) and less than 2 calendar days after randomization (though technically 48 hours
512      !  after time of study drug starting, we do not record time of infection onset, nor is this something that is possible to
512      ! determine) ;
513        	
514        		* determine infection onset ;	 
515        			days_post_entry = dt_infect - dt_random;	
516        
517        			if ((infect_confirm = 1) | (infect_confirm = 2)) & (days_post_entry > 2) then incident = 1;
518        			else if ((infect_confirm = 1) | (infect_confirm = 2)) & (days_post_entry <= 2) then incident = 0;
519        
520        		* recode vars for non-infections;
521        			if (infect_confirm > 2) then incident = .;  
522        			if site_code ="0000" then site_code = " ";
523        			if type_code ="0000" then type_code = " ";
524        				
                                                           The SAS System

525        		format
526        			incident yn.;
527        			
528        		
529        		label
530        			incident = "Incident"
531        			days_post_entry = "Days post study entry"
532        			cult_positive="Culture positive?"
533        			cult_obtain="Culture obtained?"
534        	        	site_code="Site code"
535        	        	type_code="Type code"
536        			infect_confirm="Infection confirmed?"
537        			center = "Center"
538        		;
539        
540        	run;

NOTE: There were 236 observations read from the data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ.
NOTE: There were 130 observations read from the data set GLND.STATUS.
NOTE: The data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ has 236 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.02 seconds
      

541        
542        
543        ** CAPTURE SOME SAMPLE SIZES, FOR REPEAT USE **;
544        
545        		* capture sample size of number of suspected infections;
546        			
546      !    proc means data= glnd_rep.suspected_noso_before_adj noprint;
547        				output out= noso_n n(id) = id_n;
548        			run;

NOTE: There were 236 observations read from the data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ.
NOTE: The data set WORK.NOSO_N has 1 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

548      !        
549        			
549      !    data _null_;
550        				set noso_n;
551        		
552        				call symput('n_susp_infec', put(id_n, 3.0));
553        			run;

NOTE: There were 1 observations read from the data set WORK.NOSO_N.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

553      !        
554        	
                                                           The SAS System

555        		* capture sample size of total people on study; 
556        			
556      !    proc means data= glnd.status noprint;
557        				output out= study_n n(id) = id_n;
558        			run;

NOTE: There were 130 observations read from the data set GLND.STATUS.
NOTE: The data set WORK.STUDY_N has 1 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

558      !        
559        			
559      !    data _null_;
560        				set study_n;
561        		
562        				call symput('n_study_1', put(id_n, 3.0));
563        			run;

NOTE: There were 1 observations read from the data set WORK.STUDY_N.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

563      !        
564        
565        
566        
567        ** compile a SAVED dataset of all reported suspected infections, AFTER ADJUDICATION **;
568        	
569        	* combine plates 56 and 57;
570        	
570      !  proc sort data = glnd.plate56; by id infect_visitno; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

571        	
571      !  proc sort data = glnd.plate57; by id infect_visitno; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

572        	
572      !  proc sort data = glnd_rep.suspected_noso_before_adj; by id dfseq; run;

NOTE: There were 236 observations read from the data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ.
NOTE: The data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ has 236 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
                                                           The SAS System

      real time           0.21 seconds
      cpu time            0.01 seconds
      

573        
574        
575        
576        	
576      !  data adjudication;
577        		merge
578        			glnd.plate56 (	in = had_adj
579        					drop = dfcreate dfmodify dfplate dfraster dfscreen dfstatus dfvalid ptint
580        						rename = (site_code = site_code_adj type_code = type_code_adj cult_pos = cult_positive_adj infect_confirm =
580      ! infect_confirm_adj
581        								inf_onset_dt = dt_infect_adj ) )
582        			glnd.plate57 (drop = dfcreate dfmodify dfplate dfraster dfscreen dfstatus dfvalid )
583        			glnd_rep.suspected_noso_before_adj (rename = (dfseq = infect_visitno))
584        		;
585        		by id infect_visitno;
586        		
587        		
588        		if (had_adj) then adjudicated = 1; else adjudicated = 0;
589        
590        		** make these two changes in the data for this DSMB report only **;
591        		if (id = 11041) & (infect_visitno = 106) then agree_site = 1;
592        		if (id = 12063) & (infect_visitno = 102) then agree_site = 1;
593        		
594        		if (id = 12155) & (infect_visitno = 103) then agree_site = 0;
595        		
596        		if type_code_adj = "PNUI" then type_code_adj = "PNU1"; * 3 such errors for this report;
597        
598        		
599        		format adjudicated yn.;
600        	run;

NOTE: There were 138 observations read from the data set GLND.PLATE56.
NOTE: There were 137 observations read from the data set GLND.PLATE57.
NOTE: There were 236 observations read from the data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ.
NOTE: The data set WORK.ADJUDICATION has 236 observations and 57 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

601        
602        	
602      !  proc contents data= glnd_rep.suspected_noso_before_adj ; run;

NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: The PROCEDURE CONTENTS printed pages 1-2.

603        	
603      !  proc contents data= adjudication ; run;

NOTE: PROCEDURE CONTENTS used (Total process time):
                                                           The SAS System

      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: The PROCEDURE CONTENTS printed pages 3-4.

604        /**	proc contents data= glnd.plate56 ; run;
605        	proc contents data= glnd.plate57 ; run;
606        ***/
607        
608        	** Make a table that summarizes the number of cases adjudicated and the basic findings - infections confirmed and
608      ! whether they are incident or not ** ;	
609        	
610        		*** total number of cases and patients ***;
611        			
611      !    data ids_adjudicated;
612        				set adjudication;
613        				where adjudicated;
614        				by id;
615        			
616        				if ~first.id then delete;
617        			run;

NOTE: There were 138 observations read from the data set WORK.ADJUDICATION.
      WHERE adjudicated;
NOTE: The data set WORK.IDS_ADJUDICATED has 44 observations and 57 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

618        		
619        			* total cases;
620        			
620      !    proc means data = adjudication noprint;
621        				where (adjudicated) & (adjud_dt > mdy(&last_dsmb_date));
622        				output out = adjud_cases sum(adjudicated) = adjud_cases;
623        			run;

NOTE: There were 12 observations read from the data set WORK.ADJUDICATION.
      WHERE adjudicated and (adjud_dt>MDY(4, 1, 2010));
NOTE: The data set WORK.ADJUD_CASES has 1 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

624        
625        			* total people;
626        			
626      !    proc means data = ids_adjudicated noprint;
627        				where (adjud_dt > mdy(&last_dsmb_date));
628        				output out = adjud_people sum(adjudicated) = adjud_people;
629        			run;

NOTE: There were 6 observations read from the data set WORK.IDS_ADJUDICATED.
      WHERE adjud_dt>MDY(4, 1, 2010);
NOTE: The data set WORK.ADJUD_PEOPLE has 1 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
                                                           The SAS System

      real time           0.03 seconds
      cpu time            0.03 seconds
      

630        			
631        			* display portions for table;
632        			
632      !    data adj_totals;
633        				merge 	adjud_cases
634        					adjud_people
635        				;
636        				* BY NOTHING - 1 obs;
637        												
638        				length row $70;
639        				length display_1 $25;
640        				length display_2 $25;
641        				
642        				row = " ";
643        				display_1 = "# infec. (# patients)";
644        				output;
645        								
646        				row = "Infections reviewed since last DSMB report:";
647        				display_1 = compress(put(adjud_cases, 4.0)) || " (" || compress(put(adjud_people, 4.0)) || ")";
648        				output;
649        
650        				*** store total number of people's records adjudicated - when I report this in the summaries, we are assuming that if
650      !  the adjudicator has reviewed any records
651        					for a patient, then he has reviewed them for ALL infection for that patient;
652        				call symput('n_adjudicated', put(adjud_people, 3.0));
653        
654        			run;

NOTE: Variable display_2 is uninitialized.
NOTE: There were 1 observations read from the data set WORK.ADJUD_CASES.
NOTE: There were 1 observations read from the data set WORK.ADJUD_PEOPLE.
NOTE: The data set WORK.ADJ_TOTALS has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

655        			
656        				
657        				
658        		
659        		*** total agreement with original findings *** ;
660        		
661        	
662        		
663        			
663      !    proc freq data = adjudication noprint;
664        				where adjudicated & (adjud_dt > mdy(&last_dsmb_date));
665        				tables agree_site / out = agree_summary outcum;
666        			run;

NOTE: There were 12 observations read from the data set WORK.ADJUDICATION.
      WHERE adjudicated and (adjud_dt>MDY(4, 1, 2010));
NOTE: The data set WORK.AGREE_SUMMARY has 2 observations and 5 variables.
                                                           The SAS System

NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

666      !        		
667        			
668        	
669        			
669      !    data adj_overview;
670        				set agree_summary;
671        				
672        				length row $70;
673        				length display_1 $25;
674        				length display_2 $25;
675        
676        				
677        				if (_N_ = 1) then do;
678        					row = "Adjudicator agreed with clinical center findings?";
679        					display_1 = " ";
680        					output;
681        					order = -2;
682        				end;
683        			
684        				order = agree_site * -1 ; * remap 0 to 0 and 1 to -1 so that can properly sort;
685        				
686        				row = "- " || compress(put(agree_site, yn.));
687        				display_1 = compress(put(count,4.0)) || "/" || compress(put(count/(percent/100),4.0)) || " (" ||
687      ! compress(put(percent, 4.1)) || "%)";
688        				output;
689        				
690        				if (agree_site = 0) then call symput("num_cases_not_agreed" , compress(put(count,4.0)));
691        			run;

NOTE: Variable display_2 is uninitialized.
NOTE: There were 2 observations read from the data set WORK.AGREE_SUMMARY.
NOTE: The data set WORK.ADJ_OVERVIEW has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

692        			
693        			
693      !    proc sort data = adj_overview; by order; run;

NOTE: There were 3 observations read from the data set WORK.ADJ_OVERVIEW.
NOTE: The data set WORK.ADJ_OVERVIEW has 3 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

694        			
695        			
696        		*** show the changes in general findings ***;
697        		
698        			
                                                           The SAS System

698      !    proc freq data = adjudication noprint;
699        				where (adjudicated) & (agree_site = 0) & (adjud_dt > mdy(&last_dsmb_date));
700        				tables infect_confirm / out = orig_finding_summary missing ;
701        				tables infect_confirm_adj /out = adj_finding_summary missing;
702        			run;

NOTE: There were 7 observations read from the data set WORK.ADJUDICATION.
      WHERE adjudicated and (agree_site=0) and (adjud_dt>MDY(4, 1, 2010));
NOTE: The data set WORK.ORIG_FINDING_SUMMARY has 3 observations and 3 variables.
NOTE: The data set WORK.ADJ_FINDING_SUMMARY has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

703        			
704        			
704      !    data compare_infect_confirm;	
705        				merge
706        					orig_finding_summary
707        					adj_finding_summary (rename = (infect_confirm_adj = infect_confirm  	count = count_adj 	percent = percent_adj))
708        				;
709        				by infect_confirm;
710        			
711        				if (_N_ = 1) then do;
712        					row = "Nosocomial infection confirmed?";
713        					display_1 = "== Locally ==";
714        					display_2 = "== Centrally ==";
715        					output;
716        				end;
717        			
718        				if count = . then count = 0; 	* some categories are missing ;
719        				if count_adj = . then count_adj = 0;
720        			
721        				row = "- " || put(infect_confirm, infect_confirm.);
722        				display_1 = compress(put(count,4.0)) || "/" || compress(&num_cases_not_agreed) || " (" ||
722      ! compress(put((count/&num_cases_not_agreed) * 100 , 4.1)) || "%)";
723        				display_2 = compress(put(count_adj,4.0)) || "/" || compress(&num_cases_not_agreed) || " (" ||
723      ! compress(put((count_adj/&num_cases_not_agreed) * 100, 4.1)) || "%)";
724        				output;
725        			run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      722:1   723:1   
NOTE: There were 3 observations read from the data set WORK.ORIG_FINDING_SUMMARY.
NOTE: There were 2 observations read from the data set WORK.ADJ_FINDING_SUMMARY.
NOTE: The data set WORK.COMPARE_INFECT_CONFIRM has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

726        	
727        	
728        		*** total number of altogether new infections found - data from 	nosocomial_adjudicated_new_infections.sas ***;
729        			
729      !    proc means data = glnd.adjudicated_new_infections;
730        				
                                                           The SAS System

731        				output out = new_infect sum(adjudicated_new_infect) = total_new_infect;
732        			run;

NOTE: There were 1 observations read from the data set GLND.ADJUDICATED_NEW_INFECTIONS.
NOTE: The data set WORK.NEW_INFECT has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 5.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

733        			
734        			
734      !    data new_infect;
735        				set new_infect;
736        			
737        				row = "Number of previously unreported infections found:";
738        				display_1 = "0"; 			***** DONE FOR March 2009 DSMB  compress(put(total_new_infect, 4.0));
739        				
740        			run;

NOTE: There were 1 observations read from the data set WORK.NEW_INFECT.
NOTE: The data set WORK.NEW_INFECT has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

741        	
742        			
743        	
744        		*** a blank row ***;
745        			
745      !    data blank_row;
746        				row = " ";
747        				display_1 = " ";
748        				display_2 = " ";
749        			run;

NOTE: The data set WORK.BLANK_ROW has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

750        			
751        			
752        		*** Stack the tables and print ***;
753        		*** STILL ADD: 	1. incident/prevalent summary *** ;
754        	
755        			
755      !    data glnd_rep.nosocomial_adj_summary_open;
756        				set 	adj_totals
757        						blank_row
758        					adj_overview
759        						blank_row
760        					compare_infect_confirm
761        						blank_row
                                                           The SAS System

762        					new_infect
763        				;
764        			keep row display_1 display_2;	
765        				label
766        					row = ' '
767        					display_1 = ' '
768        					display_2 = ' '
769        					;
770        			run;

NOTE: There were 2 observations read from the data set WORK.ADJ_TOTALS.
NOTE: There were 1 observations read from the data set WORK.BLANK_ROW.
NOTE: There were 3 observations read from the data set WORK.ADJ_OVERVIEW.
NOTE: There were 1 observations read from the data set WORK.BLANK_ROW.
NOTE: There were 5 observations read from the data set WORK.COMPARE_INFECT_CONFIRM.
NOTE: There were 1 observations read from the data set WORK.BLANK_ROW.
NOTE: There were 1 observations read from the data set WORK.NEW_INFECT.
NOTE: The data set GLND_REP.NOSOCOMIAL_ADJ_SUMMARY_OPEN has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

771        			
772        
773        	*ods pdf file = "/glnd/sas/reporting/nosocomial_adjudicated_summary_open.pdf" style = journal ;
774        	ods pdf file = "nosocomial_adjudicated_summary_open.pdf" style = journal ;
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_adjudicated_summary_open.pdf", printer "PDF".
775        			title "Summary of nosocomial infection adjudications since the last DSMB report";
776        			
776      !    proc print data = glnd_rep.nosocomial_adj_summary_open noobs label style(header) = [just=center];
777        				var row ;
778        
779        				label row='00'x
780           			   display_1='00'x
781           			   display_2='00'x;				var display_1 display_2 /style(data) = [just=center];
782        			run;

NOTE: There were 14 observations read from the data set GLND_REP.NOSOCOMIAL_ADJ_SUMMARY_OPEN.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.05 seconds
      

783        	ods pdf close;
NOTE: ODS PDF printed 1 page to /home/bwu2/spelling/nosocomial_adjudicated_summary_open.pdf.
784        	
785        			
785      !    proc print data = adjudication;
786        				where (adjudicated) & (agree_site = 0);
787        				var id infect_visitno infect_confirm_adj;
788        			run;

NOTE: There were 70 observations read from the data set WORK.ADJUDICATION.
      WHERE adjudicated and (agree_site=0);
NOTE: The PROCEDURE PRINT printed pages 7-8.
NOTE: PROCEDURE PRINT used (Total process time):
                                                           The SAS System

      real time           0.00 seconds
      cpu time            0.00 seconds
      

789        		
790        
791        	** Make a table of the pre-adjudication results, for those people who were adjudicated! **;
792        	
793        		
793      !   data adjudicated_people_before;
794        			set adjudication;
795        			where adjudicated & (adjud_dt > mdy(&last_dsmb_date));
796        		run;

NOTE: There were 12 observations read from the data set WORK.ADJUDICATION.
      WHERE adjudicated and (adjud_dt>MDY(4, 1, 2010));
NOTE: The data set WORK.ADJUDICATED_PEOPLE_BEFORE has 12 observations and 57 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

797        	
798        		%nosocomial_episode_table_open(datasource = adjudicated_people_before, filename = nosocomial_before_adj_open, n_study =
798      !  &n_adjudicated, custom_title = "Details of reported nosocomial infections for &n_adjudicated patients, prior to review")
798      ! ;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      798:209   798:246   798:57    798:94    798:157   798:194   798:2     798:39    
NOTE: There were 12 observations read from the data set WORK.ADJUDICATED_PEOPLE_BEFORE.
NOTE: The data set WORK.ADJUDICATED_PEOPLE_BEFORE has 12 observations and 62 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 7 observations read from the data set WORK.ADJUDICATED_PEOPLE_BEFORE.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_EPISODE has 7 observations and 49 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 7 observations read from the data set WORK.ADJUDICATED_PEOPLE_BEFORE.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 11 observations and 50 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 11 observations and 50 variables.
NOTE: DATA statement used (Total process time):
                                                           The SAS System

      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.EPISODE_INFECT has 12 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 9.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      


NOTE: There were 4 observations read from the data set WORK.EPISODE_INFECT.
      WHERE (site_code not = ' ') and (type_code not = ' ');
NOTE: The data set WORK.EPISODE_INFECT has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 7 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 7 observations and 49 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 7 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 7 observations and 49 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 7 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 31 observations and 6 variables.
NOTE: The PROCEDURE MEANS printed page 10.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      


NOTE: There were 5 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE (site_code not = ' ') and (type_code not = ' ') and (incident not = .);
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


                                                           The SAS System

NOTE: There were 1 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: The data set WORK.A has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 4 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_INFECT has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 4 observations read from the data set WORK.B.
NOTE: There were 4 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 11 observations and 50 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
                                                           The SAS System



NOTE: There were 5 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: There were 11 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      


NOTE: There were 11 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 11 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 11 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_SUMMARY has 11 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.27 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 11.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 7 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 7 observations and 49 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 7 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 4 observations and 49 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
                                                           The SAS System

      


NOTE: There were 4 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 12.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.06 seconds
      cpu time            0.05 seconds
      


NOTE: There were 2 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident not = .;
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
NOTE: The data set WORK.SUMMARY_TEMP has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.EPISODE_SUMMARY.
                                                           The SAS System

NOTE: There were 1 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set WORK.EPISODE_SUMMARY has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: Format $SITE_CODE has been output.

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Writing ODS PS output to DISK destination "/home/bwu2/spelling/nosocomial_before_adj_open.ps", printer "POSTSCRIPT".
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_before_adj_open.pdf", printer "PDF".

NOTE: There were 12 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: The data set WORK.EPISODE_SUMMARY has 12 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 12 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.07 seconds
      cpu time            0.08 seconds
      


NOTE: There were 12 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: The data set GLND_REP.NOSOCOMIAL_BEFORE_ADJ_OPEN has 12 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.02 seconds
      

NOTE: ODS PDF printed 1 page to /home/bwu2/spelling/nosocomial_before_adj_open.pdf.
NOTE: ODS PS printed 1 page to /home/bwu2/spelling/nosocomial_before_adj_open.ps.
799        
800        
801        
802        	** Now go through the changed infections and update those records **;
803        
804        	* reduce dataset to only those infections which have changed ;
805        	
805      !  data adj_changed;
806        		set adjudication;
807        	
808        		incident_prev = incident;
809        
810        		if (agree_site = 0) then do;
811        
812        			** SECTION 1 ** ;
813        			if (infect_confirm_adj ~= .) then do;
                                                                                                                      The SAS System

814        			
815        				infect_confirm = infect_confirm_adj;
816        				site_code = site_code_adj;
817        				type_code = type_code_adj;
818        			end;
819        			
820        
821        			if (dt_infect_adj ~= .) then do;
822        			
823        				*** update date of infection;
824        				dt_infect = dt_infect_adj;
825        			
826        				days_post_entry = dt_infect - dt_random;	
827        
828        			end;
829        
830        			if (cult_positive_adj ~= .) then cult_positive = cult_positive_adj;
831        
832        			*** recalculate incidence ;
833        				
834        				if ((infect_confirm = 1) | (infect_confirm = 2)) & (days_post_entry > 2) then incident = 1;
835        				else if ((infect_confirm = 1) | (infect_confirm = 2)) & (days_post_entry <= 2) then incident = 0;
836        
837        				* recode vars for non-infections;
838        				if (infect_confirm > 2) then incident = .;  
839        			
840        			* I am skipping the "new infection at the same site question" for now because it does have any bearing on this report.
841        				This is more of an interal check to ensure that the infection is truly unique. However, Section 1, Q3 (infect_confirm)
842        				pretty much answers this! ;
843        			
844        			
845        			** CHANGE ORGANISMS **;
846        			
847        			if (cult_a_no ~= .) then do;
848        			
849        				** ADD/CHANGE **;
850        				* cannot use CALL SYMPUT or macro variables here since they are saved only once at end of data step, not for each record! thus the huge repetition of code;
851        				if ~(cult_a_code in (. , 99)) & (cult_a_no = 1) then do; cult_org_code_1 = cult_a_code; org_spec_1 = cult_a_org;  end; * beta-lactamase producer not needed;
852        				if ~(cult_a_code in (. , 99)) & (cult_a_no = 2) then do; cult_org_code_2 = cult_a_code; org_spec_2 = cult_a_org;  end; * beta-lactamase producer not needed;
853        				if ~(cult_a_code in (. , 99)) & (cult_a_no = 3) then do; cult_org_code_3 = cult_a_code; org_spec_3 = cult_a_org;  end; * beta-lactamase producer not needed;
854        				if ~(cult_a_code in (. , 99)) & (cult_a_no = 4) then do; cult_org_code_4 = cult_a_code; org_spec_4 = cult_a_org;  end; * beta-lactamase producer not needed;
855        				if ~(cult_a_code in (. , 99)) & (cult_a_no = 5) then do; cult_org_code_5 = cult_a_code; org_spec_5 = cult_a_org;  end; * beta-lactamase producer not needed;
856        							
857        				** DELETE **;
858        				if (cult_a_code = 99) & (cult_a_no = 1) then do; cult_org_code_1 = .; org_spec_1 = ""; end; * beta-lactamase producer not needed;
859        				if (cult_a_code = 99) & (cult_a_no = 2) then do; cult_org_code_2 = .; org_spec_2 = ""; end; * beta-lactamase producer not needed;
860        				if (cult_a_code = 99) & (cult_a_no = 3) then do; cult_org_code_3 = .; org_spec_3 = ""; end; * beta-lactamase producer not needed;
861        				if (cult_a_code = 99) & (cult_a_no = 4) then do; cult_org_code_4 = .; org_spec_4 = ""; end; * beta-lactamase producer not needed;
862        				if (cult_a_code = 99) & (cult_a_no = 5) then do; cult_org_code_5 = .; org_spec_5 = ""; end; * beta-lactamase producer not needed;
863        				
864        			end;
865        			
866        			if (cult_b_no ~= .) then do;
867        			
868        				** ADD/CHANGE **;
869        				if ~(cult_b_code in (. , 99)) & (cult_b_no = 1) then do; cult_org_code_1 = cult_b_code; org_spec_1 = cult_b_org;  end; * beta-lactamase producer not needed;
870        				if ~(cult_b_code in (. , 99)) & (cult_b_no = 2) then do; cult_org_code_2 = cult_b_code; org_spec_2 = cult_b_org;  end; * beta-lactamase producer not needed;
871        				if ~(cult_b_code in (. , 99)) & (cult_b_no = 3) then do; cult_org_code_3 = cult_b_code; org_spec_3 = cult_b_org;  end; * beta-lactamase producer not needed;
                                                                                                                      The SAS System

872        				if ~(cult_b_code in (. , 99)) & (cult_b_no = 4) then do; cult_org_code_4 = cult_b_code; org_spec_4 = cult_b_org;  end; * beta-lactamase producer not needed;
873        				if ~(cult_b_code in (. , 99)) & (cult_b_no = 5) then do; cult_org_code_5 = cult_b_code; org_spec_5 = cult_b_org;  end; * beta-lactamase producer not needed;
874        							
875        				** DELETE **;
876        				if (cult_b_code = 99) & (cult_b_no = 1) then do; cult_org_code_1 = .; org_spec_1 = ""; end; * beta-lactamase producer not needed;
877        				if (cult_b_code = 99) & (cult_b_no = 2) then do; cult_org_code_2 = .; org_spec_2 = ""; end; * beta-lactamase producer not needed;
878        				if (cult_b_code = 99) & (cult_b_no = 3) then do; cult_org_code_3 = .; org_spec_3 = ""; end; * beta-lactamase producer not needed;
879        				if (cult_b_code = 99) & (cult_b_no = 4) then do; cult_org_code_4 = .; org_spec_4 = ""; end; * beta-lactamase producer not needed;
880        				if (cult_b_code = 99) & (cult_b_no = 5) then do; cult_org_code_5 = .; org_spec_5 = ""; end; * beta-lactamase producer not needed;
881        				
882        			end;			
883        			
884        			if (cult_c_no ~= .) then do;
885        			
886        				** ADD/CHANGE **;
887        				if ~(cult_c_code in (. , 99)) & (cult_c_no = 1) then do; cult_org_code_1 = cult_c_code; org_spec_1 = cult_c_org;  end; * beta-lactamase producer not needed;
888        				if ~(cult_c_code in (. , 99)) & (cult_c_no = 2) then do; cult_org_code_2 = cult_c_code; org_spec_2 = cult_c_org;  end; * beta-lactamase producer not needed;
889        				if ~(cult_c_code in (. , 99)) & (cult_c_no = 3) then do; cult_org_code_3 = cult_c_code; org_spec_3 = cult_c_org;  end; * beta-lactamase producer not needed;
890        				if ~(cult_c_code in (. , 99)) & (cult_c_no = 4) then do; cult_org_code_4 = cult_c_code; org_spec_4 = cult_c_org;  end; * beta-lactamase producer not needed;
891        				if ~(cult_c_code in (. , 99)) & (cult_c_no = 5) then do; cult_org_code_5 = cult_c_code; org_spec_5 = cult_c_org;  end; * beta-lactamase producer not needed;
892        							
893        				** DELETE **;
894        				if (cult_c_code = 99) & (cult_c_no = 1) then do; cult_org_code_1 = .; org_spec_1 = ""; end; * beta-lactamase producer not needed;
895        				if (cult_c_code = 99) & (cult_c_no = 2) then do; cult_org_code_2 = .; org_spec_2 = ""; end; * beta-lactamase producer not needed;
896        				if (cult_c_code = 99) & (cult_c_no = 3) then do; cult_org_code_3 = .; org_spec_3 = ""; end; * beta-lactamase producer not needed;
897        				if (cult_c_code = 99) & (cult_c_no = 4) then do; cult_org_code_4 = .; org_spec_4 = ""; end; * beta-lactamase producer not needed;
898        				if (cult_c_code = 99) & (cult_c_no = 5) then do; cult_org_code_5 = .; org_spec_5 = ""; end; * beta-lactamase producer not needed;
899        				
900        			end;
901        					
902        			** don't worry about text display here. do that in recycled table-layout program! **;
903        
904        		end;
905        
906        		format site_code_adj $site_code. type_code_adj $type_code.;
907        
908        	run;

NOTE: There were 236 observations read from the data set WORK.ADJUDICATION.
NOTE: The data set WORK.ADJ_CHANGED has 236 observations and 58 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.02 seconds
      

909        
910        	title "SHOWING CHANGED ORGANISMS ";
911        	
911      !  proc print data = adj_changed;
912        		var id infect_visitno agree_site cult_a_no cult_a_code cult_org_code_1 cult_org_code_2  cult_org_code_3 ;
913        	run;

NOTE: There were 236 observations read from the data set WORK.ADJ_CHANGED.
NOTE: The PROCEDURE PRINT printed pages 14-18.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      
                                                                                                                      The SAS System


914        
915        
916        /*
917        	proc print data = adj_changed;
918        		where agree_site = 0;
919        		var id infect_visitno infect_confirm infect_confirm_adj site_code site_code_adj type_code type_code_adj;
920        	run;
921        */
922        	
922      !  proc freq data = adj_changed;
923        		tables incident*incident_prev;
924        	run;

NOTE: There were 236 observations read from the data set WORK.ADJ_CHANGED.
NOTE: The PROCEDURE FREQ printed page 19.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

925        
926        
927        	* ADD IN ALTOGETHER NEWLY DISCOVERED INFECTIONS DURING ADJUDICATION!
928        	;
929        	
929      !  proc sort data= glnd.plate52; by id dfseq; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

929      !                                                 
930        	
930      !  proc sort data= glnd.plate53; by id dfseq; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

930      !                                                 
931        	
931      !  proc sort data= glnd.plate54; by id dfseq; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

931      !                                                 
932        
933        	* gather dates and infection data from forms;
934        
                                                                                                                      The SAS System

935        	
935      !  data new_noso ;
936        		merge		glnd.plate52 (in = frozen keep = id dfc dfseq dt_infect cult_obtain cult_positive cult_org_code_1 org_spec_1 rename =(dfc = adjud_dt))
937        				glnd.plate53 (keep = id dfseq cult_org_code_2 cult_org_code_3 cult_org_code_4 cult_org_code_5 org_spec_2 org_spec_3 org_spec_4 org_spec_5)
938        				glnd.plate54 (keep = id dfseq site_code type_code)
939        
940        				;
941        		by id dfseq; 		* <--- Note that this dfseq is not in sequence with "infect_visitno". this should be fixed using max (infect_visitno) for each ID + 1;
942        		
943        		
944        		*** ADD THESE VARIABLES TO EACH NEW INFECTION OBSERVATION ***;
945        		infect_confirm = 1;
946        		adjudicated = 1;
947        		adjudicated_new_infect = 1;
948        		*** END ***;
949        
950        
951        		* determine if prevalent or incident.
952        			* incident if yes to nosocomial (pg 3) and more than 2 calendar days after randomization (though technically 48 hours after time of study drug starting, we do not record time of infection onset, nor is this something that is possible to
952      !  determine) ;
953        			* prevalent if yes to nosocomial (pg 3) and less than 2 calendar days after randomization (though technically 48 hours after time of study drug starting, we do not record time of infection onset, nor is this something that is possible
953      ! to determine) ;
954        	
955        			* determine infection onset ;	
956        			days_post_entry = dt_infect - dt_random;	
957        
958        			if ((infect_confirm = 1) | (infect_confirm = 2)) & (days_post_entry > 2) then incident = 1;
959        			else if ((infect_confirm = 1) | (infect_confirm = 2)) & (days_post_entry <= 2) then incident = 0;
960        
961        
962        
963        		if lowcase(scan(strip(org_spec_1),1))='serratia' then org_spec_1='Serratia marcescens';
964        		if lowcase(scan(strip(org_spec_2),1))='serratia' then org_spec_2='Serratia marcescens';
965        		if lowcase(scan(strip(org_spec_3),1))='serratia' then org_spec_3='Serratia marcescens';
966        		if lowcase(scan(strip(org_spec_4),1))='serratia' then org_spec_4='Serratia marcescens';
967        		if lowcase(scan(strip(org_spec_5),1))='serratia' then org_spec_5='Serratia marcescens';
968        		
969        	
970        	run;

NOTE: Variable dt_random is uninitialized.
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      2 at 956:32   
NOTE: There were 2 observations read from the data set GLND.PLATE52.
NOTE: There were 2 observations read from the data set GLND.PLATE53.
NOTE: There were 2 observations read from the data set GLND.PLATE54.
NOTE: The data set WORK.NEW_NOSO has 2 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

971        	
972        
973        	
974        title "new adjudicated infections";
975        proc contents data = adj_changed;
                                                                                                                      The SAS System

976        run;

NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      
NOTE: The PROCEDURE CONTENTS printed pages 20-21.

977        
978        
979        * deal with altogether newly reported infections - CREATE GLND.NOSOCOMIAL_ADJUDICATED_NEW_INFECT.SAS7BDAT? ;
980        
981        
982        
983        ** NEXT. 1. produce permanent dataset of all infection data, post-adjudication (ADD IN NEW INFECTIONS) **
984        	2. feed both pre and post dataset to a table-reporting by-cases macro that reports on the infections that were adjudicated ;
985        
986        
987        
988        
989        ** PRODUCE THE FULL PRE-ADJUDICATION NOSOCOMIAL INFECTION EPISODE TABLE, AS ORIGINALLY DONE IN NOSOCOMIAL_OPEN.SAS **;
990        ** discountinued for March 2009 report - we now report this table on the hybrid dataset that is both adjudicated and not **;
991        *	%nosocomial_episode_table_open(datasource = glnd_rep.suspected_noso_before_adj, filename = nosocomial_episode_table_open, n_study = &n_study_1 , custom_title = "All reported infections for &n_study patients - not adjudicated");
992        
993        	
994        proc print data = glnd_rep.suspected_noso_before_adj;
995        	title "People with BSI";
996        	where compress(site_code) = "BSI";
997        	var id ;
998        run;

NOTE: There were 41 observations read from the data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ.
      WHERE COMPRESS(site_code)='BSI';
NOTE: The PROCEDURE PRINT printed page 22.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

999        
1000       title;
1001       
1002       ** Make a table of the post-adjudication results, for those people who were adjudicated! **;
1003       	
1004       		
1004     !   data glnd_rep.suspected_noso_after_adj;
1005       			set
1006       				adj_changed							/* ADJUDICATED CHANGES TO REPORTED INFECTIONS */
1007       				new_noso	;			/* NEW INFECTIONS DISCOVERED THROUGH ADJUDICATION PROCESS */	
1008       				* glnd.adjudicated_new_infections;	/* OLD VERSION  */
1009       
1010       			where adjudicated;
1011       		run;

NOTE: There were 138 observations read from the data set WORK.ADJ_CHANGED.
      WHERE adjudicated;
NOTE: There were 2 observations read from the data set WORK.NEW_NOSO.
      WHERE adjudicated;
                                                                                                                      The SAS System

NOTE: The data set GLND_REP.SUSPECTED_NOSO_AFTER_ADJ has 140 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.01 seconds
      

1012       	
1013       title "wbh";
1014       
1015       proc print data = glnd_rep.suspected_noso_after_adj;
1016       run;

NOTE: There were 140 observations read from the data set GLND_REP.SUSPECTED_NOSO_AFTER_ADJ.
NOTE: The PROCEDURE PRINT printed pages 23-44.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

1017       
1018       	
1019       		
1019     !   data adj_new;
1020       			set glnd_rep.suspected_noso_after_adj;
1021       			where (adjud_dt > mdy(&last_dsmb_date));
1022       		run;

NOTE: There were 12 observations read from the data set GLND_REP.SUSPECTED_NOSO_AFTER_ADJ.
      WHERE adjud_dt>MDY(4, 1, 2010);
NOTE: The data set WORK.ADJ_NEW has 12 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1023       		%nosocomial_episode_table_open(datasource = adj_new, filename = nosocomial_after_adj_open, n_study = &n_adjudicated, custom_title = "Details of confirmed nosocomial infections for &n_adjudicated patients, after review");

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1023:209   1023:246   1023:57    1023:94    1023:157   1023:194   1023:2     1023:39    
NOTE: There were 12 observations read from the data set WORK.ADJ_NEW.
NOTE: The data set WORK.ADJ_NEW has 12 observations and 65 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 6 observations read from the data set WORK.ADJ_NEW.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_EPISODE has 6 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 6 observations read from the data set WORK.ADJ_NEW.
      WHERE infect_confirm in (1, 2);
                                                                                                                      The SAS System

NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 11 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 11 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.EPISODE_INFECT has 10 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 45.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      


NOTE: There were 3 observations read from the data set WORK.EPISODE_INFECT.
      WHERE (site_code not = ' ') and (type_code not = ' ');
NOTE: The data set WORK.EPISODE_INFECT has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 6 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 6 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 6 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 5 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 27 observations and 6 variables.
NOTE: The PROCEDURE MEANS printed page 46.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      

                                                                                                                      The SAS System


NOTE: There were 4 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE (site_code not = ' ') and (type_code not = ' ') and (incident not = .);
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: The data set WORK.A has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 3 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 3 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_INFECT has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 3 observations read from the data set WORK.B.
NOTE: There were 3 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
                                                                                                                      The SAS System

      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 11 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: There were 11 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      


NOTE: There were 11 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 11 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_SUMMARY has 11 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      


NOTE: There were 5 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 47.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 6 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 6 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
                                                                                                                      The SAS System

      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 6 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 3 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 48.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      


NOTE: There were 2 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident not = .;
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

                                                                                                                      The SAS System


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
NOTE: The data set WORK.SUMMARY_TEMP has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: There were 1 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set WORK.EPISODE_SUMMARY has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: Format $SITE_CODE is already on the library.
NOTE: Format $SITE_CODE has been output.

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Writing ODS PS output to DISK destination "/home/bwu2/spelling/nosocomial_after_adj_open.ps", printer "POSTSCRIPT".
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_after_adj_open.pdf", printer "PDF".

NOTE: There were 12 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: The data set WORK.EPISODE_SUMMARY has 12 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 12 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: The PROCEDURE PRINT printed page 49.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      


NOTE: There were 12 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: The data set GLND_REP.NOSOCOMIAL_AFTER_ADJ_OPEN has 12 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.01 seconds
      

NOTE: ODS PDF printed 1 page to /home/bwu2/spelling/nosocomial_after_adj_open.pdf.
NOTE: ODS PS printed 1 page to /home/bwu2/spelling/nosocomial_after_adj_open.ps.
1024       
1025       
1026       
1027       ** Sort pre and post-adjudication datasets, create a hybrid infection dataset that contains the adjudicated records for those adjudicated
1028       	and the non-adjudicated records for those IDs not yet adjudicated ;
                                                                                                                      The SAS System

1029       
1030       	
1030     !  proc sort data =  glnd_rep.suspected_noso_before_adj; by id site_code type_code dt_infect ; run;

NOTE: There were 236 observations read from the data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ.
NOTE: The data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ has 236 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.22 seconds
      cpu time            0.02 seconds
      

1031       	
1031     !  proc sort data =  glnd_rep.suspected_noso_after_adj; by id site_code type_code dt_infect ; run;

NOTE: There were 140 observations read from the data set GLND_REP.SUSPECTED_NOSO_AFTER_ADJ.
NOTE: The data set GLND_REP.SUSPECTED_NOSO_AFTER_ADJ has 140 observations and 60 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.02 seconds
      

1032       
1033       	
1033     !  data non_adj_folks;
1034       		merge 	glnd_rep.suspected_noso_before_adj
1035       				glnd_rep.suspected_noso_after_adj (in = adjudicated keep = id)
1036       		;
1037       
1038       		by id;	
1039       		
1040       		if adjudicated then delete;
1041       
1042       	run;

NOTE: MERGE statement has more than one data set with repeats of BY values.
NOTE: There were 236 observations read from the data set GLND_REP.SUSPECTED_NOSO_BEFORE_ADJ.
NOTE: There were 140 observations read from the data set GLND_REP.SUSPECTED_NOSO_AFTER_ADJ.
NOTE: The data set WORK.NON_ADJ_FOLKS has 98 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

1043       
1044       	* this is the patient infections, with the adjudicated infection data for those people adjudicated ;
1045       	
1045     !  data glnd_rep.all_infections_with_adj;
1046       		set
1047       			non_adj_folks
1048       			glnd_rep.suspected_noso_after_adj
1049       			;
1050       	run;

NOTE: There were 98 observations read from the data set WORK.NON_ADJ_FOLKS.
NOTE: There were 140 observations read from the data set GLND_REP.SUSPECTED_NOSO_AFTER_ADJ.
NOTE: The data set GLND_REP.ALL_INFECTIONS_WITH_ADJ has 238 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.27 seconds
                                                                                                                      The SAS System

      cpu time            0.02 seconds
      

WARNING: Apparent symbolic reference N_STUDY not resolved.
1051       
1052       
1053       	%nosocomial_episode_table_open(datasource = glnd_rep.all_infections_with_adj, filename = nosocomial_episode_table_open, n_study = &n_study_1 , custom_title = "All reported infections for &n_study patients - with adjudications applied");

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1053:209   1053:246   1053:57    1053:94    1053:157   1053:194   1053:2     1053:39    
NOTE: There were 238 observations read from the data set GLND_REP.ALL_INFECTIONS_WITH_ADJ.
NOTE: The data set GLND_REP.ALL_INFECTIONS_WITH_ADJ has 238 observations and 65 variables.
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.03 seconds
      


NOTE: There were 149 observations read from the data set GLND_REP.ALL_INFECTIONS_WITH_ADJ.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_EPISODE has 149 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds
      


NOTE: There were 149 observations read from the data set GLND_REP.ALL_INFECTIONS_WITH_ADJ.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 211 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.02 seconds
      


NOTE: There were 211 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 211 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      


NOTE: There were 99 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.EPISODE_INFECT has 43 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 50.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      


NOTE: There were 17 observations read from the data set WORK.EPISODE_INFECT.
      WHERE (site_code not = ' ') and (type_code not = ' ');
NOTE: The data set WORK.EPISODE_INFECT has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
                                                                                                                      The SAS System

      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 149 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds
      


NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 142 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.02 seconds
      


NOTE: There were 142 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 141 observations and 6 variables.
NOTE: The PROCEDURE MEANS printed pages 51-52.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.06 seconds
      cpu time            0.05 seconds
      


NOTE: There were 34 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE (site_code not = ' ') and (type_code not = ' ') and (incident not = .);
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 34 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 17 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 17 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 17 observations read from the data set WORK.A.
                                                                                                                      The SAS System

NOTE: The data set WORK.A has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 17 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 17 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_INFECT has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 17 observations read from the data set WORK.A.
NOTE: There were 17 observations read from the data set WORK.B.
NOTE: There were 17 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      


NOTE: There were 211 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 211 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      


NOTE: There were 24 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: There were 211 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 211 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 211 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 211 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


                                                                                                                      The SAS System

NOTE: There were 211 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_SUMMARY has 211 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 99 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 53.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 149 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      


NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 94 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      


NOTE: There were 94 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 54.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      


NOTE: There were 2 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident not = .;
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
                                                                                                                      The SAS System



NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
NOTE: The data set WORK.SUMMARY_TEMP has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 211 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: There were 1 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set WORK.EPISODE_SUMMARY has 212 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: Format $SITE_CODE is already on the library.
NOTE: Format $SITE_CODE has been output.

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Writing ODS PS output to DISK destination "/home/bwu2/spelling/nosocomial_episode_table_open.ps", printer "POSTSCRIPT".
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_episode_table_open.pdf", printer "PDF".

NOTE: There were 212 observations read from the data set WORK.EPISODE_SUMMARY.
                                                                                                                      The SAS System

NOTE: The data set WORK.EPISODE_SUMMARY has 155 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 155 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: The PROCEDURE PRINT printed pages 55-58.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      


NOTE: There were 155 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: The data set GLND_REP.NOSOCOMIAL_EPISODE_TABLE_OPEN has 155 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.02 seconds
      

NOTE: ODS PDF printed 6 pages to /home/bwu2/spelling/nosocomial_episode_table_open.pdf.
NOTE: ODS PS printed 6 pages to /home/bwu2/spelling/nosocomial_episode_table_open.ps.
1054       
1055       
1056       *** 10/30/08 - I need a listing of the BSI in the adjudicated dataset ;
1057       
1058       ods rtf file = "/glnd/sas/reporting/BSI.rtf" style = journal;
NOTE: Writing RTF Body file: /glnd/sas/reporting/BSI.rtf
1059       
1060       	
1060     !  proc print data = glnd_rep.suspected_noso_after_adj;
1061       		var id agree_site site_code site_code_adj;
1062       	run;

NOTE: There were 140 observations read from the data set GLND_REP.SUSPECTED_NOSO_AFTER_ADJ.
NOTE: The PROCEDURE PRINT printed pages 59-61.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

1063       	
1064       ods rtf close;
1065       
1066       ** 8/13/09 - I need a text listing of all infections "Other" infections ;
1067       
1068       options orientation = landscape;
1069       	
1070       ods rtf file = "/glnd/sas/reporting/nosocomial_other_infection_listing.rtf" style = journal;
NOTE: Writing RTF Body file: /glnd/sas/reporting/nosocomial_other_infection_listing.rtf
1071       	title "Listing of all organisms associated with 'other' infections - 9/9/09";
1072       	
1072     !  proc print data = glnd_rep.all_infections_with_adj;
1073       		where (cult_org_code_1 = 21) | (cult_org_code_2 = 21) | (cult_org_code_3 = 21) | (cult_org_code_4 = 21) | (cult_org_code_5 = 21) ;
1074       		var id dfseq infect_confirm site_code org_spec_1  org_spec_2 org_spec_3 org_spec_4 org_spec_5;
1075       	run;
                                                                                                                      The SAS System


NOTE: There were 53 observations read from the data set GLND_REP.ALL_INFECTIONS_WITH_ADJ.
      WHERE (cult_org_code_1=21) or (cult_org_code_2=21) or (cult_org_code_3=21) or (cult_org_code_4=21) or (cult_org_code_5=21);
NOTE: The PROCEDURE PRINT printed pages 62-64.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

1076       ods rtf close;
1077       
1078       /*
1079       	proc print data = glnd_rep.suspected_noso_before_adj ;
1080       		where id = 21039;
1081       	run;
1082       
1083       
1084       proc contents data=glnd_rep.all_infections_with_adj;run;
1085       
1086       */
1087       

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           7.60 seconds
      cpu time            3.37 seconds
      

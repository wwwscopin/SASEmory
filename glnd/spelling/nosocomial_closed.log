1                                                          The SAS System                              13:35 Friday, October 8, 2010

NOTE: Copyright (c) 2002-2003 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) 9.1 (TS1M3)
      Licensed to EMORY UNIVERSITY - T&R, Site 0014217002.
NOTE: This session is executing on the SunOS 5.9 platform.



NOTE: SAS 9.1.3 Service Pack 4

You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.07 seconds
      cpu time            0.07 seconds
      

NOTE: AUTOEXEC processing beginning; file is /home/bwu2/spelling/autoexec.sas.

NOTE: Libref RAND was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/randomization
NOTE: Libref GLND was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas
NOTE: Libref LIBRARY was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /home/bwu2/spelling
NOTE: Libref GLND_DF was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/reporting/df_reporting
NOTE: Libref GLND_EXT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/external_data
NOTE: Libref GLND_REP was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/reporting

NOTE: AUTOEXEC processing completed.

1          /* nosocomial_closed.sas 
2           *
3           * Unlike the two OPEN nosocomial programs (by_organism_center, _adjudicated_open), this program does both the organism
2                                                          The SAS System                              13:35 Friday, October 8, 2010

4           * and episode tables in one program, simp
5          ly inheriting the revised "adjudicated" dataset from "nosocomial_adjudicated_open.sas"
6           */
7          
8          	* capture sample size of total people in each trt group; 
9          		
9        !   proc means data= glnd.george;
10         			where (treatment = 1);
11         			output out= n_A n(id) = id_n;
12         		run;

NOTE: There were 64 observations read from the data set GLND.GEORGE.
      WHERE treatment=1;
NOTE: The data set WORK.N_A has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 1.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

12       !       
13         		
14         		
14       !   proc means data= glnd.george;
15         			where (treatment = 2);
16         			output out= n_B n(id) = id_n;
17         		run;

NOTE: There were 66 observations read from the data set GLND.GEORGE.
      WHERE treatment=2;
NOTE: The data set WORK.N_B has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 2.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

17       !       
18         				
19         		
19       !   data _null_;
20         			set n_A;
21         	
22         			call symput('n_A', compress(put(id_n, 3.0)));
23         		run;

NOTE: There were 1 observations read from the data set WORK.N_A.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

23       !       
24         		
25         		
25       !    data _null_;
26         			set n_B;
27         	
3                                                          The SAS System                              13:35 Friday, October 8, 2010

28         			call symput('n_B', compress(put(id_n, 3.0)));
29         		run;

NOTE: There were 1 observations read from the data set WORK.N_B.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29       !       
30         
31         
32         
33         %let group = "A";
34         
35         %macro closed;
36         
37         %do x = 1 %to 2;
38         
39         proc sort data= glnd.george; by id; run;
40         
41         
42         * ASSIGN THE TREATMENT TO THE VARIABLE GROUP, ACCORDING TO THE FORMAT;
43         data _null_;
44         	num = input("&x", 1.);
45         	call symput('group', put(num, trt.));
46         run;
47         
48         proc sort data = glnd_rep.all_infections_with_adj; by id; run;
49         
50         
51          * 1st Table - # infections(patients) by organism type "Table 13" in 2/9/2007 MOO ;
52         
53         	
54         	data noso;
55         		merge 		glnd_rep.all_infections_with_adj     /* this is the key 7/30/2009 update! we are inheriting the adjudicated
55       ! dataset! */
56         				glnd.george (keep = id treatment)
57         			;
58         	
59         		by id;
60         
61         
62         /* This only work for before the cult_org_code_1 correction was made */
63         /*********************************************************************/
64         if org_spec_1="Cytomegalovirus" then cult_org_code_1=23;
65         
66         
67         
68         			* nosocomial_adjudicated_open.sas prepares the data for an episode table, but not an organism one
69         			  the code below is used by both open and closed programs to prepare for an organism table;
70         		
71         
72         			* Set up text field to contain organism format. need to have text rather than numeric so can adjust the "other people"
72       ! ;
73         			organism_1 = put(cult_org_code_1, cult_org_code.);
74         			organism_2 = put(cult_org_code_2, cult_org_code.);
75         			organism_3 = put(cult_org_code_3, cult_org_code.);
4                                                          The SAS System                              13:35 Friday, October 8, 2010

76         			organism_4 = put(cult_org_code_4, cult_org_code.);
77         			organism_5 = put(cult_org_code_5, cult_org_code.);
78         
79         			** ADDED 7/30/2008 **;
80         			if org_spec_1 = "" then org_spec_1 = "(not specified)";
81         			if org_spec_2 = "" then org_spec_2 = "(not specified)";
82         			if org_spec_3 = "" then org_spec_3 = "(not specified)";
83         			if org_spec_4 = "" then org_spec_4 = "(not specified)";
84         			if org_spec_5 = "" then org_spec_5 = "(not specified)";
85         
86         			* Adjust "other" categories to include the name of the organism;
87         			if (cult_org_code_1 in (9, 20, 21,22,23)) then organism_1= trim(put(organism_1, $30.)) || " - " ||
87       ! trim(put(org_spec_1, $35.)) ;
88         			if (cult_org_code_2 in (9, 20, 21,22,23)) then organism_2= trim(put(organism_2, $30.)) || " - " ||
88       ! trim(put(org_spec_2, $35.)) ;
89         			if (cult_org_code_3 in (9, 20, 21,22,23)) then organism_3= trim(put(organism_3, $30.)) || " - " ||
89       ! trim(put(org_spec_3, $35.)) ;
90         			if (cult_org_code_4 in (9, 20, 21,22,23)) then organism_4= trim(put(organism_4, $30.)) || " - " ||
90       ! trim(put(org_spec_4, $35.)) ;
91         			if (cult_org_code_5 in (9, 20, 21,22,23)) then organism_5= trim(put(organism_5, $30.)) || " - " ||
91       ! trim(put(org_spec_5, $35.)) ;
92         
93         
94         			* remove repeat organisms from the same infection report, comparing the text labels, working backwards from the 5th
94       ! organism ;
95         			if (organism_5 = organism_4) then do; organism_5 = .; cult_org_code_5 = .; org_spec_5 = .; end;
96         			if (organism_4 = organism_3) then do; organism_4 = .; cult_org_code_4 = .; org_spec_4 = .; end;
97         			if (organism_3 = organism_2) then do; organism_3 = .; cult_org_code_3 = .; org_spec_3 = .; end;
98         			if (organism_2 = organism_1) then do; organism_2 = .; cult_org_code_2 = .; org_spec_2 = .; end;
99          
100        			
101        		
102        		label
103        			incident = "Incident"
104        			days_post_entry = "Days post study entry"
105        			cult_positive="Culture positive?"
106        			cult_obtain="Culture obtained?"
107        	        	site_code="Site code"
108        	        	type_code="Type code"
109        			infect_confirm="Infection confirmed?"
110        			center = "Center"
111        
112        			organism_1 ="1st cult. org."
113        			organism_2 ="2nd cult. org."
114        			organism_3 ="3rd cult. org."
115        			organism_4 ="4th cult. org."
116        			organism_5 ="5th cult. org."
117        			;
118        	run;
119        
120        
121        	* SUBSET DATA BY TRT;		
122        	data noso;
123        		set noso;
124        		where (treatment = &x);
125        
126        		drop treatment;
127        	run;
5                                                          The SAS System                              13:35 Friday, October 8, 2010

128        
129        
130        
131        	* capture sample size of number of suspected infections;
132        		proc means data= noso;
133        			output out= noso_n n(id) = id_n;
134        		run;
135        		data _null_;
136        			set noso_n;
137        	
138        			call symput('n_susp_infec', put(id_n, 3.0));
139        		run;
140        
141        	* capture sample size of total people on study; 
142        		proc means data= glnd.george;
143        			where (treatment = &x);
144        			output out= study_n n(id) = id_n;
145        		run;
146        		data _null_;
147        			set study_n;
148        	
149        			call symput('n_study', put(id_n, 3.0));
150        			if &x = 1 then call symput('n_A', put(id_n, 3.0));
151        			if &x = 2 then call symput('n_B', put(id_n, 3.0));
152        		run;
153        
154        
155        	options ls=100 nodate  	/*papersize= ("15", "8.5")*/  orientation = landscape center nonumber formdlim='-' formchar =
155      ! "|----|+|---+=|-/\<>*";
156        			* nodate contents;
157        proc sort data= noso; by id  days_post_entry infect_confirm   ; run;
158        	/*****
159        	 PRODUCE BY CENTER LISTNG
160        	* to do: use a macro to go by center, get rid of by-line, make a custom one with sample size for each center ;
161        	
162        
163        	*ods pdf file = "/glnd/sas/reporting/nosocomial_listings_open.pdf" style = journal startpage=no ;
164        	ods pdf file = "nosocomial_listings_open.pdf" style = journal startpage=no ;
165        		title "GLND - Summary of Suspected Nosocomial Infections  (total = &n_susp_infec, n = &n_study)";
166        		
167        		proc print data= noso noobs label width=minimum style(table)= [font_width = compressed ];
168        			id center;
169        			by center;
170        			var id infect_confirm incident days_post_entry  cult_obtain cult_positive organism_1 organism_2 organism_3 organism_4
170      ! organism_5 
171        				site_code type_code;
172        			format center center.;
173        		run;
174        	ods pdf close;
175        	*****/
176        
177        
178        	/* PRODUCE BY ORGANISM TABLE */
179        
180        	* go through data, currently arranged on a per-episode basis, and stack by organism ;
181        	data by_organism;
182        		set noso;
183        
6                                                          The SAS System                              13:35 Friday, October 8, 2010

184        		where (infect_confirm in (1,2)) & (cult_positive=1); * only look at positive infections with positive cultures ; 
185        
186        		* work backwards from oganism_5,  ... ;
187        		if cult_org_code_5 ~= . then do; organism = organism_5; cult_org_code = cult_org_code_5; org_spec = org_spec_5; output;
187      !  end;
188        		if cult_org_code_4 ~= . then do; organism = organism_4; cult_org_code = cult_org_code_4; org_spec = org_spec_4; output;
188      !  end;
189        		if cult_org_code_3 ~= . then do; organism = organism_3; cult_org_code = cult_org_code_3; org_spec = org_spec_3; output;
189      !  end;
190        		if cult_org_code_2 ~= . then do; organism = organism_2; cult_org_code = cult_org_code_2; org_spec = org_spec_2; output;
190      !  end;
191        		if cult_org_code_1 ~= . then do; organism = organism_1; cult_org_code = cult_org_code_1; org_spec = org_spec_1; output;
191      !  end;
192        			* every record has at least the first organism;
193        		
194        		drop organism_1 organism_2 organism_3 organism_4 organism_5 cult_org_code_1 cult_org_code_2 cult_org_code_3
194      ! cult_org_code_4 cult_org_code_5
195        			org_spec_1 org_spec_2 org_spec_3 org_spec_4 org_spec_5;
196        	run;	
197        	
198        
199        
200        		* handle non "other" types of infections first, using numeric codes ;
201        
202        			* get counts of infections, by organism type;
203        				proc sort data= by_organism; by incident; run;			
204        				proc means data = by_organism n  ;
205        					where (cult_org_code ~= 23); * will process others separately;
206        					by incident;
207        					class cult_org_code;
208        					var id ;
209        
210        					output out = infects_out n(cult_org_code) = num_infect;
211        				run;
212        				* clean up output dataset ;	
213        				data infects_out;
214        					set infects_out;
215        					where cult_org_code ~= .;
216        					drop _type_ _freq_;
217        				run;
218        			
219        			* get count of people infected, by organism type ;
220        			* remove repeat IDs within each organism code;
221        				proc sort data= by_organism; by incident cult_org_code id; run;		* conveniently already sorted by incident ;
222        				data people_infec;
223        					set by_organism;
224        					where (cult_org_code ~= 23); * will process others separately;
225        					by incident cult_org_code id;
226        
227        					if ~first.id then delete; * make sure theres one record for each person within this type of infection ;
228        				run;
229        				proc sort data= people_infec; by incident; run;		
230        
231        				proc means data = people_infec n  ;
232        					by incident;
233        					class cult_org_code;
234        					var id ;
235        
7                                                          The SAS System                              13:35 Friday, October 8, 2010

236        					output out = patients_out n(cult_org_code) = num_patients;
237        				run;
238        				* clean up output dataset ;	
239        				data patients_out;
240        					set patients_out;
241        					where cult_org_code ~= .;
242        					drop _type_ _freq_;
243        				run;
244        
245        			* merge patient and infection totals, for prevalent and incident, side-by-side ;
246        				data total_prev;
247        					set	patients_out (rename = (num_patients = prev_patients)) ;
248        					by cult_org_code;
249        					where incident = 0;
250        				
251        					
252        				run;
253        	
254        				data total_inc;
255        					merge 	infects_out  (rename = (num_infect = inc_infect ))
256        							patients_out (rename = (num_patients = inc_patients ));
257        					by cult_org_code;
258        					where incident = 1;
259        				run;
260        				
261        				data total;	
262        					merge total_inc total_prev;
263        					by cult_org_code;
264        
265        					drop incident;
266        				run;
267        				
268        
269        			proc print data= total;
270        			run;
271        
272        
273        		* merge these summary numbers back with the blank gram+, gram-, fungus tables;
274        
275        		/* Create pieces by organism types */
276        		
277        		* blank tables first ;
278        		data all_codes;
279        			do i = 1 to 23;
280        				cult_org_code = i;
281        				output;
282        			end;	
283        
284        			drop i;
285        		run;	
286        		
287        
288        		* gram+ bacteria (codes 1-7, 11, 16,21);
289        		data gram_pos;
290        			merge all_codes 
291        				total	
292        					;
293        			by cult_org_code;
8                                                          The SAS System                              13:35 Friday, October 8, 2010

294        			where cult_org_code in (1,2,3,4,5,6,7,11,16,21);
295        			type = "Gram+ Bacteria     ";  * spaces are here so that the variable can hold longer strings later ;
296        			organism = put(cult_org_code, cult_org_code.);
297        		run;
298        
299        		* gram- bacteria (codes: 8-10, 12-15,22);
300        		* however, we want codes 8 and 9 last, so that we can append the klebsiella other data;
301        		data gram_neg;	
302        			merge all_codes 
303        				total	
304        					;
305        			by cult_org_code;
306        			where cult_org_code in (10,12,13,14,15);
307        		run;
308        		data gram_neg_1;
309        			merge all_codes 
310        				total	
311        					;
312        			by cult_org_code;
313        		
314        			where cult_org_code in (8,9) ;
315        		run;
316        
317        		data gram_neg_2;
318        			merge all_codes 
319        				total	
320        					;
321        			by cult_org_code;
322        		
323        			where cult_org_code=22 ; 
324        		run;
325        
326        		data gram_neg;
327        			set gram_neg gram_neg_1 gram_neg_2;
328        		
329        			type = "Gram- Bacteria";
330        		organism = put(cult_org_code, cult_org_code.);
331        		run;
332        		
333        
334        		* Fungal species (codes 17-20);
335        		data fungus;	
336        			merge all_codes 
337        				total	
338        					;
339        			by cult_org_code;
340        			where cult_org_code in (17,18,19,20);
341        			organism = put(cult_org_code, cult_org_code.);
342        			
343        			if cult_org_code = 20 then	organism = put(cult_org_code, cult_org_code.) || ":";
344        
345        			type= "Fungal Species";
346        		run;
347        
348        
349        		/* Now that we have all three main groupings, we will now repeat the process above on the 3 other categories, but
349      ! performing 
350        			operations on the three text strings, not the organism code
9                                                          The SAS System                              13:35 Friday, October 8, 2010

351        
352        			The code is pasted, overwriting the previous datasets, with little adjustment */
353        
354        			* get counts of infections, by organism type;
355        				proc sort data= by_organism; by incident; run;			
356        				proc means data = by_organism n  ;
357        					where (cult_org_code in (9,20,21,22,23));
358        					by incident;
359        					class organism; * by the text description of the organism, not the number ;
360        					var id ;
361        
362        					output out = infects_out n(cult_org_code) = num_infect;
363        				run;
364        			
365        				* clean up output dataset ;	
366        				data infects_out;
367        					set infects_out;
368        					where _TYPE_ = 1;
369        					*where (organism ~= ".") | (trim(organism) ~= " ");
370        				
371        					drop _type_ _freq_;
372        				run;
373        			
374        			* get count of people infected, by organism type ;
375        			* remove repeat IDs within each organism code;
376        				
377        				proc sort data= by_organism; by incident organism id; run;		
378        				data people_infec;
379        					set by_organism;
380        					where (cult_org_code in (9,20,21,22,23));
381        					by incident organism id;
382        
383        					if ~first.id  then delete; * make sure theres one record for each person within this type of infection ;
384        
385        				run;
386        				proc sort data= people_infec; by incident; run;		
387        
388        				proc means data = people_infec n  ;
389        					where (cult_org_code in (9,20,21,22,23));
390        					by incident;
391        					class organism;
392        					var id ;
393        
394        					output out = patients_out n(cult_org_code) = num_patients;
395        				run;
396        				* clean up output dataset ;	
397        				data patients_out;
398        					set patients_out;
399        					where (organism ~= ".") | (trim(organism) ~= " ");
400        					drop _type_ _freq_;
401        				run;
402        
403        			* merge patient and infection totals, for prevalent and incident, side-by-side ;
404        				data total_prev;
405        					set	patients_out (rename = (num_patients = prev_patients)) ;
406        					by organism;
407        					where incident = 0;
408        				
10                                                         The SAS System                              13:35 Friday, October 8, 2010

409        					
410        				run;
411        	
412        				data total_inc;
413        					merge 	infects_out  (rename = (num_infect = inc_infect ))
414        							patients_out (rename = (num_patients = inc_patients ));
415        					by organism;
416        					where incident = 1;
417        				run;
418        				
419        				
420        				proc sort data= by_organism; by organism; run;
421        
422        		
423        				* 8/9/09 - to ensure a 1:1 merge, we must take out repeat "other" organisms from by_organism ;
424        				data by_organism_no_repeat;
425        					set by_organism;
426        					by organism;
427        					
428        					if ~first.organism then DELETE;
429        				run;
430        
431        				* these have all the other organisms to add into other parts of the table  ;
432        
433        				data total_others;	
434        					merge 	total_inc (in = has_inc_other)
435        							total_prev (in = has_prev_other)
436        							by_organism (keep = organism cult_org_code) /* put the culture number back on the dataset */
437        							;
438        					by organism;
439        
440        					if ~(has_inc_other | has_prev_other) then delete; * capture just those with other infections ; 
441        					if _N_ = 1 then delete ; * the above means procedure's use of the cult_org_code for the n otuput produces a summary
441      ! first record with a blank description that needs to be removed;
442        					drop incident;
443        
444        
445        					if cult_org_code=20 then type = "Fungal Species";
446        					if cult_org_code=21 then type = "Gram+ Bacteria";
447        					if cult_org_code in(9, 22) then type = "Gram- Bacteria";
WARNING: The quoted string currently being processed has become more than 262 characters long.  You may have unbalanced quotation 
         marks.
448        					if cult_org_code=23 then type = "Other";
449        
450        				run;
451        				
452        
453        			proc means data= total;
454        			run;
455        
456        
457        /*  ADD THE OTHERS WITHIN EACH TYPE. AS WELL AS GENERAL OTHER group below. 
458        	then create the various summary numbers for display, format their display (found in nutrition_summaries.sas) */
459        
460        		data organism_summary;
461        			length organism $80;
462        			set
463        				gram_pos	
11                                                         The SAS System                              13:35 Friday, October 8, 2010

464        				total_others (where=(cult_org_code = 21))	
465        				gram_neg     (where=(cult_org_code ^=22))
466        				total_others (where=(cult_org_code = 9))
467        				gram_neg     (where=(cult_org_code = 22))
468        				total_others (where=(cult_org_code = 22))
469        				fungus
441        					if _N_ = 1 then delete ; * the above means procedure's use of the cult_org_code for the n otuput produces a summary
                                                                    ________________________________________________________________
                                                                    49
441      ! first record with a blank description that needs to be removed;
NOTE 49-169: The meaning of an identifier after a quoted string may change in a future SAS release.  Inserting white space between 
             a quoted string and the succeeding identifier is recommended.

470        				total_others (where=(cult_org_code = 20))
471        				total_others (where=(cult_org_code = 23))
472        				;
473        
474        			* add "types" into the 'other' rows for proper display ;
475        			if cult_org_code = 21 then do;
474        			* add "types" into the 'other' rows for proper display ;
                                           ___________________________
                                           49
NOTE 49-169: The meaning of an identifier after a quoted string may change in a future SAS release.  Inserting white space between 
             a quoted string and the succeeding identifier is recommended.

476        				if organism^=scan(organism,1,"-") then do;
477        				organism = "--" || substrn(organism, 23); * chop of the "Other - " portion of the string ; 
478        			end;	end;
479        
480        			* add "types" into the 'other' rows for proper display ;
481        			if cult_org_code = 9 then do;
480        			* add "types" into the 'other' rows for proper display ;
                                           ___________________________
                                           49
NOTE 49-169: The meaning of an identifier after a quoted string may change in a future SAS release.  Inserting white space between 
             a quoted string and the succeeding identifier is recommended.

482        				if organism^=scan(organism,1,"-") then do;
483        				organism = "--" || substrn(organism, 27); * chop of the "Other - " portion of the string ; 
484        			end;	end;
485        
486        			* add "types" into the 'other' rows for proper display ;
487        			if cult_org_code = 22 then do;
486        			* add "types" into the 'other' rows for proper display ;
                                           ___________________________
                                           49
NOTE 49-169: The meaning of an identifier after a quoted string may change in a future SAS release.  Inserting white space between 
             a quoted string and the succeeding identifier is recommended.

488        				if organism^=substr(organism,1,20) then do;
489        				organism = "--" || substrn(organism, 23); * chop of the "Other - " portion of the string ; 
490        			end;	end;
491        
492        			* add "types" into the 'other' rows for proper display ;
493        			if cult_org_code = 20 then do;
494        				if organism^=scan(organism,1,"-") then do;
495        				organism = "--" || substrn(organism, 23); * chop of the "Other - " portion of the string ; 
496        			end;	end;
12                                                         The SAS System                              13:35 Friday, October 8, 2010

497        
498        			if (cult_org_code = 23) & type="Other" then do;
WARNING: The quoted string currently being processed has become more than 262 characters long.  You may have unbalanced quotation 
         marks.
492        			* add "types" into the 'other' rows for proper display ;
                                           ___________________________
                                           49
NOTE 49-169: The meaning of an identifier after a quoted string may change in a future SAS release.  Inserting white space between 
             a quoted string and the succeeding identifier is recommended.

499        				organism = substrn(organism, 9); * chop of the "Other - " portion of the string ; 
500        			end;
501        
502        			* set missing data to 0's ;
503        			if prev_patients = . then prev_patients= 0;
504        			if inc_infect = . then inc_infect = 0;	
505        			if inc_patients = . then inc_patients= 0;
506        
507        			format cult_org_code cult_org_code.;
508        		run;
509        
510        		* now create "All organism" type of summaries for this table ;
511        		data organism_summary;
512        			set organism_summary;
513        			by type notsorted;
514        		
515        			if (last.type) & (type ~= "Other")  then do; * this doesnt make too much sense for the other group ; 
516        				output;
517        				organism = "== Any " || trim(type) || " =="; 	
518        				summary = 1; * INDICATES THAT THIS IS A SUMMARY RECORD, USEFUL FOR SORTING LATER!; 
519        			end;
520        			output;
521        		run;
522        
523        		* remember the order of the observations of this dataset for later! ;
524        		data organism_summary;
525        			set organism_summary;
526        			order = _n_ ;
527        		run;
528        
529        
530        		* capture infection totals - for all 4 types (includes OTHERS);
531        			proc means data = organism_summary;
532        				class type ;
533        				where ~((substrn(organism, 0, 3) = "==") | (substrn(organism, 0, 3) = "--")) ;
534        						* exclude any rows that show summaries or specific other types of organisms  ;
535        	
536        				var inc_infect;
537        				output out = org_total_infect sum(inc_infect) = inc_infect;
538        			run;
539        			/*data org_total_infect;
540        				set org_total_infect;
541        				
542        				temp_type = type;
543        				drop type;
544        			run;*/
545        			data org_total_infect;
546        				set org_total_infect;
13                                                         The SAS System                              13:35 Friday, October 8, 2010

547        
548        				if _type_ = 0 then type = "== Any Infection ==       ";
549        				else type = "== " || type || " =="; * this will allow us to merge back into the table later;
550        
551        				drop _type_ _freq_;
552        			run;
553        
554        		* capture patient totals WITHIN each type;
555        			* go back to data, label type;
556        			
557        			data by_type;
558        				set by_organism;
559        				where cult_org_code ~= 23; * treat each OTHER infection separately;
560        
561        				if cult_org_code in (1,2,3,4,5,6,7,11,16,21) then type = "== Any Gram+ Bacteria =="; 
562        				if cult_org_code in (8,9,10,12,13,14,15,22) then type = "== Any Gram- Bacteria ==";
563        				if cult_org_code in (17,18,19,20) then type = "== Any Fungal Species =="; 
564        				
565         			run;
566        			proc sort data= by_type; 
567        				by incident type id; 
568        			run;
569        
570        				* - VERY IMPORTANT STEP! - remove replicate IDs within each class of organism within each class of incidence  ;
571        				data by_type;
572        					set by_type;
573        					by incident type id ;
574        					if ~first.id  then delete; * make sure theres one record for each person within this type of infection ;
575        				run;
576        
577        				proc sort data= by_type; by incident; run;		
578        				proc print data= by_type; var id incident organism; run;
579        				
580        				proc means data =  by_type n  ;
581        					by incident;
582        					class type;
583        					var id ;
584        
585        					output out = patients_out n(cult_org_code) = num_patients;
586        				run;
587        
588        
589        				* clean up output dataset - this dataset now has the totals for gram+, gram-, fungal species ;	
590        				data patients_out;
591        					set patients_out;
592        					
593        					if _type_ = 0 then delete; * delete overall total row. this is not accurate;
594        					drop _type_ _freq_;
595        				run;
596        					data a;
597        						set patients_out;
598        						where incident = 0;
599        					run;
600        					data b;
601        						set patients_out;
602        						where incident = 1;
603        					run;
604        					data patients_out;
14                                                         The SAS System                              13:35 Friday, October 8, 2010

605        						merge a (rename =(num_patients = prev_patients))
606        							 b (rename =(num_patients = inc_patients));
607        						by type;
608        						drop incident;
609        
610        					run;
611        
612        					* add in the overall sum of infections for these three groups ;
613        					proc sort data= org_total_infect; by type; run; 
614        
615        					* strip out the overall and other record, leaving just the 3 in middle ;
616        					data temp_org_total;
617        						set org_total_infect;
618        						if _n_ in (1,5) then delete;
619        					run;
620        							
621        					* merge the two side-by-side, to put the infection totals next to the patient totals
622        						(this is not the most stable with no by statement, but it is easiest here due to problems with the type variable ;
623        					data patients_out;
624        						merge patients_out 
625        							temp_org_total (drop = type)
626        							;
627        						format type $52.;
628        						rename type = organism; * this really should have been called organism all along;
629        					run;
630        					* merge into organism_summary;
631        					* sort organism_summary by organism, but we have the order stored in there; 
632        					proc sort data= organism_summary; by organism; run;
633        					proc sort data= patients_out; by organism; run;
634        				
635        					data organism_summary;	
636        						merge   organism_summary
637        								patients_out (in = is_summary rename = (prev_patients = a inc_patients = b inc_infect = c))
638        								;
639        						by organism;
640        						
641        						* take summary numbers and overwrite 0s in table;
642        						if is_summary then do;
643        							prev_patients = a; inc_patients = b; inc_infect = c;
644        						end;
645        						drop a b c;
646        					run;
647        					proc sort data= organism_summary; by order; run; * reorder ;
648        
649        
650        
651        				* 1. still need sum of patients overall ;
652        				* 2. merge in infection totals from org_total_infect; 
653        				* 3. then merge that info back into the main organism_summary table ; 
654        
655        
656        				* get sum of patients overall ;
657        				proc sort data= by_organism; 
658        					by incident  id; 
659        				run;
660        				data by_overall;
661        					set by_organism;
662        					by incident id ;
15                                                         The SAS System                              13:35 Friday, October 8, 2010

663        		
664        					if ~first.id then delete;
665        				run;
666        				proc means data =  by_overall n  ;
667        					class incident;
668        					var id ;
669        
670        					output out = overall_out n(cult_org_code) = num_patients;
671        				run;
672        					data overall_out;
673        						set overall_out;
674        						
675        						if _type_ = 0 then delete; * delete overall total row. this is not accurate;
676        						drop _type_ _freq_;
677        					run;
678        					data a;
679        						set overall_out;
680        						where incident = 0;
681        					run;
682        					data b;
683        						set overall_out;
684        						where incident = 1;
685        					run;
686        					data overall_out;
687        						merge a (rename =(num_patients = prev_patients))
688        							 b (rename =(num_patients = inc_patients));
689        							
690        						* format for the final table ;
691        						type = "== Any Infection ==";
692        						organism = " ";
693        						summary = 1; * WILL HELP SORTING LATER;
694        						drop incident;
695        					run;
696        
697        					* add in the overall sum of infections ;
698        					data overall_out;
699        						merge overall_out ( in = overall_record)
700        							org_total_infect
701        							;
702        						if ~overall_record then delete ; * take just the overall record from these totals ;
703        					run;
704        					
705        
706        					* add any infection to bottom of table;
707        					data organism_summary;
708        						set organism_summary
709        							overall_out;	
710        					run;
711        
712        		* now perform calculations and format the results;
713        		data organism_summary_&x;
714        			set organism_summary;
715        
716        			if summary ~= 1 then summary = 0;
717        
718        			* convert all genus names to upper-case for most appropriate presentation. ie: capitalize first letter ;
719        			organism = upcase(substrn(trim(organism), 1, 1)) || substrn(organism, 2);
720        
16                                                         The SAS System                              13:35 Friday, October 8, 2010

721        			* perform calculations ;
722        			if prev_patients = . then prev_patients= 0;
723        			if inc_patients = . then inc_patients= 0;
724        			prev_percent = (prev_patients / &n_study) * 100; * percent of patients with this  organism ;
725        			inc_percent = (inc_patients / &n_study) * 100; 	* percent of patients with this organism ;	
726        			if inc_percent = . then inc_percent = 0; 
727        
728        			* format all information in one convenient line for each infection type;
729        			prevalent_&group = compress(put(prev_patients, 3.) || "/" || put(&n_study, 3.), ' ')  || " (" ||
729      ! compress((put(prev_percent, 5.1)) || "%)", ' ')  ;
730        			incident_&group =  put(inc_infect, 3.) || " (" || compress(put(inc_patients, 3.) || "/" || put(&n_study, 3.), ' ') ||
730      ! ", " || compress(put(inc_percent, 5.1) || "%)", ' ')  ;
731        		run;
732        	
733        		/* FOR DIAGNOSTIC PURPOSES - SAVE A COPY OF THE DATA FOR CHECKING
734        		data glnd_rep.organism_summary_&x;
735        			set organism_summary_&x;
736        		run;
737        		*/
738        
739        
740        
741        /**  PRODUCE BY SITE AND TYPE TABLE, with organism listing **/
742        
743        	* first, we need the data arranged two way - by number of unique infection episodes and by cultured organisms;
744        
745        	* number of unique episodes is straight-forward - simply take noso, filter out non-confirmed infections ;
746        	data by_episode;
747        		set noso; 
748        
749        		where (infect_confirm in (1,2)); * only look at positive infections with positive cultures ; 
750        
751        
752        		site_code_label = trim(put(site_code, site_code.));
753        		type_code_label = trim(put(type_code, type_code.));
754        
755        		drop organism_1 organism_2 organism_3 organism_4 organism_5 cult_org_code_1 cult_org_code_2 cult_org_code_3
755      ! cult_org_code_4 cult_org_code_5
756        			org_spec_1 org_spec_2 org_spec_3 org_spec_4 org_spec_5;
757        	run;
758        
759        	* now list by organism ... ; 
760        	* unlike the previous by_organism, this dataset has records for those infections w/o a listed organism ;
761        	data by_organism_all_infec;
762        		set noso;
763        
764        		where (infect_confirm in (1,2)); * only look at positive infections with positive cultures ; 
765        
766        		/*organism= " 													";
767        		* work backwards from oganism_5,  ... ;
768        		if cult_org_code_5 ~= . then do; organism = trim(organism) || ", " || organism_5; end;
769        		if cult_org_code_4 ~= . then do; organism = trim(organism) || ", " || organism_4; end;
770        		if cult_org_code_3 ~= . then do; organism = trim(organism) || ", " || organism_3; end;
771        		if cult_org_code_2 ~= . then do; organism = trim(organism) || ", " || organism_2; end;
772        
773        		if cult_org_code_1 ~= . then do; organism = trim(organism) || ", " || organism_1; end;
774        		*/
775        		if cult_org_code_5 ~= . then do; organism = organism_5; cult_org_code = cult_org_code_5; org_spec = org_spec_5; output;
17                                                         The SAS System                              13:35 Friday, October 8, 2010

775      !  end;
776        		if cult_org_code_4 ~= . then do; organism = organism_4; cult_org_code = cult_org_code_4; org_spec = org_spec_4; output;
776      !  end;
777        		if cult_org_code_3 ~= . then do; organism = organism_3; cult_org_code = cult_org_code_3; org_spec = org_spec_3; output;
777      !  end;
778        		if cult_org_code_2 ~= . then do; organism = organism_2; cult_org_code = cult_org_code_2; org_spec = org_spec_2; output;
778      !  end;
779        
780        		if cult_org_code_1 ~= . then do; organism = organism_1; cult_org_code = cult_org_code_1; org_spec = org_spec_1; output;
780      !  end;
781        				* every record has at least the first organism;
782        		else output;
783        		
784        		
785        		drop organism_1 organism_2 organism_3 organism_4 organism_5 cult_org_code_1 cult_org_code_2 cult_org_code_3
785      ! cult_org_code_4 cult_org_code_5
786        			org_spec_1 org_spec_2 org_spec_3 org_spec_4 org_spec_5;
787        	run;		
788        
789        	* add labels to those infections w/o a confirmed organism;
790        	data by_organism_all_infec;
791        		set  by_organism_all_infec;
792        
793        		if  (organism = "") & ~cult_obtain then organism = "(no culture obtained)";
794        		else if (organism = "") & (cult_obtain) & (~cult_positive) then organism = "(negative culture)";
795        
796        		* also add indicator for whether this is a prevalent or incident culture ;
797        		if incident then organism = trim(organism) || " - [inc.]";
798        		if ~incident then organism = trim(organism) || " - [prev.]";
799        
800        	run;
801        
802        
803        
804        	* NOW ANALYZE by site and type code - first gather total number of infections;
805        		proc means data = by_episode n;
806        			class site_code type_code;
807        			where incident = 1;
808        			var dt_infect ;
809        
810        			output out = episode_infect n(dt_infect) = inc_infect;
811        		run;
812        
813        		* post-process. remove all observations that are summarizing across a class ;
814        		data episode_infect;
815        			set episode_infect;
816        			where (site_code ~= "") & (type_code ~= "") ;
817        			drop _type_ _freq_;
818        		run;
819        
820        
821        	* then gather unique people within each infection and type+site code  ;
822        		proc sort data= by_episode; 
823        			by incident type_code site_code id;
824        		run;
825        		
826        		* reduce to one id per combination of incident, type, site ;
827        		data episode_people;
18                                                         The SAS System                              13:35 Friday, October 8, 2010

828        			set by_episode;
829        			by incident type_code site_code id;
830        			if ~first.id then delete;
831        		run;
832        
833        		* now gather totals by incidence ;
834        		proc means data = episode_people n;
835        			class incident site_code type_code;
836        			var dt_infect ;
837        
838        			output out = episode_people_out n(dt_infect) = num_patients;
839        		run;
840        
841        		* post-process. remove all observations that are summarizing across a class ;
842        		data episode_people_out;
843        			set episode_people_out;
844        			where (site_code ~= "") & (type_code ~= "") & (incident ~= .) ;
845        			drop _type_ _freq_;
846        		run;
847        			data a;
848        				set episode_people_out;
849        				where incident = 0;
850        			run;
851        			data b;
852        				set episode_people_out;
853        				where incident = 1;
854        			run;
855        
856        			proc sort data= a; 	by site_code type_code ; run;
857        			proc sort data= b; 	by site_code type_code; run;
858        			proc sort data= episode_infect; 	by site_code type_code; run;
859        
860        		* now put incident and prevalent patient totals together with incident infection totals ;
861        		data episode_people_out;
862        			merge a (rename =(num_patients = prev_patients))
863        				 b (rename =(num_patients = inc_patients))
864        				 episode_infect;
865        			by site_code type_code;
866        
867        			* recode missing to 0;
868        			if prev_patients = . then prev_patients = 0;
869        			if inc_patients = . then inc_patients = 0;
870        			if inc_infect = . then inc_infect = 0;
871        
872        		drop incident;
873        		run;
874        
875        
876        
877        
878        
879        		* now merge in the specific organism findings by site and type code;
880        		proc sort data=  by_organism_all_infec; 	by site_code type_code; run;
881        		data episode_people_out;
882        			merge  episode_people_out
883        					by_organism_all_infec (keep = site_code type_code organism incident)
884        					;
885        			by site_code type_code;
19                                                         The SAS System                              13:35 Friday, October 8, 2010

886        		run;
887        
888        
889        		proc sort data= episode_people_out; 	by site_code type_code incident organism ; run;
890        
891        		* touch up table, generate summary stats. white out repeats within all three levels. 
892        			so only add labels on the first of site_code type_code ;
893        
894        		data episode_summary;
895        			set episode_people_out (drop = incident); * drop incident as i will re-create it below to serve another purpose;
896        			by site_code type_code;
897        			
898        			organism = trim(organism);
899        			
900        			if first.type_code then do;
901        				* perform calculations ;
902        				prev_percent = (prev_patients / &n_study) * 100; * percent of patients with this  organism ;
903        				inc_percent = (inc_patients / &n_study) * 100; 	* percent of patients with this organism ;	
904        				if inc_percent = . then inc_percent = 0; 
905        
906        				* format all information in one convenient line for each infection type;
907        				prevalent = compress(put(prev_patients, 3.) || "/" || put(&n_study, 3.), ' ')  || " (" || compress((put(prev_percent,
907      !  5.1)) || "%)", ' ')  ;
908        				incident =  put(inc_infect, 3.) || " (" || compress(put(inc_patients, 3.) || "/" || put(&n_study, 3.), ' ') || ", "
908      ! || compress(put(inc_percent, 5.1) || "%)", ' ')  ;
909        			end;	
910        		run;
911        
912        
913        		/* NOW COMPUTE OVERALL TOTALS, THEN PASTE BY CENTER AND OVERALL INTO SUMMARY TABLE! */
914        		
915        			proc means data = by_episode n;
916        				where incident = 1;
917        				var dt_infect ;
918        
919        				output out = overall_infect n(dt_infect) = inc_infect;
920        			run;
921        
922        			* post-process. remove all observations that are summarizing across a class ;
923        			data overall_infect;
924        				set overall_infect;
925        				drop _type_ _freq_;
926        			run;
927        
928        
929        		* then gather unique people within each infection  code  ;
930        			proc sort data= by_episode; 
931        				by incident id;
932        			run;
933        			
934        			* reduce to one id per combination of incident ;
935        			data episode_people;
936        				set by_episode;
937        				by incident id;
938        				if ~first.id then delete;
939        			run;
940        
941        			* now gather totals by incidence ;
20                                                         The SAS System                              13:35 Friday, October 8, 2010

942        			proc means data = episode_people n;
943        				class incident ;
944        				var dt_infect ;
945        
946        				output out = overall_people_out n(dt_infect) = num_patients;
947        			run;
948        
949        			* post-process. remove all observations that are summarizing across a class ;
950        			data overall_people_out;
951        				set overall_people_out;
952        				where (incident ~= .) ;
953        				drop _type_ _freq_;
954        			run;
955        				data a;
956        					set overall_people_out;
957        					where incident = 0;
958        				run;
959        				data b;
960        					set overall_people_out;
961        					where incident = 1;
962        				run;
963        
964        			* now put incident and prevalent patient totals together with incident infection totals ;
965        			data overall_people_out;
966        				merge a (rename =(num_patients = prev_patients))
967        					 b (rename =(num_patients = inc_patients))
968        					 overall_infect;
969        
970        					 * by nothing, since all datasets have one observation ;
971        
972        				length site_code $ 20;
973        				
974        				* recode missing to 0;
975        				if prev_patients = . then prev_patients = 0;
976        				if inc_patients = . then inc_patients = 0;
977        				if inc_infect = . then inc_infect = 0;
978        
979        				* add row title ;
980        				site_code = "Overall total:";
981        
982        			drop incident;
983        			run;	
984        
985        
986        		/** now add by overall totals into summary table, and process **/
987        		data summary_temp;
988        			set 		
989        				overall_people_out;
990        			
991        						
992        				* perform calculations ;
993        				prev_percent = (prev_patients / &n_study) * 100; * percent of patients with this  organism ;
994        				inc_percent = (inc_patients / &n_study) * 100; 	* percent of patients with this organism ;	
995        				if inc_percent = . then inc_percent = 0; 
996        
997        				* format all information in one convenient line for each infection type;
998        				prevalent = compress(put(prev_patients, 3.) || "/" || put(&n_study, 3.), ' ')  || " (" || compress((put(prev_percent,
998      !  5.1)) || "%)", ' ')  ;
21                                                         The SAS System                              13:35 Friday, October 8, 2010

999        				incident =  put(inc_infect, 3.) || " (" || compress(put(inc_patients, 3.) || "/" || put(&n_study, 3.), ' ') || ", "
999      ! || compress(put(inc_percent, 5.1) || "%)", ' ')  ;
1000       
1001       				sort = 1; **** DETERMINE SORT ORDER IN TABLE;
1002       		run;
1003       
1004       		data episode_summary;
1005       			set episode_summary
1006       				summary_temp;
1007       
1008       	
1009       		run;
1010       
1011       	  
1012       		/**	Now compute the numbers by center, then add to the table	**/
1013       			proc means data = by_episode n;
1014       				class center;
1015       				where incident = 1;
1016       				var dt_infect ;
1017       
1018       				output out = center_infect n(dt_infect) = inc_infect;
1019       			run;
1020       
1021       			* post-process. remove all observations that are summarizing across a class ;
1022       			data center_infect;
1023       				set center_infect;
1024       				where (center ~= .) ;
1025       				drop _type_ _freq_;
1026       			run;
1027       
1028       
1029       		* then gather unique people within each infection and center code  ;
1030       			proc sort data= by_episode; 
1031       				by incident center id;
1032       			run;
1033       			
1034       			* reduce to one id per combination of incident, centere ;
1035       			data episode_people;
1036       				set by_episode;
1037       				by incident center id;
1038       				if ~first.id then delete;
1039       			run;
1040       
1041       			* now gather totals by incidence ;
1042       			proc means data = episode_people n;
1043       				class incident center;
1044       				var dt_infect ;
1045       
1046       				output out = center_people_out n(dt_infect) = num_patients;
1047       			run;
1048       
1049       			* post-process. remove all observations that are summarizing across a class ;
1050       			data center_people_out;
1051       				set center_people_out;
1052       				where (center~=.) & (incident ~= .) ;
1053       				drop _type_ _freq_;
1054       			run;
1055       				data a;
22                                                         The SAS System                              13:35 Friday, October 8, 2010

1056       					set center_people_out;
1057       					where incident = 0;
1058       				run;
1059       				data b;
1060       					set center_people_out;
1061       					where incident = 1;
1062       				run;
1063       
1064       				proc sort data= a; 	by center ; run;
1065       				proc sort data= b; 	by  center ; run;
1066       				proc sort data= center_infect; 	by center; run;
1067       
1068       			* now put incident and prevalent patient totals together with incident infection totals ;
1069       			data center_people_out;
1070       				merge a (rename =(num_patients = prev_patients))
1071       					 b (rename =(num_patients = inc_patients))
1072       					 center_infect;
1073       				by center;
1074       
1075       			drop incident;
1076       			run;
1077       			
1078       
1079       			* now capture denominators by center for computing center percentages. cannot use macro variable for overall n ;
1080       				data status_temp;
1081       					set glnd.george; * CAPTURE TREATMENT INFO! ;
1082       					WHERE TREATMENT = &x;
1083       
1084       					center = floor(id/10000);
1085       				run;
1086       				proc means data= status_temp;
1087       					
1088       					class center;
1089       					output out= center_n n(id) = center_n;
1090       				run;
1091       				* post-process to remove overall total and other columns;
1092       				data center_n;
1093       					set center_n;
1094       					where _type_ ~= 0;
1095       					drop _type_ _freq_;
1096       				run;
1097       		
1098       		proc sort data= center_people_out; by center; run;
1099       		proc sort data= center_n; by center; run;
1100       
1101       
1102       		/** now add in center N, center totals into summary table, and process **/
1103       		data summary_temp;
1104       			merge	center_people_out
1105       					center_n
1106       					;
1107       			by center;
1108       
1109       			length site_code $ 15;
1110       				* recode missing to 0;
1111       				if prev_patients = . then prev_patients = 0;
1112       				if inc_patients = . then inc_patients = 0;
1113       				if inc_infect = . then inc_infect = 0;
23                                                         The SAS System                              13:35 Friday, October 8, 2010

1114       
1115       				* add row title code;
1116       				if center = 1 then site_code = "Emor";
1117       				if center = 2 then site_code = "Miri";
1118       				if center = 3 then site_code = "Vand";
1119       				if center = 4 then site_code = "Colo";
1120       				if center = 5 then site_code = "Wisc";
1121       	
1122       				* perform calculations ;
1123       				prev_percent = (prev_patients / center_n) * 100; * percent of patients with this  organism ;
1124       				inc_percent = (inc_patients / center_n) * 100; 	* percent of patients with this organism ;	
1125       				if inc_percent = . then inc_percent = 0; 
1126       
1127       				* format all information in one convenient line for each infection type;
1128       				prevalent = compress(put(prev_patients, 3.) || "/" || put(center_n, 3.), ' ')  || " (" || compress((put(prev_percent,
1128     !  5.1)) || "%)", ' ')  ;
1129       				incident =  put(inc_infect, 3.) || " (" || compress(put(inc_patients, 3.) || "/" || put(center_n, 3.), ' ') || ", "
1129     ! || compress(put(inc_percent, 5.1) || "%)", ' ')  ;
1130       
1131       				sort = 4;
1132       	
1133       		run;
1134       
1135       		data glnd_rep.summary_temp; set summary_temp; run;
1136       
1137       		* add a blank line on top of centers ;
1138       		data center_headers;
1139       		
1140       			site_code = "    "; sort = 2; output;
1141       			site_code = "Site"; sort = 3; output;
1142       
1143       			
1144       		run;
1145       
1146       		* change ;
1147       		data episode_summary_&x;
1148       			set episode_summary
1149       				center_headers
1150       				summary_temp;
1151       
1152       				if sort = . then sort = 0; * all regular rows;
1153       
1154       		*			if prevalent = "" then prevalent ;
1155       		
1156       			rename prevalent = prevalent_&group incident = incident_&group;
1157       
1158       			drop organism; * we are not going to have this on the merged listing;
1159       		run;
1160       
1161       
1162       %end;
1163       
1164       %mend closed;
1165       %closed run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
24                                                         The SAS System                              13:35 Friday, October 8, 2010

      cpu time            0.00 seconds
      


NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      1165:112   1165:149   1165:212   1165:249   1165:57    1165:94    1165:157   1165:194   
NOTE: There were 238 observations read from the data set GLND_REP.ALL_INFECTIONS_WITH_ADJ.
NOTE: There were 130 observations read from the data set GLND.GEORGE.
NOTE: The data set WORK.NOSO has 281 observations and 66 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds
      


NOTE: There were 150 observations read from the data set WORK.NOSO.
      WHERE treatment=1;
NOTE: The data set WORK.NOSO has 150 observations and 65 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.02 seconds
      


NOTE: There were 150 observations read from the data set WORK.NOSO.
NOTE: The data set WORK.NOSO_N has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 3.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      


NOTE: There were 1 observations read from the data set WORK.NOSO_N.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: There were 64 observations read from the data set GLND.GEORGE.
      WHERE treatment=1;
NOTE: The data set WORK.STUDY_N has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 4.
NOTE: PROCEDURE MEANS used (Total process time):
25                                                         The SAS System                              13:35 Friday, October 8, 2010

      real time           0.04 seconds
      cpu time            0.03 seconds
      


NOTE: There were 1 observations read from the data set WORK.STUDY_N.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 150 observations read from the data set WORK.NOSO.
NOTE: The data set WORK.NOSO has 150 observations and 65 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 79 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2) and (cult_positive=1);
NOTE: The data set WORK.BY_ORGANISM has 117 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      


NOTE: There were 117 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 117 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      


NOTE: There were 116 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.INFECTS_OUT has 33 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 5-6.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      


NOTE: There were 31 observations read from the data set WORK.INFECTS_OUT.
      WHERE cult_org_code not = .;
NOTE: The data set WORK.INFECTS_OUT has 31 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 117 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 117 observations and 53 variables.
                                           The SAS System

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.02 seconds
      


NOTE: There were 116 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.PEOPLE_INFEC has 94 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 94 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PEOPLE_INFEC has 94 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      


NOTE: There were 94 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PATIENTS_OUT has 33 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 7-8.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      


NOTE: There were 31 observations read from the data set WORK.PATIENTS_OUT.
      WHERE cult_org_code not = .;
NOTE: The data set WORK.PATIENTS_OUT has 31 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 15 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.TOTAL_PREV has 15 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 16 observations read from the data set WORK.INFECTS_OUT.
      WHERE incident=1;
NOTE: There were 16 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=1;
NOTE: The data set WORK.TOTAL_INC has 16 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
                                           The SAS System

      


NOTE: There were 16 observations read from the data set WORK.TOTAL_INC.
NOTE: There were 15 observations read from the data set WORK.TOTAL_PREV.
NOTE: The data set WORK.TOTAL has 18 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 18 observations read from the data set WORK.TOTAL.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: The data set WORK.ALL_CODES has 23 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: There were 10 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (1, 2, 3, 4, 5, 6, 7, 11, 16, 21);
NOTE: There were 7 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (1, 2, 3, 4, 5, 6, 7, 11, 16, 21);
NOTE: The data set WORK.GRAM_POS has 10 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (10, 12, 13, 14, 15);
NOTE: There were 4 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (10, 12, 13, 14, 15);
NOTE: The data set WORK.GRAM_NEG has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 2 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (8, 9);
NOTE: There were 2 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (8, 9);
NOTE: The data set WORK.GRAM_NEG_1 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
                                           The SAS System



NOTE: There were 1 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code=22;
NOTE: There were 1 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code=22;
NOTE: The data set WORK.GRAM_NEG_2 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.GRAM_NEG.
NOTE: There were 2 observations read from the data set WORK.GRAM_NEG_1.
NOTE: There were 1 observations read from the data set WORK.GRAM_NEG_2.
NOTE: The data set WORK.GRAM_NEG has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 4 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (17, 18, 19, 20);
NOTE: There were 4 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (17, 18, 19, 20);
NOTE: The data set WORK.FUNGUS has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 37 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
NOTE: The data set WORK.INFECTS_OUT has 32 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 10-12.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 30 observations read from the data set WORK.INFECTS_OUT.
      WHERE _TYPE_=1;
NOTE: The data set WORK.INFECTS_OUT has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
                                           The SAS System



NOTE: There were 117 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 117 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 37 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
NOTE: The data set WORK.PEOPLE_INFEC has 34 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 34 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PEOPLE_INFEC has 34 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 34 observations read from the data set WORK.PEOPLE_INFEC.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
NOTE: The data set WORK.PATIENTS_OUT has 32 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 13-15.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 32 observations read from the data set WORK.PATIENTS_OUT.
      WHERE (organism not = '.') or (TRIM(organism) not = ' ');
NOTE: The data set WORK.PATIENTS_OUT has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.TOTAL_PREV has 11 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 20 observations read from the data set WORK.INFECTS_OUT.
      WHERE incident=1;
NOTE: There were 21 observations read from the data set WORK.PATIENTS_OUT.
                                           The SAS System

      WHERE incident=1;
NOTE: The data set WORK.TOTAL_INC has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 117 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 117 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      


NOTE: There were 117 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM_NO_REPEAT has 40 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      


NOTE: There were 21 observations read from the data set WORK.TOTAL_INC.
NOTE: There were 11 observations read from the data set WORK.TOTAL_PREV.
NOTE: There were 117 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.TOTAL_OTHERS has 37 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 18 observations read from the data set WORK.TOTAL.
NOTE: The PROCEDURE MEANS printed page 16.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      


NOTE: There were 10 observations read from the data set WORK.GRAM_POS.
NOTE: There were 24 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=21;
NOTE: There were 7 observations read from the data set WORK.GRAM_NEG.
      WHERE cult_org_code not = 22;
NOTE: There were 2 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=9;
NOTE: There were 1 observations read from the data set WORK.GRAM_NEG.
      WHERE cult_org_code=22;
NOTE: There were 4 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=22;
NOTE: There were 4 observations read from the data set WORK.FUNGUS.
NOTE: There were 6 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=20;
NOTE: There were 1 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=23;
                                           The SAS System

NOTE: The data set WORK.ORGANISM_SUMMARY has 59 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 59 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 62 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 62 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 62 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 23 observations read from the data set WORK.ORGANISM_SUMMARY.
      WHERE (SUBSTRN(organism, 0, 3) not = '==') and (SUBSTRN(organism, 0, 3) not = '--');
NOTE: The data set WORK.ORG_TOTAL_INFECT has 5 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 17.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      


NOTE: There were 5 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.ORG_TOTAL_INFECT has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 116 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.BY_TYPE has 116 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds
      


NOTE: There were 116 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 116 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      


                                           The SAS System

NOTE: There were 116 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 65 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 65 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_TYPE.
NOTE: The PROCEDURE PRINT printed pages 18-19.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.PATIENTS_OUT has 8 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 20.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 8 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.PATIENTS_OUT has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

                                           The SAS System


NOTE: There were 3 observations read from the data set WORK.A.
NOTE: There were 3 observations read from the data set WORK.B.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 5 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.ORG_TOTAL_INFECT has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.TEMP_ORG_TOTAL has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: There were 3 observations read from the data set WORK.TEMP_ORG_TOTAL.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 62 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 62 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 62 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.ORGANISM_SUMMARY has 62 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
                                           The SAS System



NOTE: There were 62 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 62 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 117 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 117 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      


NOTE: There were 117 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_OVERALL has 48 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.01 seconds
      


NOTE: There were 48 observations read from the data set WORK.BY_OVERALL.
NOTE: The data set WORK.OVERALL_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 21.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      


NOTE: There were 3 observations read from the data set WORK.OVERALL_OUT.
NOTE: The data set WORK.OVERALL_OUT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
                                           The SAS System

      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: The data set WORK.OVERALL_OUT has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
NOTE: There were 5 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.OVERALL_OUT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 62 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
NOTE: The data set WORK.ORGANISM_SUMMARY has 63 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 63 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY_1 has 63 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 84 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_EPISODE has 84 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      


NOTE: There were 84 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 122 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds
      


NOTE: There were 122 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 122 observations and 53 variables.
                                           The SAS System

NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds
      


NOTE: There were 60 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.EPISODE_INFECT has 37 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 22-23.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      


NOTE: There were 14 observations read from the data set WORK.EPISODE_INFECT.
      WHERE (site_code not = ' ') and (type_code not = ' ');
NOTE: The data set WORK.EPISODE_INFECT has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 84 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 84 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      


NOTE: There were 84 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 80 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      


NOTE: There were 80 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 109 observations and 6 variables.
NOTE: The PROCEDURE MEANS printed pages 24-26.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      


NOTE: There were 25 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE (site_code not = ' ') and (type_code not = ' ') and (incident not = .);
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 25 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

                                           The SAS System


NOTE: There were 11 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 14 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 14 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 11 observations read from the data set WORK.A.
NOTE: The data set WORK.A has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 14 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 14 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_INFECT has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 11 observations read from the data set WORK.A.
NOTE: There were 14 observations read from the data set WORK.B.
NOTE: There were 14 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      


NOTE: There were 122 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 122 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
                                           The SAS System

      


NOTE: There were 18 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: There were 122 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 122 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 122 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 122 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 122 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_SUMMARY has 122 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 60 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 27.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 84 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 84 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      


NOTE: There were 84 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 51 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
                                           The SAS System

      cpu time            0.02 seconds
      


NOTE: There were 51 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 28.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      


NOTE: There were 2 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident not = .;
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
NOTE: The data set WORK.SUMMARY_TEMP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


                                           The SAS System

NOTE: There were 122 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: There were 1 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set WORK.EPISODE_SUMMARY has 123 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 60 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.CENTER_INFECT has 6 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 29.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_INFECT.
      WHERE center not = .;
NOTE: The data set WORK.CENTER_INFECT has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 84 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 84 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      


NOTE: There were 84 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 52 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 52 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 18 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 30.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      


NOTE: There were 10 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE (center not = .) and (incident not = .);
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
                                           The SAS System

      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 5 observations read from the data set WORK.A.
NOTE: The data set WORK.A has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      


NOTE: There were 5 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_INFECT.
NOTE: The data set WORK.CENTER_INFECT has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.A.
NOTE: There were 5 observations read from the data set WORK.B.
NOTE: There were 5 observations read from the data set WORK.CENTER_INFECT.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 64 observations read from the data set GLND.GEORGE.
      WHERE TREATMENT=1;
                                           The SAS System

NOTE: The data set WORK.STATUS_TEMP has 64 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      


NOTE: There were 64 observations read from the data set WORK.STATUS_TEMP.
NOTE: The data set WORK.CENTER_N has 6 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed pages 31-33.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_N.
      WHERE _type_ not = 0;
NOTE: The data set WORK.CENTER_N has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_PEOPLE_OUT.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 5 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_N.
NOTE: The data set WORK.CENTER_N has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_PEOPLE_OUT.
NOTE: There were 5 observations read from the data set WORK.CENTER_N.
NOTE: The data set WORK.SUMMARY_TEMP has 5 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 5 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set GLND_REP.SUMMARY_TEMP has 5 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.01 seconds
      


                                           The SAS System

NOTE: The data set WORK.CENTER_HEADERS has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 123 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: There were 2 observations read from the data set WORK.CENTER_HEADERS.
NOTE: There were 5 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set WORK.EPISODE_SUMMARY_1 has 130 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      1165:112   1165:149   1165:212   1165:249   1165:57    1165:94    1165:157   1165:194
NOTE: There were 238 observations read from the data set GLND_REP.ALL_INFECTIONS_WITH_ADJ.
NOTE: There were 130 observations read from the data set GLND.GEORGE.
NOTE: The data set WORK.NOSO has 281 observations and 66 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
      


NOTE: There were 131 observations read from the data set WORK.NOSO.
      WHERE treatment=2;
NOTE: The data set WORK.NOSO has 131 observations and 65 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      


                                           The SAS System

NOTE: There were 131 observations read from the data set WORK.NOSO.
NOTE: The data set WORK.NOSO_N has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed pages 34-35.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      


NOTE: There were 1 observations read from the data set WORK.NOSO_N.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: There were 66 observations read from the data set GLND.GEORGE.
      WHERE treatment=2;
NOTE: The data set WORK.STUDY_N has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 36.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      


NOTE: There were 1 observations read from the data set WORK.STUDY_N.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 131 observations read from the data set WORK.NOSO.
NOTE: The data set WORK.NOSO has 131 observations and 65 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.29 seconds
      cpu time            0.01 seconds
      


NOTE: There were 58 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2) and (cult_positive=1);
NOTE: The data set WORK.BY_ORGANISM has 82 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 82 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      


                                           The SAS System

NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.INFECTS_OUT has 32 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 37-38.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      


NOTE: There were 30 observations read from the data set WORK.INFECTS_OUT.
      WHERE cult_org_code not = .;
NOTE: The data set WORK.INFECTS_OUT has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 82 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.PEOPLE_INFEC has 68 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      


NOTE: There were 68 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PEOPLE_INFEC has 68 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      


NOTE: There were 68 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PATIENTS_OUT has 32 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 39-40.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 30 observations read from the data set WORK.PATIENTS_OUT.
      WHERE cult_org_code not = .;
NOTE: The data set WORK.PATIENTS_OUT has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
                                           The SAS System

      cpu time            0.00 seconds
      


NOTE: There were 14 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.TOTAL_PREV has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 16 observations read from the data set WORK.INFECTS_OUT.
      WHERE incident=1;
NOTE: There were 16 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=1;
NOTE: The data set WORK.TOTAL_INC has 16 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 16 observations read from the data set WORK.TOTAL_INC.
NOTE: There were 14 observations read from the data set WORK.TOTAL_PREV.
NOTE: The data set WORK.TOTAL has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 19 observations read from the data set WORK.TOTAL.
NOTE: The PROCEDURE PRINT printed page 41.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: The data set WORK.ALL_CODES has 23 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 10 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (1, 2, 3, 4, 5, 6, 7, 11, 16, 21);
NOTE: There were 8 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (1, 2, 3, 4, 5, 6, 7, 11, 16, 21);
NOTE: The data set WORK.GRAM_POS has 10 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

                                           The SAS System


NOTE: There were 5 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (10, 12, 13, 14, 15);
NOTE: There were 5 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (10, 12, 13, 14, 15);
NOTE: The data set WORK.GRAM_NEG has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 2 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (8, 9);
NOTE: There were 2 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (8, 9);
NOTE: The data set WORK.GRAM_NEG_1 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code=22;
NOTE: There were 1 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code=22;
NOTE: The data set WORK.GRAM_NEG_2 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.GRAM_NEG.
NOTE: There were 2 observations read from the data set WORK.GRAM_NEG_1.
NOTE: There were 1 observations read from the data set WORK.GRAM_NEG_2.
NOTE: The data set WORK.GRAM_NEG has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 4 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (17, 18, 19, 20);
NOTE: There were 3 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (17, 18, 19, 20);
NOTE: The data set WORK.FUNGUS has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
                                           The SAS System

      cpu time            0.01 seconds
      


NOTE: There were 27 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
NOTE: The data set WORK.INFECTS_OUT has 24 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 42-44.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 22 observations read from the data set WORK.INFECTS_OUT.
      WHERE _TYPE_=1;
NOTE: The data set WORK.INFECTS_OUT has 22 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 82 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds
      


NOTE: There were 27 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
NOTE: The data set WORK.PEOPLE_INFEC has 25 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 25 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PEOPLE_INFEC has 25 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 25 observations read from the data set WORK.PEOPLE_INFEC.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
NOTE: The data set WORK.PATIENTS_OUT has 24 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 45-47.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      


                                           The SAS System

NOTE: There were 24 observations read from the data set WORK.PATIENTS_OUT.
      WHERE (organism not = '.') or (TRIM(organism) not = ' ');
NOTE: The data set WORK.PATIENTS_OUT has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 11 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.TOTAL_PREV has 11 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 12 observations read from the data set WORK.INFECTS_OUT.
      WHERE incident=1;
NOTE: There were 13 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=1;
NOTE: The data set WORK.TOTAL_INC has 13 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 82 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM_NO_REPEAT has 35 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 13 observations read from the data set WORK.TOTAL_INC.
NOTE: There were 11 observations read from the data set WORK.TOTAL_PREV.
NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.TOTAL_OTHERS has 27 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 19 observations read from the data set WORK.TOTAL.
NOTE: The PROCEDURE MEANS printed page 48.
NOTE: PROCEDURE MEANS used (Total process time):
                                           The SAS System

      real time           0.03 seconds
      cpu time            0.04 seconds
      


NOTE: There were 10 observations read from the data set WORK.GRAM_POS.
NOTE: There were 18 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=21;
NOTE: There were 7 observations read from the data set WORK.GRAM_NEG.
      WHERE cult_org_code not = 22;
NOTE: There were 3 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=9;
NOTE: There were 1 observations read from the data set WORK.GRAM_NEG.
      WHERE cult_org_code=22;
NOTE: There were 2 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=22;
NOTE: There were 4 observations read from the data set WORK.FUNGUS.
NOTE: There were 4 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=20;
NOTE: There were 0 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=23;
NOTE: The data set WORK.ORGANISM_SUMMARY has 49 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 49 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 52 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 52 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 52 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 22 observations read from the data set WORK.ORGANISM_SUMMARY.
      WHERE (SUBSTRN(organism, 0, 3) not = '==') and (SUBSTRN(organism, 0, 3) not = '--');
NOTE: The data set WORK.ORG_TOTAL_INFECT has 4 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 49.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      


NOTE: There were 4 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.ORG_TOTAL_INFECT has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
                                           The SAS System

      cpu time            0.01 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.BY_TYPE has 82 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 82 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 56 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 56 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 56 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      


NOTE: There were 56 observations read from the data set WORK.BY_TYPE.
NOTE: The PROCEDURE PRINT printed page 50.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: There were 56 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.PATIENTS_OUT has 8 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 51.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 8 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.PATIENTS_OUT has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
                                           The SAS System

      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 3 observations read from the data set WORK.A.
NOTE: There were 3 observations read from the data set WORK.B.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 4 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.ORG_TOTAL_INFECT has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.TEMP_ORG_TOTAL has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: There were 3 observations read from the data set WORK.TEMP_ORG_TOTAL.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 52 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 52 observations and 8 variables.
                                           The SAS System

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      


NOTE: There were 52 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.ORGANISM_SUMMARY has 52 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 52 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 52 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 82 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      


NOTE: There were 82 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_OVERALL has 42 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 42 observations read from the data set WORK.BY_OVERALL.
NOTE: The data set WORK.OVERALL_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 52.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      


NOTE: There were 3 observations read from the data set WORK.OVERALL_OUT.
NOTE: The data set WORK.OVERALL_OUT has 2 observations and 2 variables.
                                           The SAS System

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: The data set WORK.OVERALL_OUT has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
NOTE: There were 4 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.OVERALL_OUT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 52 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
NOTE: The data set WORK.ORGANISM_SUMMARY has 53 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 53 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY_2 has 53 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

                                           The SAS System


NOTE: There were 65 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_EPISODE has 65 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 65 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 89 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 89 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 89 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds
      


NOTE: There were 39 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.EPISODE_INFECT has 28 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 53.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      


NOTE: There were 10 observations read from the data set WORK.EPISODE_INFECT.
      WHERE (site_code not = ' ') and (type_code not = ' ');
NOTE: The data set WORK.EPISODE_INFECT has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 65 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 62 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
                                           The SAS System

      cpu time            0.02 seconds
      


NOTE: There were 62 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 96 observations and 6 variables.
NOTE: The PROCEDURE MEANS printed pages 54-56.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      


NOTE: There were 22 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE (site_code not = ' ') and (type_code not = ' ') and (incident not = .);
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 22 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 12 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 12 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 10 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 10 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 12 observations read from the data set WORK.A.
NOTE: The data set WORK.A has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      


NOTE: There were 10 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 10 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 10 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_INFECT has 10 observations and 3 variables.
                                           The SAS System

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      


NOTE: There were 12 observations read from the data set WORK.A.
NOTE: There were 10 observations read from the data set WORK.B.
NOTE: There were 10 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.01 seconds
      


NOTE: There were 89 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 89 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds
      


NOTE: There were 14 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: There were 89 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 89 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 89 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 89 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 89 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_SUMMARY has 89 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 39 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 57.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

                                           The SAS System


NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 65 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 43 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 43 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 58.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      


NOTE: There were 2 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident not = .;
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
                                           The SAS System

      


NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
NOTE: The data set WORK.SUMMARY_TEMP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 89 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: There were 1 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set WORK.EPISODE_SUMMARY has 90 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 39 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.CENTER_INFECT has 5 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 59.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      


NOTE: There were 4 observations read from the data set WORK.CENTER_INFECT.
      WHERE center not = .;
NOTE: The data set WORK.CENTER_INFECT has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 65 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 65 observations read from the data set WORK.BY_EPISODE.
                                           The SAS System

NOTE: The data set WORK.EPISODE_PEOPLE has 43 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      


NOTE: There were 43 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 15 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 60.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      


NOTE: There were 8 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE (center not = .) and (incident not = .);
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 4 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.A.
NOTE: The data set WORK.A has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

                                           The SAS System


NOTE: There were 4 observations read from the data set WORK.CENTER_INFECT.
NOTE: The data set WORK.CENTER_INFECT has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.A.
NOTE: There were 4 observations read from the data set WORK.B.
NOTE: There were 4 observations read from the data set WORK.CENTER_INFECT.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 66 observations read from the data set GLND.GEORGE.
      WHERE TREATMENT=2;
NOTE: The data set WORK.STATUS_TEMP has 66 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: There were 66 observations read from the data set WORK.STATUS_TEMP.
NOTE: The data set WORK.CENTER_N has 6 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed pages 61-63.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_N.
      WHERE _type_ not = 0;
NOTE: The data set WORK.CENTER_N has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 4 observations read from the data set WORK.CENTER_PEOPLE_OUT.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 4 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.CENTER_N.
NOTE: The data set WORK.CENTER_N has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
                                           The SAS System

      cpu time            0.01 seconds
      


NOTE: There were 4 observations read from the data set WORK.CENTER_PEOPLE_OUT.
NOTE: There were 5 observations read from the data set WORK.CENTER_N.
NOTE: The data set WORK.SUMMARY_TEMP has 5 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set GLND_REP.SUMMARY_TEMP has 5 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      


NOTE: The data set WORK.CENTER_HEADERS has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: There were 90 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: There were 2 observations read from the data set WORK.CENTER_HEADERS.
NOTE: There were 5 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set WORK.EPISODE_SUMMARY_2 has 97 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1166       
1167       
1168       /**** Merge and Polish up organism table ****/
1169       	* add record indicator for sorting both A and B tables after merge;
1170       		
1170     !   data organism_summary_1;
1171       			set organism_summary_1;
1172       			by type notsorted;
1173       			num = _N_; * assign a number within this treatment group;
1174       			/* For sorting*/
1175       			if organism="-- Klebsiella not specified" then num=38;
1176       		run;

NOTE: There were 63 observations read from the data set WORK.ORGANISM_SUMMARY_1.
NOTE: The data set WORK.ORGANISM_SUMMARY_1 has 63 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1177       		
                                           The SAS System

1177     !   proc sort data= organism_summary_1 nodupkey; by type organism; run;

NOTE: There were 63 observations read from the data set WORK.ORGANISM_SUMMARY_1.
NOTE: 11 observations with duplicate key values were deleted.
NOTE: The data set WORK.ORGANISM_SUMMARY_1 has 52 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1178       	
1179       
1180       		
1180     !   data organism_summary_2;
1181       			set organism_summary_2;
1182       			by type notsorted;
1183       			num = _N_; * assign a number within this treatment group;
1184       		run;

NOTE: There were 53 observations read from the data set WORK.ORGANISM_SUMMARY_2.
NOTE: The data set WORK.ORGANISM_SUMMARY_2 has 53 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1185       		
1185     !   proc sort data= organism_summary_2 nodupkey; by type organism; run;

NOTE: There were 53 observations read from the data set WORK.ORGANISM_SUMMARY_2.
NOTE: 7 observations with duplicate key values were deleted.
NOTE: The data set WORK.ORGANISM_SUMMARY_2 has 46 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1186       	
1187       	
1188       		
1188     !   data glnd_rep.organism_summary_closed;
1189       			merge 	organism_summary_1
1190       					organism_summary_2
1191       					;
1192       			
1193       			* blanks were created in one group where an OTHER organism was seen in one group but
1193     ! not the other, as a result of the merge. fix this ;
1194       			if prevalent_a = "" then prevalent_a = "0 (0/&n_A, 0.0%)";
1195       			if prevalent_b = "" then prevalent_b = "0 (0/&n_B, 0.0%)";		
1196       			if incident_a = "" then incident_a = "0 (0/&n_A, 0.0%)";		
1197       			if incident_b = "" then incident_b = "0 (0/&n_B, 0.0%)";		
1198       	
1199       
1200       			* control the sorting of each TYPE for printing;
1201       
1202       				if trim(type) = "Gram+ Bacteria" then type_sort = 0;
1203       				if trim(type) = "Gram- Bacteria" then type_sort = 1;
1204       				if trim(type) = "Fungal Species" then type_sort = 2;
                                           The SAS System

1205       				if trim(type) = "Other" then type_sort = 3;
1206       				
1207       				* truncate label on last row;
1208       				if type = "== Any Infection ==" then do; type ="Any Infection"; type_sort = 4; end;
1209       
1210       	
1211       			by type organism;
1212       		run;

NOTE: There were 52 observations read from the data set WORK.ORGANISM_SUMMARY_1.
NOTE: There were 46 observations read from the data set WORK.ORGANISM_SUMMARY_2.
NOTE: The data set GLND_REP.ORGANISM_SUMMARY_CLOSED has 66 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.02 seconds
      

1213       
1214       
1215       		
1215     !   proc sort data= glnd_rep.organism_summary_closed; by type_sort summary num; run;

NOTE: There were 66 observations read from the data set GLND_REP.ORGANISM_SUMMARY_CLOSED.
NOTE: The data set GLND_REP.ORGANISM_SUMMARY_CLOSED has 66 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.09 seconds
      cpu time            0.02 seconds
      

1215     !                                                                                    * sort
1215     !  by type, whether it is a summary record,
1216       																			then by num for the non-summary records (this does not necessarily
1217       																			produce reliable sorting within the non-summary records);
1218       
1219       
1220       		* insert spaces after each grouping, as row titles are now getting tossed onto 2 lines
1220     ! ;
1221       		
1221     !   data glnd_rep.organism_summary_closed;
1222       			set glnd_rep.organism_summary_closed(rename=(organism=temp));
1223       			by type notsorted;
1224       
1225       
1226       			* convert all genus names to upper-case for most appropriate presentation. ie:
1226     ! capitalize first letter ;
1227       			if substr(temp,1,2)^="--" then organism = Upcase(substrn(strip(temp), 1, 1)) ||
1227     ! substrn(strip(temp), 2);
1228       			else organism ="-- "||Upcase(substrn(strip(temp), 4, 1)) || substrn(strip(temp), 5);
1229       				*organism=propcase(temp);
1230       
1231       			drop temp;
1232       
1233       
1234       
1235       	label 	type = "Class" 
1236       					organism = "Organism"
1237       					prevalent_a = "Treatment A"
1238       					incident_a = "Treatment A"
                                           The SAS System

1239       					prevalent_b = "Treatment B"
1240       					incident_b = "Treatment B";
1241       					
1242       			if last.type then do;
1243       				output;
1244       				 organism = ""; prevalent_a = ""; prevalent_b = ""; incident_a = ""; incident_b = "";
1244     !  * type is still output, so can properly print;
1245       				output;
1246       			end;
1247       			else output;
1248       		run;

NOTE: There were 66 observations read from the data set GLND_REP.ORGANISM_SUMMARY_CLOSED.
NOTE: The data set GLND_REP.ORGANISM_SUMMARY_CLOSED has 71 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      

1249       
1250       * Merge and Polish up site and type table */
1251       
1252       	* add record indicator for sorting both A and B tables after merge;
1253       		
1253     !   data episode_summary_1;
1254       			set episode_summary_1;
1255       			by site_code type_code  notsorted; 			
1256       
1257       			* delete empty rows created by removal of causative organisms ;
1258       			if ~first.type_code then delete;
1259       		run;

NOTE: There were 130 observations read from the data set WORK.EPISODE_SUMMARY_1.
NOTE: The data set WORK.EPISODE_SUMMARY_1 has 26 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1260       
1261       		
1261     !   data episode_summary_1;
1262       			set episode_summary_1;
1263       			num = _N_;
1264       		run;

NOTE: There were 26 observations read from the data set WORK.EPISODE_SUMMARY_1.
NOTE: The data set WORK.EPISODE_SUMMARY_1 has 26 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1265       		
1266       		/* data glnd_rep.episode_summary_1; set episode_summary_1; run; * FOR TESTING ONLY ; */
1267       		
1268       		
1268     !   proc sort data= episode_summary_1; by site_code type_code; run;
                                           The SAS System


NOTE: There were 26 observations read from the data set WORK.EPISODE_SUMMARY_1.
NOTE: The data set WORK.EPISODE_SUMMARY_1 has 26 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1269       	
1270       		
1270     !   data episode_summary_2;
1271       			set episode_summary_2;
1272       			by site_code type_code  notsorted; 	
1273       
1274       			* delete empty rows created by removal of causative organisms ;
1275       			if ~first.type_code then delete;
1276       		run;

NOTE: There were 97 observations read from the data set WORK.EPISODE_SUMMARY_2.
NOTE: The data set WORK.EPISODE_SUMMARY_2 has 22 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1277       
1278       		
1278     !   data episode_summary_2;
1279       			set episode_summary_2;
1280       			num = _N_;
1281       		run;

NOTE: There were 22 observations read from the data set WORK.EPISODE_SUMMARY_2.
NOTE: The data set WORK.EPISODE_SUMMARY_2 has 22 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1282       
1283       		/* data glnd_rep.episode_summary_2; set episode_summary_2; run;  * FOR TESTING ONLY; */
1284       
1285       		
1285     !   proc sort data= episode_summary_2; by site_code type_code; run;

NOTE: There were 22 observations read from the data set WORK.EPISODE_SUMMARY_2.
NOTE: The data set WORK.EPISODE_SUMMARY_2 has 22 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1286       	
1287       	
1288       		
1288     !   data glnd_rep.episode_summary_closed;
1289       			merge 	episode_summary_1
1290       					episode_summary_2
                                           The SAS System

1291       					;
1292                       by site_code type_code;
1293       *               added by george for splus;
1294       
1295       
1296       length  tc $ 50;
1297         tc='  ';
1298       
1299        if type_code="SUTI" then tc= "Symptomatic urinary tract infection";
1300                                       if type_code="ASB" then tc=     "Asymptomatic
1300     ! bacteriuria" ;
1301                                       if type_code="OUTI" then tc=    "Other infections of the
1301     ! urinary tract";
1302                                       if type_code="SKNC" then tc= "Superficial incisional
1302     ! infection at chest incision site, after CBGB";
1303                                       if type_code="SKNL" then tc= "Superficial incisional
1303     ! infection at vein donor site, after CBGB.";
1304                                       if type_code="STC" then tc=   "After CBGB, report STC for
1304     !  deep incisional surgical site infection at chest inc
1305       ision site.";
1306                                       if type_code="STL" then tc=      "After CBGB, report STL
1306     ! for deep incisional surgical site infection at vein d
1307       onor site.";
1308                                       if type_code="PNU1" then tc= "PNU1 - Clinically defined
1308     ! pneumonia";
1309                                       if type_code="PNU2" then tc= "PNU2 - Pneumonia with
1309     ! specific lab findings";
1310                                       if type_code="PNU3" then tc= "PNU3 - Pneumonia in
1310     ! immunocompromised patients";
1311                                       if type_code="LCBI" then tc=  "Laboratory-confirmed
1311     ! bloodstream infection";
1312                                       if type_code="CSEP" then tc=    "Clinical sepsis";
1313                                       if type_code="BONE" then tc=    "Osteomyelitis";
1314                                       if type_code="JNT" then tc=     "Joint or bursa";
1315                                       if type_code="IC" then tc=      "Intracranial infection";
1316                                       if type_code="MEN" then tc=     "Menitigitis or
1316     ! ventriculitis";
1317                                       if type_code="SA" then tc=      "Spinal abscess without
1317     ! meningitis";
1318                                       if type_code="VASC" then tc=    "Arterial or venous
1318     ! infection";
1319                                       if type_code="ENDO" then tc=    "Endocarditis";
1320                                       if type_code="CARD" then tc=    "Myocarditis or
1320     ! pericarditis";
1321                                       if type_code="MED" then tc=     "Mediastinitis";
1322                                       if type_code="EYE" then tc=     "Eye other than
1322     ! conjunctivitis";
1323                                       if type_code="ORAL" then tc=    "Oral Cavity (mouth,
1323     ! tongue, or gums)";
1324                                       if type_code="SINU" then tc=    "Sinusitis";
1325                                       if type_code="UR" then tc=      "Upper respiratory tract,
1325     !  pharyngitis, laryngitis, epiglottitis";
1326                                       if type_code="GE" then tc=      "Gastroenteritis";
1327                                       if type_code="GIT" then tc=     "Gastrointestinal (GI)
1327     ! tract";
1328                                       if type_code="HEP" then tc=     "Hepatitis";
1329                                       if type_code="IAB" then tc=     "Intra-abdominal, not
1329     ! specified elsewhere";
                                           The SAS System

1330                                       if type_code="BRON" then tc=    "Bronchitis,
1330     ! tracheobronchitis, tracheitis, without evidence of pneumonia";
1331                                       if type_code="LUNG" then tc=    "Other infections of the
1331     ! lower respiratory tract";
1332                                       if type_code="DECU" then tc=    "Decubitus ulcer";
1333       
1334       
1335       			* blanks were created in one group where an OTHER organism was seen in one group but
1335     ! not the other, as a result of the merge. fix this ;
1336       			if site_code ~= "" then do;
1337       				if prevalent_a = "" then prevalent_a = "0/0 (0.0%)";
1338       				if prevalent_b = "" then prevalent_b = "0/0 (0.0%)";		
1339       				if incident_a = "" then incident_a = "0 (0/0, 0.0%)";		
1340       				if incident_b = "" then incident_b = "0 (0/0, 0.0%)";		
1341       			end;
1342       			
1343       			
1344       			***** fixe site code same way;
1345       length sc $ 30;
1346       sc='     ';
1347       
1348       if site_code= "UTI" then sc=	"Urinary Tract Infection";
1349       if site_code= "SSI" then sc=	"Surgical Site Infection";
1350       if site_code= "PNEU" then sc= "Pneumonia ";
1351       if site_code= "BSI" then sc=	"Bloodstream Infection";
1352       if site_code= "BJ" then sc="Bone and Joint Infection";
1353       if site_code= "CNS" then sc=	"Central Nervous System Infection";
1354       if site_code= "CVS" then sc=	"Cardiovascular System Infection";
1355       if site_code= "EENT" then sc=	"Eye, Ear, Nose, Throat, or Mouth Infection";
1356       if site_code= "GI" then sc="Gastrointestinal System Infection";
1357       if site_code= "LRI" then sc=	"Lower Respiratory Tract Infection, Other Than Pneumonia";
1358       if site_code= "SST" then sc=	"Skin and Soft Tissue Infection";
1359       if site_code= "Over" then sc= "Overall total:";
1360       if site_code= "Site" then sc= "Totals by site:";
1361       if site_code= "Emor" then sc= "Emory";
1362       if site_code= "Miri" then sc= "Miriam";
1363       if site_code= "Vand" then sc= "Vanderbilt";
1364       if site_code= "Colo" then sc= "Colorado";
1365       if site_code="Site" then do;
1366        prevalent_a='  ';
1367        prevalent_b='  ';
1368        incident_a= '  ';
1369        incident_b='  ';
1370       end;
1371       
1372       			label tc="Type Code"	
1373       					prevalent_a = "Treatment A"
1374       					incident_a = "Treatment A"
1375       					prevalent_b = "Treatment B"
1376       					incident_b = "Treatment B"
1377       					site_code="Site Code"
1378       					sc="Site Code"
1379       					type_code="Type Code";
1380       		run;

NOTE: There were 26 observations read from the data set WORK.EPISODE_SUMMARY_1.
NOTE: There were 22 observations read from the data set WORK.EPISODE_SUMMARY_2.
NOTE: The data set GLND_REP.EPISODE_SUMMARY_CLOSED has 32 observations and 17 variables.
                                           The SAS System

NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.02 seconds
      

1381       
1382       	
1382     !  proc contents;
1383       
1384       		

NOTE: The PROCEDURE CONTENTS printed page 64.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

1384     !   proc sort data= glnd_rep.episode_summary_closed nodup; by sort center num; run;

NOTE: There were 32 observations read from the data set GLND_REP.EPISODE_SUMMARY_CLOSED.
NOTE: 0 duplicate observations were deleted.
NOTE: The data set GLND_REP.EPISODE_SUMMARY_CLOSED has 32 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.10 seconds
      cpu time            0.00 seconds
      

1385       		
1385     !   proc print data =glnd_rep.episode_summary_closed;run;

NOTE: There were 32 observations read from the data set GLND_REP.EPISODE_SUMMARY_CLOSED.
NOTE: The PROCEDURE PRINT printed pages 65-68.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1386       
1387       
1388       	/*Proc SQL noprint;
1389       		create table unique as select distinct (organism) from glnd_rep.organism_summary_closed
1389     ! ;
1390       	quit;*/
1391       		
1392       
1393       
1394       /* PRINT TABLES */
1395       
1396       	options ls=125 nodate  	/*papersize= ("15", "8.5")*/    orientation=portrait center nonumber formdlim='-'
1396     ! formchar = "|----|+|---+=|-/\<>*";
1397       			 * nodate contents;
1398       	*ods ps file = "/glnd/sas/reporting/nosocomialclosed.ps"  style=journal startpage=no ;
1399       	*ods pdf file = "/glnd/sas/reporting/nosocomial_organism_table_closed.pdf" style = journal startpage=no ;
1400       	ods ps file = "nosocomialclosed.ps"  style=journal startpage=no ;
NOTE: Writing ODS PS output to DISK destination "/home/bwu2/spelling/nosocomialclosed.ps", printer "POSTSCRIPT".
1401       	ods pdf file = "nosocomial_organism_table_closed.pdf" style = journal startpage=no ;
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_organism_table_closed.pdf", printer "PDF".
1402       
                                                       The SAS System

1403       		title1 "GLND - Summary of Nosocomial Infections" ;
1404       		title2 "By Cultured Organism";
1405       
1406       		
1406     !   proc print data= glnd_rep.organism_summary_closed noobs label width=minimum split = '*' style(table)=
1406     ! [font_width = compressed] ;
1407       
1408       			id type;
1409       			by type notsorted; 
1410       			var organism;
1411       			
1412       			var prevalent_a /style(data) = [just=center]; * separate var statement for separate atrributes ;
1413       			var incident_a /style(data) = [just=center]; * separate var statement for separate atrributes ;
1414       			var prevalent_b /style(data) = [just=center]; * separate var statement for separate atrributes ;
1415       			var incident_b /style(data) = [just=center]; * separate var statement for separate atrributes ;
1416       			
1417       			label 	type = "Class" 
1418       					organism = "Organism"
1419       					prevalent_a = "A*Prevalent Infec.:*# patients (% prev.)"
1420       					incident_a = "A*Incident Infec.:* # infec. (#patients, % incid.)"
1421       					prevalent_b = "B*Prevalent Infec.:*# patients (% prev.)"
1422       					incident_b = "B*Incident Infec.:* # infec. (#patients, % incid.)"
1423       			
1424       				;
1425       		run;

NOTE: There were 71 observations read from the data set GLND_REP.ORGANISM_SUMMARY_CLOSED.
NOTE: The PROCEDURE PRINT printed pages 69-72.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

1425     !       	
1426       
1427       
1428       	ods ps close;
NOTE: ODS PS printed 3 pages to /home/bwu2/spelling/nosocomialclosed.ps.
1429       	ods pdf close;
NOTE: ODS PDF printed 3 pages to /home/bwu2/spelling/nosocomial_organism_table_closed.pdf.
1430       
1431       		options ls=250; *nodate  	/*papersize= ("15", "8.5")*/  orientation=portrait center nonumber formdlim='-' formchar = "|----|+|---+=|-/\<>*"; 	
1432       				* nodate contents;
1433       		*ods ps file = "/glnd/sas/reporting/nosocomialepisodeclosed.ps" style = journal startpage=no ;
1434       		*ods pdf file = "/glnd/sas/reporting/nosocomial_episode_table_closed.pdf" style = journal startpage=no ;
1435       		ods ps file = "nosocomialepisodeclosed.ps" style = journal startpage=no ;
NOTE: Writing ODS PS output to DISK destination "/home/bwu2/spelling/nosocomialepisodeclosed.ps", printer "POSTSCRIPT".
1436       		ods pdf file = "nosocomial_episode_table_closed.pdf" style = journal startpage=no ;
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_episode_table_closed.pdf", printer "PDF".
1437       			title1 "GLND - Summary of Nosocomial Infections";
1438       			title2 "By Clinical Site and Type";
1439       
1440       
1441       			
1441     !    proc print data= glnd_rep.episode_summary_closed noobs label width=minimum split = '*' style(table)= [font_width = compressed] ;
1442       	
1443       				id site_code type_code  ;
1444       				by site_code type_code notsorted ;
                                                                                                                      The SAS System

1445       	
1446       				var prevalent_a /style(data) = [just=center]; * separate var statement for separate atrributes ;
1447       				var incident_a /style(data) = [just=center]; * separate var statement for separate atrributes ;
1448       				var prevalent_b /style(data) = [just=center]; * separate var statement for separate atrributes ;
1449       				var incident_b /style(data) = [just=center]; * separate var statement for separate atrributes ;
1450       		
1451       
1452       				label 	
1453       						prevalent_a = "A*Prevalent Infec.:*# patients (% prev.)"
1454       						incident_a = "A*Incident Infec.:* # infec. (#patients, % incid.)"
1455       						prevalent_b = "B*Prevalent Infec.:*# patients (% prev.)"
1456       						incident_b = "B*Incident Infec.:* # infec. (#patients, % incid.)"
1457       					;
1458       			
1459       					
1460       				format site_code $site_code.;
1461       			run;

NOTE: There were 32 observations read from the data set GLND_REP.EPISODE_SUMMARY_CLOSED.
NOTE: The PROCEDURE PRINT printed pages 73-74.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

1462       
1463       
1464       		ods ps close;
NOTE: ODS PS printed 3 pages to /home/bwu2/spelling/nosocomialepisodeclosed.ps.
1465       		ods pdf close;
NOTE: ODS PDF printed 2 pages to /home/bwu2/spelling/nosocomial_episode_table_closed.pdf.
1466       
1467       	quit;
1468       	options ls=120;
1469       proc print  data= glnd_rep.episode_summary_closed;
1470        var site_code sc;

NOTE: There were 32 observations read from the data set GLND_REP.EPISODE_SUMMARY_CLOSED.
NOTE: The PROCEDURE PRINT printed page 75.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1471        data glnd_rep.episodesummaryclosed;
1472         set glnd_rep.episode_summary_closed;
1473         keep sc tc prevalent_a prevalent_b incident_a incident_b;

NOTE: There were 32 observations read from the data set GLND_REP.EPISODE_SUMMARY_CLOSED.
NOTE: The data set GLND_REP.EPISODESUMMARYCLOSED has 32 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      

1474       proc contents data= glnd_rep.episodesummaryclosed;
1475       

                                                     The SAS System

NOTE: The PROCEDURE CONTENTS printed page 76.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1476       data glnd_rep.organism_summary_closed1;
1477          set glnd_rep.organism_summary_closed;
1478         if _n_ < 45;
1479       

NOTE: There were 71 observations read from the data set GLND_REP.ORGANISM_SUMMARY_CLOSED.
NOTE: The data set GLND_REP.ORGANISM_SUMMARY_CLOSED1 has 44 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.00 seconds
      

1480       data glnd_rep.organism_summary_closed2;
1481          set glnd_rep.organism_summary_closed;
1482         if _n_ >=45;

NOTE: There were 71 observations read from the data set GLND_REP.ORGANISM_SUMMARY_CLOSED.
NOTE: The data set GLND_REP.ORGANISM_SUMMARY_CLOSED2 has 27 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           9.62 seconds
      cpu time            4.68 seconds
      

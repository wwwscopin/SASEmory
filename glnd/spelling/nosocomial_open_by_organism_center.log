1                                                          The SAS System                              09:50 Friday, October 8, 2010

NOTE: Copyright (c) 2002-2003 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) 9.1 (TS1M3)
      Licensed to EMORY UNIVERSITY - T&R, Site 0014217002.
NOTE: This session is executing on the SunOS 5.9 platform.



NOTE: SAS 9.1.3 Service Pack 4

You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.30 seconds
      cpu time            0.07 seconds
      

NOTE: AUTOEXEC processing beginning; file is /home/bwu2/spelling/autoexec.sas.

NOTE: Libref RAND was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/randomization
NOTE: Libref GLND was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas
NOTE: Libref LIBRARY was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /home/bwu2/spelling
NOTE: Libref GLND_DF was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/reporting/df_reporting
NOTE: Libref GLND_EXT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/external_data
NOTE: Libref GLND_REP was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /glnd/sas/reporting

NOTE: AUTOEXEC processing completed.

1          /* nosocomial_open.sas 
2           *
3           * MODIFIED ON 3/9/09 TO INHERIT THE NOSOCOMIAL DATASET MODIFIED BY ADJUDICATION, RATHER THAN THE ORIGINAL SITE-REPORTED
2                                                          The SAS System                              09:50 Friday, October 8, 2010

3        ! DATA
4           *
5           * Produces tables regarding nosocomial infections for the DSMB OPEN SESSION report
6           * 
7           * Makes a listing of all nosocomial infections, by center 
8           * Makes three tables: 1. # infections (patients) by  organism type (cultured), and
9          							2. # infections(patients) by clinical presentation ( NO LONGER TRUE. THIS IS CALCULATED, BUT NOT PRINTED. THAT IS
9        ! DONE IN NOSOCOMIAL_ADJUDICATED_OPEN.SAS )
10          *							3. by center totals
11          */
12         
13          * 1st Table - # infections(patients) by organism type "Table 13" in 2/9/2007 MOO ;
14         
15         
16          	
16       !   proc sort data= glnd_rep.all_infections_with_adj; by id ; run;

NOTE: There were 238 observations read from the data set GLND_REP.ALL_INFECTIONS_WITH_ADJ.
NOTE: The data set GLND_REP.ALL_INFECTIONS_WITH_ADJ has 238 observations and 65 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.30 seconds
      cpu time            0.02 seconds
      

16       !                                                                 
17          	
17       !   proc sort data= glnd.status; by id ; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17       !                                            
18         
19         
20         /*** MODIFIED ON 3/9/09 TO INHERIT THE NOSOCOMIAL DATASET MODIFIED BY ADJUDICATION, RATHER THAN THE ORIGINAL
20       ! SITE-REPORTED DATA
21          	proc sort data= glnd.plate101; by id dfseq; run;
22         	proc sort data= glnd.plate102; by id dfseq; run;
23         	proc sort data= glnd.plate103; by id dfseq; run;
24         	
25         	* gather dates and infection data from forms;
26         	* looking at just infections for now;
27         	data noso;
28         		merge	glnd.plate101 (keep = id dfseq dt_infect cult_obtain cult_positive cult_org_code_1 org_spec_1 )
29         				glnd.plate102 (keep = id dfseq cult_org_code_2 cult_org_code_3 cult_org_code_4 cult_org_code_5 org_spec_2 org_spec_3
29       ! org_spec_4 org_spec_5)
30         				glnd.plate103 (keep = id dfseq infect_confirm site_code type_code);
31         		by id dfseq;
32         	run;
33         *****************************/	
34         *options linesize=100;
35         
36         	
36       !  data noso;
37         		set 	glnd_rep.all_infections_with_adj;
3                                                          The SAS System                              09:50 Friday, October 8, 2010

38         			;
39         	
40         		by id;
41         
42         
43         /* This only work for before the cult_org_code_1 correction was made */
44         /*********************************************************************/
45         *f org_spec_1="Cytomegalovirus" then cult_org_code_1=23;
46         
47         
48         
49         		* add center;
50         		center = floor(id / 10000);
51         
52         		format incident yn.;
53         		
54         
55         			* Set up text field to contain organism format. need to have text rather than numeric so can adjust the "other people"
55       ! ;
56         			organism_1 = put(cult_org_code_1, cult_org_code.);
57         			organism_2 = put(cult_org_code_2, cult_org_code.);
58         			organism_3 = put(cult_org_code_3, cult_org_code.);
59         			organism_4 = put(cult_org_code_4, cult_org_code.);
60         			organism_5 = put(cult_org_code_5, cult_org_code.);
61         
62         			** ADDED 7/30/2008 **;
63         			if org_spec_1 = "" then org_spec_1 = "(not specified)";
64         			if org_spec_2 = "" then org_spec_2 = "(not specified)";
65         			if org_spec_3 = "" then org_spec_3 = "(not specified)";
66         			if org_spec_4 = "" then org_spec_4 = "(not specified)";
67         			if org_spec_5 = "" then org_spec_5 = "(not specified)";
68         
69         			* Adjust "other" categories to include the name of the organism;
70         			if (cult_org_code_1 in (9, 20, 21,22,23)) then organism_1= trim(put(organism_1, $50.)) || " - " ||
70       ! trim(put(org_spec_1, $80.)) ;
71         			if (cult_org_code_2 in (9, 20, 21,22,23)) then organism_2= trim(put(organism_2, $50.)) || " - " ||
71       ! trim(put(org_spec_2, $80.)) ;
72         			if (cult_org_code_3 in (9, 20, 21,22,23)) then organism_3= trim(put(organism_3, $50.)) || " - " ||
72       ! trim(put(org_spec_3, $80.)) ;
73         			if (cult_org_code_4 in (9, 20, 21,22,23)) then organism_4= trim(put(organism_4, $50.)) || " - " ||
73       ! trim(put(org_spec_4, $80.)) ;
74         			if (cult_org_code_5 in (9, 20, 21,22,23)) then organism_5= trim(put(organism_5, $50.)) || " - " ||
74       ! trim(put(org_spec_5, $80.)) ;
75         
76         
77         			* remove repeat organisms from the same infection report, comparing the text labels, working backwards from the 5th
77       ! organism ;
78         			if (organism_5 = organism_4) then do; organism_5 = .; cult_org_code_5 = .; org_spec_5 = .; end;
79         			if (organism_4 = organism_3) then do; organism_4 = .; cult_org_code_4 = .; org_spec_4 = .; end;
80         			if (organism_3 = organism_2) then do; organism_3 = .; cult_org_code_3 = .; org_spec_3 = .; end;
81         			if (organism_2 = organism_1) then do; organism_2 = .; cult_org_code_2 = .; org_spec_2 = .; end;
82          
83         			
84         		
85         		label
86         			incident = "Incident"
87         			days_post_entry = "Days post study entry"
88         			cult_positive="Culture positive?"
4                                                          The SAS System                              09:50 Friday, October 8, 2010

89         			cult_obtain="Culture obtained?"
90         	        	site_code="Site code"
91         	        	type_code="Type code"
92         			infect_confirm="Infection confirmed?"
93         			center = "Center"
94         
95         			organism_1 ="1st cult. org."
96         			organism_2 ="2nd cult. org."
97         			organism_3 ="3rd cult. org."
98         			organism_4 ="4th cult. org."
99         			organism_5 ="5th cult. org."
100        			;
101        
102        	run;

NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      78:55   78:92   79:55   79:92   80:55   80:92   81:55   81:92   
NOTE: There were 238 observations read from the data set GLND_REP.ALL_INFECTIONS_WITH_ADJ.
NOTE: The data set WORK.NOSO has 238 observations and 65 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.05 seconds
      

103        
104        
105        	* capture sample size of number of suspected infections;
106        		
106      !   proc means data= noso;
107        			output out= noso_n n(id) = id_n;
108        		run;

NOTE: There were 238 observations read from the data set WORK.NOSO.
NOTE: The data set WORK.NOSO_N has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 1.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      

108      !       
109        		
109      !   data _null_;
110        			set noso_n;
111        	
112        			call symput('n_susp_infec', put(id_n, 3.0));
113        		run;

NOTE: There were 1 observations read from the data set WORK.NOSO_N.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

113      !       
114        
115        	* capture sample size of total people on study; 
116        		
5                                                          The SAS System                              09:50 Friday, October 8, 2010

116      !   proc means data= glnd.status;
117        			output out= study_n n(id) = id_n;
118        		run;

NOTE: There were 130 observations read from the data set GLND.STATUS.
NOTE: The data set WORK.STUDY_N has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed pages 2-3.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

118      !       
119        		
119      !   data _null_;
120        			set study_n;
121        	
122        			call symput('n_study', put(id_n, 3.0));
123        		run;

NOTE: There were 1 observations read from the data set WORK.STUDY_N.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

123      !       
124        
125        
126        
127        	/* PRODUCE BY CENTER LISTNG */
128        	* to do: use a macro to go by center, get rid of by-line, make a custom one with sample size for each center ;
129        	
130        	options ls=120 nodate  	/*papersize= ("15", "8.5")*/  orientation = landscape center nonumber formdlim='-'
130      ! formchar = "|----|+|---+=|-/\<>*"; * nodate contents;
131        	*ods pdf file = "/glnd/sas/reporting/nosocomial_listings_open.pdf" style = journal startpage=no ;
132        	ods pdf file = "nosocomial_listings_open.pdf" style = journal startpage=no ;
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_listings_open.pdf", printer "PDF".
133        		title "GLND - Summary of Suspected Nosocomial Infections  (total = &n_susp_infec, n = &n_study)";
134        		
134      !   proc sort data= noso; by id  days_post_entry infect_confirm   ; run;

NOTE: There were 238 observations read from the data set WORK.NOSO.
NOTE: The data set WORK.NOSO has 238 observations and 65 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

134      !                                                                       
135        		
135      !   proc print data= noso noobs label width=minimum style(table)= [font_width = compressed ];
136        			id center;
137        			by center;
138        			var id infect_confirm incident days_post_entry  cult_obtain cult_positive organism_1 organism_2 organism_3
138      !  organism_4 organism_5 
139        				site_code type_code;
140        			format center center.;
                                                     The SAS System

141        		run;

NOTE: There were 238 observations read from the data set WORK.NOSO.
NOTE: The PROCEDURE PRINT printed pages 4-42.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.97 seconds
      cpu time            0.98 seconds
      

141      !       
142        	ods pdf close;
NOTE: ODS PDF printed 33 pages to /home/bwu2/spelling/nosocomial_listings_open.pdf.
143        
144        
145        	/* PRODUCE BY ORGANISM TABLE */
146        
147        	* go through data, currently arranged on a per-episode basis, and stack by organism ;
148        	
148      !  data by_organism;
149        		set noso;
150        		length	organism $80;
151        		length org_spec $80;
152        
153        		where (infect_confirm in (1,2)) & (cult_positive=1); * only look at positive infections with positive
153      ! cultures ; 
154        
155        		* work backwards from oganism_5,  ... ;
156        		if cult_org_code_5 ~= . then do; organism = organism_5; cult_org_code = cult_org_code_5; org_spec =
156      ! org_spec_5; output; end;
157        		if cult_org_code_4 ~= . then do; organism = organism_4; cult_org_code = cult_org_code_4; org_spec =
157      ! org_spec_4; output; end;
158        		if cult_org_code_3 ~= . then do; organism = organism_3; cult_org_code = cult_org_code_3; org_spec =
158      ! org_spec_3; output; end;
159        		if cult_org_code_2 ~= . then do; organism = organism_2; cult_org_code = cult_org_code_2; org_spec =
159      ! org_spec_2; output; end;
160        		if cult_org_code_1 ~= . then do; organism = organism_1; cult_org_code = cult_org_code_1; org_spec =
160      ! org_spec_1; output; end; * every record has at least the first organism;
161        		
162        		drop organism_1 organism_2 organism_3 organism_4 organism_5 cult_org_code_1 cult_org_code_2 cult_org_code_3
162      !  cult_org_code_4 cult_org_code_5
163        			org_spec_1 org_spec_2 org_spec_3 org_spec_4 org_spec_5;
164        	run;

NOTE: There were 137 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2) and (cult_positive=1);
NOTE: The data set WORK.BY_ORGANISM has 199 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds
      

164      !      	
165        
166        
167        		* handle non "other" types of infections first, using numeric codes ;
168        
169        			* get counts of infections, by organism type;
170        				
                                                     The SAS System

170      !     proc sort data= by_organism; by incident; run;

NOTE: There were 199 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 199 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.02 seconds
      

170      !                                                   			
171        				
171      !     proc means data = by_organism n  ;
172        					where (cult_org_code ^=23); * will process others separately;
173        					by incident;
174        					class cult_org_code;
175        					var id ;
176        
177        					output out = infects_out n(cult_org_code) = num_infect;
178        				run;

NOTE: There were 198 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.INFECTS_OUT has 38 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 43-44.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

178      !         
179        				* clean up output dataset ;	
180        				
180      !     data infects_out;
181        					set infects_out;
182        					where cult_org_code ~= .;
183        					drop _type_ _freq_;
184        				run;

NOTE: There were 36 observations read from the data set WORK.INFECTS_OUT.
      WHERE cult_org_code not = .;
NOTE: The data set WORK.INFECTS_OUT has 36 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

184      !         
185        			
186        			* get count of people infected, by organism type ;
187        			* remove repeat IDs within each organism code;
188        				
188      !     proc sort data= by_organism; by incident cult_org_code id; run;

NOTE: There were 199 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 199 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
                                                     The SAS System

      

188      !                                                                    		* conveniently already sorted by
188      ! incident ;
189        				
189      !     data people_infec;
190        					set by_organism;
191        					where (cult_org_code ^=23); * will process others separately;
192        					by incident cult_org_code id;
193        
194        					if ~first.id then delete; * make sure there's one record for each person within this type of infection ;
194      ! 
195        				run;

NOTE: There were 198 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.PEOPLE_INFEC has 162 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.30 seconds
      cpu time            0.01 seconds
      

195      !         
196        				
196      !     proc sort data= people_infec; by incident; run;

NOTE: There were 162 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PEOPLE_INFEC has 162 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

196      !                                                    		
197        
198        				
198      !     proc means data = people_infec n  ;
199        					by incident;
200        					class cult_org_code;
201        					var id ;
202        
203        					output out = patients_out n(cult_org_code) = num_patients;
204        				run;

NOTE: There were 162 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PATIENTS_OUT has 38 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 45-46.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

204      !         
205        				* clean up output dataset ;	
206        				
206      !     data patients_out;
207        					set patients_out;
208        					where cult_org_code ~= .;
                                                     The SAS System

209        					drop _type_ _freq_;
210        				run;

NOTE: There were 36 observations read from the data set WORK.PATIENTS_OUT.
      WHERE cult_org_code not = .;
NOTE: The data set WORK.PATIENTS_OUT has 36 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

210      !         
211        
212        			* merge patient and infection totals, for prevalent and incident, side-by-side ;
213        				
213      !     data total_prev;
214        					set	patients_out (rename = (num_patients = prev_patients)) ;
215        					by cult_org_code;
216        					where incident = 0;
217        				
218        					
219        				run;

NOTE: There were 17 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.TOTAL_PREV has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

219      !         
220        	
221        				
221      !     data total_inc;
222        					merge 	infects_out  (rename = (num_infect = inc_infect ))
223        							patients_out (rename = (num_patients = inc_patients ));
224        					by cult_org_code;
225        					where incident = 1;
226        				run;

NOTE: There were 19 observations read from the data set WORK.INFECTS_OUT.
      WHERE incident=1;
NOTE: There were 19 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=1;
NOTE: The data set WORK.TOTAL_INC has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

226      !         
227        				
228        				
228      !     data total;	
229        					merge total_inc total_prev;
230        					by cult_org_code;
231        
                                                     The SAS System

232        					drop incident;
233        				run;

NOTE: There were 19 observations read from the data set WORK.TOTAL_INC.
NOTE: There were 17 observations read from the data set WORK.TOTAL_PREV.
NOTE: The data set WORK.TOTAL has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

233      !         
234        				
235        		* merge these summary numbers back with the blank gram+, gram-, fungus tables;
236        
237        		/* Create pieces by organism types */
238        		
239        		* blank tables first ;
240        		
240      !   data all_codes;
241        			do i = 1 to 23;
242        				cult_org_code = i;
243        				output;
244        			end;	
245        
246        			drop i;
247        		run;

NOTE: The data set WORK.ALL_CODES has 23 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

247      !       	
248        		
249        
250        		* gram+ bacteria (codes 1-7, 11, 16,21);
251        		
251      !   data gram_pos;
252        			merge all_codes 
253        				total	
254        					;
255        			by cult_org_code;
256        			where cult_org_code in (1,2,3,4,5,6,7,11,16,21);
257        			type = "Gram+ Bacteria     ";  * spaces are here so that the variable can hold longer strings later ;
258        			organism = put(cult_org_code, cult_org_code.);
259        		run;

NOTE: There were 10 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (1, 2, 3, 4, 5, 6, 7, 11, 16, 21);
NOTE: There were 8 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (1, 2, 3, 4, 5, 6, 7, 11, 16, 21);
NOTE: The data set WORK.GRAM_POS has 10 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
                                                     The SAS System


260        
261        
262        		* gram- bacteria (codes: 8-10, 12-15,22);
263        		* however, we want codes 8 and 9 last, so that we can append the klebsiella other data;
264        		
264      !   data gram_neg;	
265        			merge all_codes 
266        				total	
267        					;
268        			by cult_org_code;
269        			where cult_org_code in (10,12,13,14,15);
270        		run;

NOTE: There were 5 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (10, 12, 13, 14, 15);
NOTE: There were 5 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (10, 12, 13, 14, 15);
NOTE: The data set WORK.GRAM_NEG has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

270      !       
271        		
271      !   data gram_neg_1;
272        			merge all_codes 
273        				total	
274        					;
275        			by cult_org_code;
276        		
277        			where cult_org_code in (8,9) ; 
278        		run;

NOTE: There were 2 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (8, 9);
NOTE: There were 2 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (8, 9);
NOTE: The data set WORK.GRAM_NEG_1 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

279        
280        		
280      !   data gram_neg_2;
281        			merge all_codes 
282        				total	
283        					;
284        			by cult_org_code;
285        		
286        			where cult_org_code=22 ; 
287        		run;

NOTE: There were 1 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code=22;
                                                     The SAS System

NOTE: There were 1 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code=22;
NOTE: The data set WORK.GRAM_NEG_2 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

288        
289        
290        		
290      !   data gram_neg;
291        			set gram_neg gram_neg_1 gram_neg_2;
292        		
293        			type = "Gram- Bacteria";
294        		organism = put(cult_org_code, cult_org_code.);
295        		run;

NOTE: There were 5 observations read from the data set WORK.GRAM_NEG.
NOTE: There were 2 observations read from the data set WORK.GRAM_NEG_1.
NOTE: There were 1 observations read from the data set WORK.GRAM_NEG_2.
NOTE: The data set WORK.GRAM_NEG has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

295      !       
296        		
297        		
298        
299        		* Fungal species (codes 17-20);
300        		
300      !   data fungus;	
301        			merge all_codes 
302        				total	
303        					;
304        			by cult_org_code;
305        			where cult_org_code in (17,18,19,20);
306        			organism = put(cult_org_code, cult_org_code.);
307        			
308        			if cult_org_code = 20 then	organism = put(cult_org_code, cult_org_code.) || ":";
309        
310        			type= "Fungal Species";
311        		run;

NOTE: There were 4 observations read from the data set WORK.ALL_CODES.
      WHERE cult_org_code in (17, 18, 19, 20);
NOTE: There were 4 observations read from the data set WORK.TOTAL.
      WHERE cult_org_code in (17, 18, 19, 20);
NOTE: The data set WORK.FUNGUS has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

311      !       
312        
                                                     The SAS System

313        
314        		/* Now that we have all three main groupings, we will now repeat the process above on the 3 "other"
314      ! categories, but performing 
315        			operations on the three text strings, not the organism code
316        
317        			The code is pasted, overwriting the previous datasets, with little adjustment */
318        
319        			* get counts of infections, by organism type;
320        				
320      !     proc sort data= by_organism; by incident; run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

320      !                                                   			
321        				
321      !     proc means data = by_organism n  ;
322        					where (cult_org_code in (9,20,21,22,23));
323        					by incident;
324        					class organism; * by the text description of the organism, not the number ;
325        					var id ;
326        
327        					output out = infects_out n(cult_org_code) = num_infect;
328        				run;

NOTE: There were 64 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
NOTE: The data set WORK.INFECTS_OUT has 49 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 47-49.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

328      !         
329        			
330        				* clean up output dataset ;	
331        				
331      !     data infects_out;
332        					set infects_out;
333        					where (organism ~= ".") | (trim(organism) ~= " ");
334        				
335        					drop _type_ _freq_;
336        				run;

NOTE: There were 49 observations read from the data set WORK.INFECTS_OUT.
      WHERE (organism not = '.') or (TRIM(organism) not = ' ');
NOTE: The data set WORK.INFECTS_OUT has 49 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

336      !         
337        			
                                                     The SAS System

338        			* get count of people infected, by organism type ;
339        			* remove repeat IDs within each organism code;
340        				
341        				
341      !     proc sort data= by_organism; by incident organism id; run;

NOTE: There were 199 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 199 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

341      !                                                               		
342        				
342      !     data people_infec;
343        					set by_organism;
344        					where (cult_org_code in (9,20,21,22,23));
345        					by incident organism id;
346        
347        					if ~first.id  then delete; * make sure there's one record for each person within this type of infection
347      ! ;
348        
349        				run;

NOTE: There were 64 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
NOTE: The data set WORK.PEOPLE_INFEC has 59 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

349      !         
350        				
350      !     proc sort data= people_infec; by incident; run;

NOTE: There were 59 observations read from the data set WORK.PEOPLE_INFEC.
NOTE: The data set WORK.PEOPLE_INFEC has 59 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

350      !                                                    		
351        
352        				
352      !     proc means data = people_infec n  ;
353        					where (cult_org_code in (9,20,21,22,23));
354        					by incident;
355        					class organism;
356        					var id ;
357        
358        					output out = patients_out n(cult_org_code) = num_patients;
359        				run;

NOTE: There were 59 observations read from the data set WORK.PEOPLE_INFEC.
      WHERE cult_org_code in (9, 20, 21, 22, 23);
                                                     The SAS System

NOTE: The data set WORK.PATIENTS_OUT has 49 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 50-52.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

359      !         
360        				* clean up output dataset ;	
361        				
361      !     data patients_out;
362        					set patients_out;
363        					where (organism ~= ".") | (trim(organism) ~= " ");
364        					drop _type_ _freq_;
365        				run;

NOTE: There were 49 observations read from the data set WORK.PATIENTS_OUT.
      WHERE (organism not = '.') or (TRIM(organism) not = ' ');
NOTE: The data set WORK.PATIENTS_OUT has 49 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365      !         
366        
367        			* merge patient and infection totals, for prevalent and incident, side-by-side ;
368        				
368      !     data total_prev;
369        					set	patients_out (rename = (num_patients = prev_patients)) ;
370        					by organism;
371        					where incident = 0;
372        				
373        					
374        				run;

NOTE: There were 20 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.TOTAL_PREV has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374      !         
375        	
376        				
376      !     data total_inc;
377        					merge 	infects_out  (rename = (num_infect = inc_infect ))
378        							patients_out (rename = (num_patients = inc_patients ));
379        					by organism;
380        					where incident = 1;
381        				run;

NOTE: There were 29 observations read from the data set WORK.INFECTS_OUT.
      WHERE incident=1;
NOTE: There were 29 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=1;
                                                     The SAS System

NOTE: The data set WORK.TOTAL_INC has 29 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

381      !         
382        				
383        				
384        				
384      !     proc sort data= by_organism; by organism; run;

NOTE: There were 199 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 199 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

384      !                                                   
385        
386        				* these have all the other organisms to add into other parts of the table  ;
387        				
387      !     data total_others;	
388        					merge 	total_inc (in = has_inc_other)
389        							total_prev (in = has_prev_other)
390        							by_organism (keep = organism cult_org_code) /* put the culture number back on the dataset */
391        							;
392        					by organism;
393        
394        					if ~(has_inc_other | has_prev_other) then delete; * capture just those with other infections ; 
395        					if _N_ = 1 then delete ; * the above means procedure's use of the cult_org_code for the n otuput
395      ! produces a summary first record with a blank description that needs to be removed;
396        					drop incident;
397        
398        					if cult_org_code=9  then type = "Gram- Bacteria";
399        					if cult_org_code=20 then type = "Fungal Species";
400        					if cult_org_code=21 then type = "Gram+ Bacteria";
401        					if cult_org_code=22 then type = "Gram- Bacteria";
402        					if cult_org_code=23 then type = "Other";
403        
404        				run;

NOTE: There were 29 observations read from the data set WORK.TOTAL_INC.
NOTE: There were 20 observations read from the data set WORK.TOTAL_PREV.
NOTE: There were 199 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.TOTAL_OTHERS has 64 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      

404      !         
405        				
406        
407        			
407      !    proc means data= total;
408        			run;
                                                     The SAS System


NOTE: There were 20 observations read from the data set WORK.TOTAL.
NOTE: The PROCEDURE MEANS printed page 53.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

409        
410        
411        /*  ADD THE OTHERS WITHIN EACH TYPE. AS WELL AS GENERAL "OTHER" group below. 
412        	then create the various summary numbers for display, format their display (found in nutrition_summaries.sas)
412      !  */
413        
414        		/* stack all pieces in the desired order and prepare summary table */
415        		
415      !   data organism_summary;
416        			length organism $80;
417        			set gram_pos	
418        				total_others (where=(cult_org_code = 21))	
419        				gram_neg     (where=(cult_org_code ~= 22))
420        				total_others (where=(cult_org_code = 9))
421        				gram_neg     (where=(cult_org_code = 22))		
422        				total_others (where=(cult_org_code = 22))		
423        				fungus
424        				total_others (where=(cult_org_code = 20))
425        				total_others (where=(cult_org_code = 23))
426        				;
427        
428        			* add "types" into the 'other' rows for proper display ;
429        			if cult_org_code = 21 then do;
430        				if organism^=scan(organism,1,"-") then do;
431        				organism = "--" || substrn(organism, 23); * chop of the "Other - " portion of the string ; 
432        			end;	end;
433        
434        			* add "types" into the 'other' rows for proper display ;
435        			if cult_org_code = 9 then do;
436        				if organism^=scan(organism,1,"-") then do;
437        				organism = "--" || substrn(organism, 27); * chop of the "Other - " portion of the string ; 
438        			end;	end;
439        
440        			* add "types" into the 'other' rows for proper display ;
441        			if cult_org_code = 22 then do;
442        				if organism^=substr(organism,1,20) then do;
443        				organism = "--" || substrn(organism, 23); * chop of the "Other - " portion of the string ; 
444        			end;	end;
445        
446        			* add "types" into the 'other' rows for proper display ;
447        			if cult_org_code = 20 then do;
448        				if organism^=scan(organism,1,"-") then do;
449        				organism = "--" || substrn(organism, 23); * chop of the "Other - " portion of the string ; 
450        			end;	end;
451        
452        			if (cult_org_code = 23) & type="Other" then do;
453        				organism = substrn(organism, 9); * chop of the "Other - " portion of the string ; 
454        			end;
455        
456        	
                                                     The SAS System

457        			* set missing data to 0's ;
458        			if prev_patients = . then prev_patients= 0;
459        			if inc_infect = . then inc_infect = 0;	
460        			if inc_patients = . then inc_patients= 0;
461        
462        			format cult_org_code cult_org_code.;
463        		run;

NOTE: There were 10 observations read from the data set WORK.GRAM_POS.
NOTE: There were 42 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=21;
NOTE: There were 7 observations read from the data set WORK.GRAM_NEG.
      WHERE cult_org_code not = 22;
NOTE: There were 5 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=9;
NOTE: There were 1 observations read from the data set WORK.GRAM_NEG.
      WHERE cult_org_code=22;
NOTE: There were 6 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=22;
NOTE: There were 4 observations read from the data set WORK.FUNGUS.
NOTE: There were 10 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=20;
NOTE: There were 1 observations read from the data set WORK.TOTAL_OTHERS.
      WHERE cult_org_code=23;
NOTE: The data set WORK.ORGANISM_SUMMARY has 86 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

464        
465        		* remove repeat "other" organisms! ** ADDED 7/30/2008 DUE TO REPEAT "OTHER FUNGAL SPECIES" **; ;
466        		
466      !   data organism_summary;
467        			set organism_summary;
468        			by organism NOTSORTED;
469        
470        			if ~first.organism then delete;
471        		run;

NOTE: There were 86 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 62 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

472        
473        
474        		* now create "All organism" type of summaries for this table ;
475        		
475      !   data organism_summary;
476        			set organism_summary;
477        			by type notsorted;
478        		
479        			if (last.type) & (type ~= "Other")  then do; * this doesn't make too much sense for the 'other' group ; 
480        				output;
481        				organism = "== Any " || trim(type) || " =="; 	
                                                     The SAS System

482        			end;
483        			output;
484        		run;

NOTE: There were 62 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 65 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

484      !       
485        
486        		* remember the order of the observations of this dataset for later! ;
487        		
487      !   data organism_summary;
488        			set organism_summary;
489        			order = _n_ ;
490        		run;

NOTE: There were 65 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 65 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

490      !       
491        
492        
493        		* capture infection totals - for all 4 types (includes OTHERS);
494        			
494      !    proc means data = organism_summary;
495        				class type ;
496        				where ~((substrn(organism, 0, 3) = "==") | (substrn(organism, 0, 3) = "--")) ; * exclude any rows that
496      ! show summaries or specific 'other' types of organisms  ;
497        	
498        				var inc_infect;
499        				output out = org_total_infect sum(inc_infect) = inc_infect;
500        			run;

NOTE: There were 23 observations read from the data set WORK.ORGANISM_SUMMARY.
      WHERE (SUBSTRN(organism, 0, 3) not = '==') and (SUBSTRN(organism, 0, 3) not = '--');
NOTE: The data set WORK.ORG_TOTAL_INFECT has 5 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 54.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

500      !        
501        			/*data org_total_infect;
502        				set org_total_infect;
503        				
504        				temp_type = type;
505        				drop type;
506        			run;*/
507        			
                                                     The SAS System

507      !    data org_total_infect;
508        				set org_total_infect;
509        
510        				if _type_ = 0 then type = "== Any Infection ==       ";
511        				else type = "== " || type || " =="; * this will allow us to merge back into the table later;
512        
513        				drop _type_ _freq_;
514        			run;

NOTE: There were 5 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.ORG_TOTAL_INFECT has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514      !        
515        
516        		* capture patient totals WITHIN each type;
517        			* go back to data, label type;
518        			
519        			
519      !    data by_type;
520        				set by_organism;
521        				where cult_org_code ~= 23; * treat each 'OTHER' infection separately;
522        
523        				if cult_org_code in (1,2,3,4,5,6,7,11,16,21) then type = "== Any Gram+ Bacteria ==";
524        				if cult_org_code in (8,9,10,12,13,14,15,22) then type = "== Any Gram- Bacteria ==";
525        				if cult_org_code in (17,18,19,20) then type = "== Any Fungal Species ==";
526        				*if cult_org_code =23 then type = "== Any Other ==";				
527         			run;

NOTE: There were 198 observations read from the data set WORK.BY_ORGANISM.
      WHERE cult_org_code not = 23;
NOTE: The data set WORK.BY_TYPE has 198 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

527      !         
528        			
528      !    proc sort data= by_type; 
529        				by incident type id; 
530        			run;

NOTE: There were 198 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 198 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.02 seconds
      

530      !        
531        
532        				* - VERY IMPORTANT STEP! - remove replicate IDs within each class of organism within each class of
532      ! incidence  ;
533        				
                                                     The SAS System

533      !     data by_type;
534        					set by_type;
535        					by incident type id ;
536        					if ~first.id  then delete; * make sure there's one record for each person within this type of infection
536      ! ;
537        				run;

NOTE: There were 198 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 121 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

537      !         
538        
539        				
539      !     proc sort data= by_type; by incident; run;

NOTE: There were 121 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.BY_TYPE has 121 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

539      !                                               		
540        				
540      !     proc print data= by_type; var id incident organism; run;

NOTE: There were 121 observations read from the data set WORK.BY_TYPE.
NOTE: The PROCEDURE PRINT printed pages 55-57.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

540      !                                                             
541        				
542        				
542      !     proc means data =  by_type n  ;
543        					by incident;
544        					class type;
545        					var id ;
546        
547        					output out = patients_out n(cult_org_code) = num_patients;
548        				run;

NOTE: There were 121 observations read from the data set WORK.BY_TYPE.
NOTE: The data set WORK.PATIENTS_OUT has 8 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 58.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

548      !         
549        
                                                     The SAS System

550        
551        				* clean up output dataset - this dataset now has the totals for gram+, gram-, fungal species ;	
552        				
552      !     data patients_out;
553        					set patients_out;
554        					
555        					if _type_ = 0 then delete; * delete overall total row. this is not accurate;
556        					drop _type_ _freq_;
557        				run;

NOTE: There were 8 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.PATIENTS_OUT has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

557      !         
558        					
558      !      data a;
559        						set patients_out;
560        						where incident = 0;
561        					run;

NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

561      !          
562        					
562      !      data b;
563        						set patients_out;
564        						where incident = 1;
565        					run;

NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

565      !          
566        					
566      !      data patients_out;
567        						merge a (rename =(num_patients = prev_patients))
568        							 b (rename =(num_patients = inc_patients));
569        						by type;
570        						drop incident;
571        
572        					run;

NOTE: There were 3 observations read from the data set WORK.A.
                                                     The SAS System

NOTE: There were 3 observations read from the data set WORK.B.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

572      !          
573        
574        					* add in the overall sum of infections for these three groups ;
575        					
575      !      proc sort data= org_total_infect; by type; run;

NOTE: There were 5 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.ORG_TOTAL_INFECT has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

575      !                                                      
576        
577        					* strip out the overall and 'other' record, leaving just the 3 in middle ;
578        					
578      !      data temp_org_total;
579        						set org_total_infect;
580        						if _n_ in (1,5) then delete;
581        					run;

NOTE: There were 5 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.TEMP_ORG_TOTAL has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

581      !          
582        							
583        					* merge the two side-by-side, to put the infection totals next to the patient totals (this is not the
583      ! most stable with no 'by' statement, but it is easiest here due to problems with the 'type' variable ;
584        					
584      !      data patients_out;
585        						merge patients_out 
586        							temp_org_total (drop = type)
587        							;
588        						format type $52.;
589        						rename type = organism; * this really should have been called organism all along;
590        					run;

NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: There were 3 observations read from the data set WORK.TEMP_ORG_TOTAL.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

590      !          
                                                     The SAS System

591        					* merge into organism_summary;
592        					* sort organism_summary by organism, but we have the order stored in there; 
593        					
593      !      proc sort data= organism_summary; by organism; run;

NOTE: There were 65 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 65 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

593      !                                                         
594        					
594      !      proc sort data= patients_out; by organism; run;

NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.PATIENTS_OUT has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

594      !                                                     
595        				
596        					
596      !      data organism_summary;	
597        						merge   organism_summary
598        								patients_out (in = is_summary rename = (prev_patients = a inc_patients = b inc_infect = c))
599        								;
600        						by organism;
601        						
602        						* take summary numbers and overwrite 0's in table;
603        						if is_summary then do;
604        							prev_patients = a; inc_patients = b; inc_infect = c;
605        						end;
606        						drop a b c;
607        					run;

NOTE: There were 65 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: There were 3 observations read from the data set WORK.PATIENTS_OUT.
NOTE: The data set WORK.ORGANISM_SUMMARY has 65 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607      !          
608        					
608      !      proc sort data= organism_summary; by order; run;

NOTE: There were 65 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 65 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

                                                     The SAS System

608      !                                                       * reorder ;
609        
610        
611        
612        				* 1. still need sum of patients overall ;
613        				* 2. merge in infection totals from org_total_infect; 
614        				* 3. then merge that info back into the main organism_summary table ; 
615        
616        
617        				* get sum of patients overall ;
618        				
618      !     proc sort data= by_organism; 
619        					by incident  id; 
620        				run;

NOTE: There were 199 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_ORGANISM has 199 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

620      !         
621        				
621      !     data by_overall;
622        					set by_organism;
623        					by incident id ;
624        		
625        					if ~first.id then delete;
626        				run;

NOTE: There were 199 observations read from the data set WORK.BY_ORGANISM.
NOTE: The data set WORK.BY_OVERALL has 90 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

626      !         
627        				
627      !     proc means data =  by_overall n  ;
628        					class incident;
629        					var id ;
630        
631        					output out = overall_out n(cult_org_code) = num_patients;
632        				run;

NOTE: There were 90 observations read from the data set WORK.BY_OVERALL.
NOTE: The data set WORK.OVERALL_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 59.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      

632      !         
633        					
633      !      data overall_out;
                                                     The SAS System

634        						set overall_out;
635        						
636        						if _type_ = 0 then delete; * delete overall total row. this is not accurate;
637        						drop _type_ _freq_;
638        					run;

NOTE: There were 3 observations read from the data set WORK.OVERALL_OUT.
NOTE: The data set WORK.OVERALL_OUT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

638      !          
639        					
639      !      data a;
640        						set overall_out;
641        						where incident = 0;
642        					run;

NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

642      !          
643        					
643      !      data b;
644        						set overall_out;
645        						where incident = 1;
646        					run;

NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

646      !          
647        					
647      !      data overall_out;
648        						merge a (rename =(num_patients = prev_patients))
649        							 b (rename =(num_patients = inc_patients));
650        							
651        						* format for the final table ;
652        						type = "== Any Infection ==";
653        						organism = " ";
654        						drop incident;
655        					run;

NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: The data set WORK.OVERALL_OUT has 1 observations and 4 variables.
                                                     The SAS System

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

655      !          
656        
657        					* add in the overall sum of infections ;
658        					
658      !      data overall_out;
659        						merge overall_out ( in = overall_record)
660        							org_total_infect
661        							;
662        						if ~overall_record then delete ; * take just the overall record from these totals ;
663        					run;

NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
NOTE: There were 5 observations read from the data set WORK.ORG_TOTAL_INFECT.
NOTE: The data set WORK.OVERALL_OUT has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      

663      !          
664        					
665        
666        					* add any infection to bottom of table;
667        					
667      !      data organism_summary;
668        						set organism_summary
669        							overall_out;	
670        					run;

NOTE: There were 65 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: There were 1 observations read from the data set WORK.OVERALL_OUT.
NOTE: The data set WORK.ORGANISM_SUMMARY has 66 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

670      !          
671        
672        		* now perform calculations and format the results;
673        		
673      !   data organism_summary;
674        			set organism_summary(rename=(organism=temp));
675        
676        			* convert all genus names to upper-case for most appropriate presentation. ie: capitalize first letter ;
677        			if substr(temp,1,2)^="--" then organism = Upcase(substrn(strip(temp), 1, 1)) || substrn(strip(temp), 2);
678        			else organism ="-- "||Upcase(substrn(strip(temp), 4, 1)) || substrn(strip(temp), 5);
679        				*organism=propcase(temp);
680        
681        			* perform calculations ;
682        			prev_percent = (prev_patients / &n_study) * 100; * percent of patients with this  organism ;
683        			inc_percent = (inc_patients / &n_study) * 100; 	* percent of patients with this organism ;	
684        			if inc_percent = . then inc_percent = 0; 
                                                     The SAS System

685        
686        			* format all information in one convenient line for each infection type;
687        			prevalent = compress(put(prev_patients, 3.) || "/" || put(&n_study, 3.), ' ')  || " (" ||
687      ! compress((put(prev_percent, 5.1)) || "%)", ' ')  ;
688        			incident =  put(inc_infect, 3.) || " (" || compress(put(inc_patients, 3.) || "/" || put(&n_study, 3.), '
688      ! ') || ", " || compress(put(inc_percent, 5.1) || "%)", ' ')  ;
689        
690        			drop temp;
691        		run;

NOTE: There were 66 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.ORGANISM_SUMMARY has 66 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

692        
693        	options ls=120 nodate  	/*papersize= ("15", "8.5")*/  orientation =  portrait center nonumber formdlim='-'
693      ! formchar = "|----|+|---+=|-/\<>*"; * nodate contents;
694        	*ods ps file = "/glnd/sas/reporting/nosocomialopen.ps" style = journal startpage=no ;
695        	*ods pdf file = "/glnd/sas/reporting/nosocomial_organism_table_open.pdf" style = journal startpage=no ;
696        	ods ps file = "nosocomialopen.ps" style = journal startpage=no ;
NOTE: Writing ODS PS output to DISK destination "/home/bwu2/spelling/nosocomialopen.ps", printer "POSTSCRIPT".
697        	ods pdf file = "nosocomial_organism_table_open.pdf" style = journal startpage=no ;
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_organism_table_open.pdf", 
      printer "PDF".
698        		title1 "Nosocomial Infections - Cultured Organisms" ;
699        		title2 "With adjudications applied (n = &n_study)";
700        
701        		
701      !   proc print data= organism_summary noobs label width=minimum split = '*' style(table)= [font_width =
701      ! compressed] ;
702        			id type;
703        			by type notsorted;
704        			var organism;
705        			var prevalent /style(data) = [just=center]; * separate var statement for separate atrributes ;
706        			var incident /style(data) = [just=center]; * separate var statement for separate atrributes ;
707        
708        			label 	type = "Class" 
709        					organism = "Organism"
710        					prevalent = "Prevalent Infec.:*# patients (% prev.)"
711        					incident = "Incident Infec.:* # infec. (#patients, % incid.)"
712        				;
713        		run;

NOTE: There were 66 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The PROCEDURE PRINT printed pages 60-63.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      

713      !       	
714        	ods ps close;
NOTE: ODS PS printed 2 pages to /home/bwu2/spelling/nosocomialopen.ps.
715        	ods pdf close;
NOTE: ODS PDF printed 2 pages to /home/bwu2/spelling/nosocomial_organism_table_open.pdf.
                                                     The SAS System

716        
717        data x;
718           set organism_summary;
719           type0=lag(type);
720           if type ne type0 then new+1;
721        
722        ods ps file = "/glnd/sas/reporting/nosocomialopena.ps" style = journal startpage=no ;
NOTE: Writing ODS PS output to DISK destination "/glnd/sas/reporting/nosocomialopena.ps", printer "POSTSCRIPT".
723        	   title1 "Nosocomial Infections - Cultured Organisms" ;
724        		title2 "With adjudications applied (n = &n_study)";
725        
726        		

NOTE: There were 66 observations read from the data set WORK.ORGANISM_SUMMARY.
NOTE: The data set WORK.X has 66 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.05 seconds
      

726      !   proc print data= x noobs label width=minimum split = '*' style(table)= [font_width = compressed] ;
727        			id type;
728        			by type notsorted;
729        			var organism;
730        			var prevalent /style(data) = [just=center]; * separate var statement for separate atrributes ;
731        			var incident /style(data) = [just=center]; * separate var statement for separate atrributes ;
732        
733        			label 	type = "Class" 
734        					organism = "Organism"
735        					prevalent = "Prevalent Infec.:*# patients (% prev.)"
736        					incident = "Incident Infec.:* # infec. (#patients, % incid.)"
737        				;
738              where new<4; 
739        		run;

NOTE: There were 64 observations read from the data set WORK.X.
      WHERE new<4;
NOTE: The PROCEDURE PRINT printed pages 64-65.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

739      !       	
740        	ods ps close;
NOTE: ODS PS printed 2 pages to /glnd/sas/reporting/nosocomialopena.ps.
741        	
742        
743        
744        ods ps file = "/glnd/sas/reporting/nosocomialopenb.ps" style = journal startpage=no ;
NOTE: Writing ODS PS output to DISK destination "/glnd/sas/reporting/nosocomialopenb.ps", printer "POSTSCRIPT".
745        	   title1 "Nosocomial Infections - Cultured Organisms" ;
746        		title2 "With adjudications applied (n = &n_study)";
747        
748        		
748      !   proc print data= x noobs label width=minimum split = '*' style(table)= [font_width = compressed] ;
749        			id type;
750        			by type notsorted;
                                                     The SAS System

751        			var organism;
752        			var prevalent /style(data) = [just=center]; * separate var statement for separate atrributes ;
753        			var incident /style(data) = [just=center]; * separate var statement for separate atrributes ;
754        
755        			label 	type = "Class" 
756        					organism = "Organism"
757        					prevalent = "Prevalent Infec.:*# patients (% prev.)"
758        					incident = "Incident Infec.:* # infec. (#patients, % incid.)"
759        				;
760              where new>3; 
761        		run;

NOTE: There were 2 observations read from the data set WORK.X.
      WHERE new>3;
NOTE: The PROCEDURE PRINT printed page 66.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

761      !       	
762        	ods ps close;
NOTE: ODS PS printed 1 page to /glnd/sas/reporting/nosocomialopenb.ps.
763        	
764        
765        
766        
767        /**  PRODUCE BY SITE AND TYPE TABLE, with organism listing - USED NOW ONLY FOR BY CENTER TOTALS. THESE DATA
767      ! ARE NOT PRINTED **/
768        
769        	* first, we need the data arranged two way - by number of unique infection episodes and by cultured
769      ! organisms;
770        
771        	* number of unique episodes is straight-forward - simply take noso, filter out non-confirmed infections ;
772        	
772      !  data by_episode;
773        		set noso; 
774        
775        		where (infect_confirm in (1,2)); * only look at positive infections with positive cultures ; 
776        
777        
778        		site_code_label = trim(put(site_code, site_code.));
779        		type_code_label = trim(put(type_code, type_code.));
780        
781        		drop organism_1 organism_2 organism_3 organism_4 organism_5 cult_org_code_1 cult_org_code_2 cult_org_code_3
781      !  cult_org_code_4 cult_org_code_5
782        			org_spec_1 org_spec_2 org_spec_3 org_spec_4 org_spec_5;
783        	run;

NOTE: There were 149 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_EPISODE has 149 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds
      

783      !      
                                                     The SAS System

784        
785        	* now list by organism ... ; 
786        	* unlike the previous by_organism, this dataset has records for those infections w/o a listed organism ;
787        	
787      !  data by_organism_all_infec;
788        		set noso;
789        
790        		where (infect_confirm in (1,2)); * only look at positive infections with positive cultures ; 
791        
792        		/*organism= " 													";
793        		* work backwards from oganism_5,  ... ;
794        		if cult_org_code_5 ~= . then do; organism = trim(organism) || ", " || organism_5; end;
795        		if cult_org_code_4 ~= . then do; organism = trim(organism) || ", " || organism_4; end;
796        		if cult_org_code_3 ~= . then do; organism = trim(organism) || ", " || organism_3; end;
797        		if cult_org_code_2 ~= . then do; organism = trim(organism) || ", " || organism_2; end;
798        
799        		if cult_org_code_1 ~= . then do; organism = trim(organism) || ", " || organism_1; end;
800        		*/
801        		if cult_org_code_5 ~= . then do; organism = organism_5; cult_org_code = cult_org_code_5; org_spec =
801      ! org_spec_5; output; end;
802        		if cult_org_code_4 ~= . then do; organism = organism_4; cult_org_code = cult_org_code_4; org_spec =
802      ! org_spec_4; output; end;
803        		if cult_org_code_3 ~= . then do; organism = organism_3; cult_org_code = cult_org_code_3; org_spec =
803      ! org_spec_3; output; end;
804        		if cult_org_code_2 ~= . then do; organism = organism_2; cult_org_code = cult_org_code_2; org_spec =
804      ! org_spec_2; output; end;
805        
806        		if cult_org_code_1 ~= . then do; organism = organism_1; cult_org_code = cult_org_code_1; org_spec =
806      ! org_spec_1; output; end; * every record has at least the first organism;
807        		else output;
808        		
809        		
810        		drop organism_1 organism_2 organism_3 organism_4 organism_5 cult_org_code_1 cult_org_code_2 cult_org_code_3
810      !  cult_org_code_4 cult_org_code_5
811        			org_spec_1 org_spec_2 org_spec_3 org_spec_4 org_spec_5;
812        	run;

NOTE: There were 149 observations read from the data set WORK.NOSO.
      WHERE infect_confirm in (1, 2);
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 211 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds
      

812      !      		
813        
814        	* add labels to those infections w/o a confirmed organism;
815        	
815      !  data by_organism_all_infec;
816        		set  by_organism_all_infec;
817        
818        		if  (organism = "") & ~cult_obtain then organism = "(no culture obtained)";
819        		else if (organism = "") & (cult_obtain) & (~cult_positive) then organism = "(negative culture)";
820        
821        		* also add indicator for whether this is a prevalent or incident culture ;
822        		if incident then organism = trim(organism) || " - [inc.]";
823        		if ~incident then organism = trim(organism) || " - [prev.]";
                                                     The SAS System

824        
825        	run;

NOTE: There were 211 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 211 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.30 seconds
      cpu time            0.00 seconds
      

825      !      
826        
827        
828        
829        	* NOW ANALYZE by site and type code - first gather total number of infections;
830        		
830      !   proc means data = by_episode n;
831        			class site_code type_code;
832        			where incident = 1;
833        			var dt_infect ;
834        
835        			output out = episode_infect n(dt_infect) = inc_infect;
836        		run;

NOTE: There were 99 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.EPISODE_INFECT has 43 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed pages 67-68.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

836      !       
837        
838        		* post-process. remove all observations that are summarizing across a class ;
839        		
839      !   data episode_infect;
840        			set episode_infect;
841        			where (site_code ~= "") & (type_code ~= "") ;
842        			drop _type_ _freq_;
843        		run;

NOTE: There were 17 observations read from the data set WORK.EPISODE_INFECT.
      WHERE (site_code not = ' ') and (type_code not = ' ');
NOTE: The data set WORK.EPISODE_INFECT has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

843      !       
844        
845        
846        	* then gather unique people within each infection and type+site code  ;
847        		
847      !   proc sort data= by_episode; 
848        			by incident type_code site_code id;
                                                     The SAS System

849        		run;

NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 149 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
      

849      !       
850        		
851        		* reduce to one id per combination of incident, type, site ;
852        		
852      !   data episode_people;
853        			set by_episode;
854        			by incident type_code site_code id;
855        			if ~first.id then delete;
856        		run;

NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 142 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

856      !       
857        
858        		* now gather totals by incidence ;
859        		
859      !   proc means data = episode_people n;
860        			class incident site_code type_code;
861        			var dt_infect ;
862        
863        			output out = episode_people_out n(dt_infect) = num_patients;
864        		run;

NOTE: There were 142 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 141 observations and 6 variables.
NOTE: The PROCEDURE MEANS printed pages 69-71.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

864      !       
865        
866        		* post-process. remove all observations that are summarizing across a class ;
867        		
867      !   data episode_people_out;
868        			set episode_people_out;
869        			where (site_code ~= "") & (type_code ~= "") & (incident ~= .) ;
870        			drop _type_ _freq_;
871        		run;

NOTE: There were 34 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE (site_code not = ' ') and (type_code not = ' ') and (incident not = .);
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 34 observations and 4 variables.
                                                     The SAS System

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

871      !       
872        			
872      !    data a;
873        				set episode_people_out;
874        				where incident = 0;
875        			run;

NOTE: There were 17 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

875      !        
876        			
876      !    data b;
877        				set episode_people_out;
878        				where incident = 1;
879        			run;

NOTE: There were 17 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

879      !        
880        
881        			
881      !    proc sort data= a; 	by site_code type_code ; run;

NOTE: There were 17 observations read from the data set WORK.A.
NOTE: The data set WORK.A has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

881      !                                                     
882        			
882      !    proc sort data= b; 	by site_code type_code; run;

NOTE: There were 17 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

                                                     The SAS System

882      !                                                    
883        			
883      !    proc sort data= episode_infect; 	by site_code type_code; run;

NOTE: There were 17 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_INFECT has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

883      !                                                                 
884        
885        		* now put incident and prevalent patient totals together with incident infection totals ;
886        		
886      !   data episode_people_out;
887        			merge a (rename =(num_patients = prev_patients))
888        				 b (rename =(num_patients = inc_patients))
889        				 episode_infect;
890        			by site_code type_code;
891        
892        			* recode missing to 0;
893        			if prev_patients = . then prev_patients = 0;
894        			if inc_patients = . then inc_patients = 0;
895        			if inc_infect = . then inc_infect = 0;
896        
897        		drop incident;
898        		run;

NOTE: There were 17 observations read from the data set WORK.A.
NOTE: There were 17 observations read from the data set WORK.B.
NOTE: There were 17 observations read from the data set WORK.EPISODE_INFECT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      

898      !       
899        
900        
901        
902        
903        
904        		* now merge in the specific organism findings by site and type code;
905        		
905      !   proc sort data=  by_organism_all_infec; 	by site_code type_code; run;

NOTE: There were 211 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.BY_ORGANISM_ALL_INFEC has 211 observations and 53 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

905      !                                                                        
906        		
906      !   data episode_people_out;
                                                     The SAS System

907        			merge  episode_people_out
908        					by_organism_all_infec (keep = site_code type_code organism incident)
909        					;
910        			by site_code type_code;
911        		run;

NOTE: There were 24 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: There were 211 observations read from the data set WORK.BY_ORGANISM_ALL_INFEC.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 211 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

911      !       
912        
913        
914        		
914      !   proc sort data= episode_people_out; 	by site_code type_code incident organism ; run;

NOTE: There were 211 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_PEOPLE_OUT has 211 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

914      !                                                                                       
915        
916        		* touch up table, generate summary stats. white out repeats within all three levels. 
917        			so only add labels on the first of site_code type_code ;
918        
919        		
919      !   data episode_summary;
920        			set episode_people_out (drop = incident); * drop incident as i will re-create it below to serve another
920      ! purpose;
921        			by site_code type_code;
922        			
923        			organism = trim(organism);
924        			
925        			if first.type_code then do;
926        				* perform calculations ;
927        				prev_percent = (prev_patients / &n_study) * 100; * percent of patients with this  organism ;
928        				inc_percent = (inc_patients / &n_study) * 100; 	* percent of patients with this organism ;	
929        				if inc_percent = . then inc_percent = 0; 
930        
931        				* format all information in one convenient line for each infection type;
932        				prevalent = compress(put(prev_patients, 3.) || "/" || put(&n_study, 3.), ' ')  || " (" ||
932      ! compress((put(prev_percent, 5.1)) || "%)", ' ')  ;
933        				incident =  put(inc_infect, 3.) || " (" || compress(put(inc_patients, 3.) || "/" || put(&n_study, 3.), '
933      ! ') || ", " || compress(put(inc_percent, 5.1) || "%)", ' ')  ;
934        			end;	
935        		run;

NOTE: There were 211 observations read from the data set WORK.EPISODE_PEOPLE_OUT.
NOTE: The data set WORK.EPISODE_SUMMARY has 211 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
                                                     The SAS System

      cpu time            0.01 seconds
      

935      !       
936        
937        
938        		/* NOW COMPUTE OVERALL TOTALS, THEN PASTE BY CENTER AND OVERALL INTO SUMMARY TABLE! */
939        		
940        			
940      !    proc means data = by_episode n;
941        				where incident = 1;
942        				var dt_infect ;
943        
944        				output out = overall_infect n(dt_infect) = inc_infect;
945        			run;

NOTE: There were 99 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 3 variables.
NOTE: The PROCEDURE MEANS printed page 72.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

945      !        
946        
947        			* post-process. remove all observations that are summarizing across a class ;
948        			
948      !    data overall_infect;
949        				set overall_infect;
950        				drop _type_ _freq_;
951        			run;

NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_INFECT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

951      !        
952        
953        
954        		* then gather unique people within each infection  code  ;
955        			
955      !    proc sort data= by_episode; 
956        				by incident id;
957        			run;

NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 149 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

957      !        
                                                     The SAS System

958        			
959        			* reduce to one id per combination of incident ;
960        			
960      !    data episode_people;
961        				set by_episode;
962        				by incident id;
963        				if ~first.id then delete;
964        			run;

NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 94 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

964      !        
965        
966        			* now gather totals by incidence ;
967        			
967      !    proc means data = episode_people n;
968        				class incident ;
969        				var dt_infect ;
970        
971        				output out = overall_people_out n(dt_infect) = num_patients;
972        			run;

NOTE: There were 94 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 3 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 73.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      

972      !        
973        
974        			* post-process. remove all observations that are summarizing across a class ;
975        			
975      !    data overall_people_out;
976        				set overall_people_out;
977        				where (incident ~= .) ;
978        				drop _type_ _freq_;
979        			run;

NOTE: There were 2 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident not = .;
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

979      !        
980        				
980      !     data a;
981        					set overall_people_out;
982        					where incident = 0;
                                                     The SAS System

983        				run;

NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

983      !         
984        				
984      !     data b;
985        					set overall_people_out;
986        					where incident = 1;
987        				run;

NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

987      !         
988        
989        			* now put incident and prevalent patient totals together with incident infection totals ;
990        			
990      !    data overall_people_out;
991        				merge a (rename =(num_patients = prev_patients))
992        					 b (rename =(num_patients = inc_patients))
993        					 overall_infect;
994        
995        					 * by nothing, since all datasets have one observation ;
996        
997        				* recode missing to 0;
998        				if prev_patients = . then prev_patients = 0;
999        				if inc_patients = . then inc_patients = 0;
1000       				if inc_infect = . then inc_infect = 0;
1001       
1002       				* add row title ;
1003       				site_code = "Over";
1004       
1005       			drop incident;
1006       			run;

NOTE: There were 1 observations read from the data set WORK.A.
NOTE: There were 1 observations read from the data set WORK.B.
NOTE: There were 1 observations read from the data set WORK.OVERALL_INFECT.
NOTE: The data set WORK.OVERALL_PEOPLE_OUT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1006     !        	
1007       
                                                     The SAS System

1008       
1009       		/** now add by overall totals into summary table, and process **/
1010       		
1010     !   data summary_temp;
1011       			set 		
1012       				overall_people_out;
1013       			
1014       						
1015       				* perform calculations ;
1016       				prev_percent = (prev_patients / &n_study) * 100; * percent of patients with this  organism ;
1017       				inc_percent = (inc_patients / &n_study) * 100; 	* percent of patients with this organism ;	
1018       				if inc_percent = . then inc_percent = 0; 
1019       
1020       				* format all information in one convenient line for each infection type;
1021       				prevalent = compress(put(prev_patients, 3.) || "/" || put(&n_study, 3.), ' ')  || " (" ||
1021     ! compress((put(prev_percent, 5.1)) || "%)", ' ')  ;
1022       				incident =  put(inc_infect, 3.) || " (" || compress(put(inc_patients, 3.) || "/" || put(&n_study, 3.), '
1022     ! ') || ", " || compress(put(inc_percent, 5.1) || "%)", ' ')  ;
1023       
1024       		run;

NOTE: There were 1 observations read from the data set WORK.OVERALL_PEOPLE_OUT.
NOTE: The data set WORK.SUMMARY_TEMP has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1024     !       
1025       		
1025     !   data episode_summary;
1026       			set episode_summary
1027       				summary_temp;
1028       		run;

NOTE: There were 211 observations read from the data set WORK.EPISODE_SUMMARY.
NOTE: There were 1 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The data set WORK.EPISODE_SUMMARY has 212 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      

1028     !       
1029       
1030       	  
1031       		/**	Now compute the numbers by center	**/
1032       			
1032     !    proc means data = by_episode n;
1033       				class center;
1034       				where incident = 1;
1035       				var dt_infect ;
1036       
1037       				output out = center_infect n(dt_infect) = inc_infect;
1038       			run;

NOTE: There were 99 observations read from the data set WORK.BY_EPISODE.
      WHERE incident=1;
                                                     The SAS System

NOTE: The data set WORK.CENTER_INFECT has 6 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed page 74.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.05 seconds
      

1038     !        
1039       
1040       			* post-process. remove all observations that are summarizing across a class ;
1041       			
1041     !    data center_infect;
1042       				set center_infect;
1043       				where (center ~= .) ;
1044       				drop _type_ _freq_;
1045       			run;

NOTE: There were 5 observations read from the data set WORK.CENTER_INFECT.
      WHERE center not = .;
NOTE: The data set WORK.CENTER_INFECT has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1045     !        
1046       
1047       
1048       		* then gather unique people within each infection and center code  ;
1049       			
1049     !    proc sort data= by_episode; 
1050       				by incident center id;
1051       			run;

NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.BY_EPISODE has 149 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

1051     !        
1052       			
1053       			* reduce to one id per combination of incident, centere ;
1054       			
1054     !    data episode_people;
1055       				set by_episode;
1056       				by incident center id;
1057       				if ~first.id then delete;
1058       			run;

NOTE: There were 149 observations read from the data set WORK.BY_EPISODE.
NOTE: The data set WORK.EPISODE_PEOPLE has 94 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

                                                     The SAS System

1058     !        
1059       
1060       			* now gather totals by incidence ;
1061       			
1061     !    proc means data = episode_people n;
1062       				class incident center;
1063       				var dt_infect ;
1064       
1065       				output out = center_people_out n(dt_infect) = num_patients;
1066       			run;

NOTE: There were 94 observations read from the data set WORK.EPISODE_PEOPLE.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 18 observations and 5 variables.
NOTE: The PROCEDURE MEANS printed page 75.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

1066     !        
1067       
1068       			* post-process. remove all observations that are summarizing across a class ;
1069       			
1069     !    data center_people_out;
1070       				set center_people_out;
1071       				where (center~=.) & (incident ~= .) ;
1072       				drop _type_ _freq_;
1073       			run;

NOTE: There were 10 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE (center not = .) and (incident not = .);
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1073     !        
1074       				
1074     !     data a;
1075       					set center_people_out;
1076       					where incident = 0;
1077       				run;

NOTE: There were 5 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE incident=0;
NOTE: The data set WORK.A has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1077     !         
1078       				
1078     !     data b;
1079       					set center_people_out;
1080       					where incident = 1;
1081       				run;
                                                     The SAS System


NOTE: There were 5 observations read from the data set WORK.CENTER_PEOPLE_OUT.
      WHERE incident=1;
NOTE: The data set WORK.B has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1081     !         
1082       
1083       				
1083     !     proc sort data= a; 	by center ; run;

NOTE: There were 5 observations read from the data set WORK.A.
NOTE: The data set WORK.A has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1083     !                                         
1084       				
1084     !     proc sort data= b; 	by  center ; run;

NOTE: There were 5 observations read from the data set WORK.B.
NOTE: The data set WORK.B has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1084     !                                          
1085       				
1085     !     proc sort data= center_infect; 	by center; run;

NOTE: There were 5 observations read from the data set WORK.CENTER_INFECT.
NOTE: The data set WORK.CENTER_INFECT has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1085     !                                                    
1086       
1087       			* now put incident and prevalent patient totals together with incident infection totals ;
1088       			
1088     !    data center_people_out;
1089       				merge a (rename =(num_patients = prev_patients))
1090       					 b (rename =(num_patients = inc_patients))
1091       					 center_infect;
1092       				by center;
1093       
1094       				* recode missing to 0;
1095       				if prev_patients = . then prev_patients = 0;
1096       				if inc_patients = . then inc_patients = 0;
1097       				if inc_infect = . then inc_infect = 0;
1098       
                                                     The SAS System

1099       				* add row title code;
1100       				if center = 1 then site_code = "Emor";
1101       				if center = 2 then site_code = "Miri";
1102       				if center = 3 then site_code = "Vand";
1103       				if center = 4 then site_code = "Colo";
1104       				
1105       
1106       			drop incident;
1107       			run;

NOTE: There were 5 observations read from the data set WORK.A.
NOTE: There were 5 observations read from the data set WORK.B.
NOTE: There were 5 observations read from the data set WORK.CENTER_INFECT.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1107     !        
1108       			
1109       		
1110       
1111       			* now capture denominators by center for computing center percentages. cannot use macro variable for
1111     ! overall n ;
1112       				
1112     !     data status_temp;
1113       					set glnd.status;
1114       					center = floor(id/10000);
1115       				run;

NOTE: There were 130 observations read from the data set GLND.STATUS.
NOTE: The data set WORK.STATUS_TEMP has 130 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1115     !         
1116       				
1116     !     proc means data= status_temp;
1117       					class center;
1118       					output out= center_n n(id) = center_n;
1119       				run;

NOTE: There were 130 observations read from the data set WORK.STATUS_TEMP.
NOTE: The data set WORK.CENTER_N has 6 observations and 4 variables.
NOTE: The PROCEDURE MEANS printed pages 76-84.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.08 seconds
      cpu time            0.08 seconds
      

1119     !         
1120       				* post-process to remove overall total and other columns;
1121       				
1121     !     data center_n;
1122       					set center_n;
                                                     The SAS System

1123       					where _type_ ~= 0;
1124       					drop _type_ _freq_;
1125       				run;

NOTE: There were 5 observations read from the data set WORK.CENTER_N.
      WHERE _type_ not = 0;
NOTE: The data set WORK.CENTER_N has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1125     !         
1126       		
1127       		
1127     !   proc sort data= center_people_out; by center; run;

NOTE: There were 5 observations read from the data set WORK.CENTER_PEOPLE_OUT.
NOTE: The data set WORK.CENTER_PEOPLE_OUT has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1127     !                                                     
1128       		
1128     !   proc sort data= center_n; by center; run;

NOTE: There were 5 observations read from the data set WORK.CENTER_N.
NOTE: The data set WORK.CENTER_N has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1128     !                                            
1129       
1130       
1131       		/** now add in center N, center totals into summary table, and process **/
1132       		
1132     !   data summary_temp;
1133       			merge	center_people_out
1134       					center_n
1135       					;
1136       			by center;
1137       
1138       				* fix missing values for sites with no infections;
1139       				if prev_patients = . then prev_patients = 0; if prev_percent = . then prev_percent = 0;
1140       				if inc_patients = . then inc_patients = 0; if inc_infect = . then inc_infect = 0;
1141       
1142       						
1143       				* perform calculations ;
1144       				prev_percent = (prev_patients / center_n) * 100; * percent of patients with this  organism ;
1145       				inc_percent = (inc_patients / center_n) * 100; 	* percent of patients with this organism ;	
1146       				if inc_percent = . then inc_percent = 0; 
1147       
1148       				* format all information in one convenient line for each infection type;
1149       				prevalent = compress(put(prev_patients, 3.) || "/" || put(center_n, 3.), ' ')  || " (" ||
                                                     The SAS System

1149     ! compress((put(prev_percent, 5.1)) || "%)", ' ')  ;
1150       				incident =  put(inc_infect, 3.) || " (" || compress(put(inc_patients, 3.) || "/" || put(center_n, 3.), '
1150     ! ') || ", " || compress(put(inc_percent, 5.1) || "%)", ' ')  ;
1151       				
1152       				if center = 5 then site_code = "Wisc";	* wisconsin had 0 infection for the march 2010 report, so i need
1152     ! to add a label for them down here, rather than above;
1153       			label site_code = "Site:";
1154       
1155       		run;

NOTE: There were 5 observations read from the data set WORK.CENTER_PEOPLE_OUT.
NOTE: There were 5 observations read from the data set WORK.CENTER_N.
NOTE: The data set WORK.SUMMARY_TEMP has 5 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1156       
1157       		
1157     !   proc print data = summary_temp;
1158       		run;

NOTE: There were 5 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The PROCEDURE PRINT printed page 85.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1158     !       
1159       
1160       		/* REMOVED WHEN DECIDED TO PUT BY SITE TOTALS IN A SEPARATE TABLE
1161       		* add a blank line on top of centers ;
1162       		data center_headers;
1163       			site_code = "     "; output;
1164       			site_code = "Site"; output;
1165       		run;
1166       
1167       		data episode_summary;
1168       			set episode_summary
1169       				center_headers
1170       				summary_temp;
1171       		run;
1172       		*/
1173       
1174       
1175       		* add extra formats for the summaries at the bottom to a different site_code format, stored in work, not
1175     ! library (where the rest of the glnd formats are);
1176       
1177       		
1177     !   proc format library=work;
1177     !                            
1178       				
1178     !     value $site_code
1179       					/* custom row labels*/
1180       					"Over" = "Overall total:"
1181       					"Site" = "Totals by site:"
                                                     The SAS System

1182       					"Emor" = "Emory"
1183       					"Miri" = "Miriam"
1184       					"Vand" = "Vanderbilt"
1185       					"Colo" = "Colorado"	
1186       					"Wisc" = "Wisconsin"
1187       
1188       					/* actual site codes */
1189       					"UTI"=	"Urinary Tract Infection"
1190       					"SSI"=	"Surgical Site Infection"
1191       					"PNEU"= "Pneumonia "
1192       					"BSI" =	"Bloodstream Infection"
1193       					"BJ"	=	"Bone and Joint Infection"
1194       					"CNS" =	"Central Nervous System Infection"
1195       					"CVS" =	"Cardiovascular System Infection"
1196       					"EENT"=	"Eye, Ear, Nose, Throat, or Mouth Infection"
1197       					"GI"	=	"Gastrointestinal System Infection"
1198       					"LRI"=	"Lower Respiratory Tract Infection, Other Than Pneumonia"
1199       					"SST"=	"Skin and Soft Tissue Infection"
1200       						;
NOTE: Format $SITE_CODE has been output.
1200     !        
1201       			run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      
1201     !        

1202       
1203       
1204       		options ls=250 nodate  	/*papersize= ("15", "8.5")*/  orientation =  portrait center nonumber formdlim='-' formchar = "|----|+|---+=|-/\<>*"; * nodate contents;
1205       		*ods ps file = "/glnd/sas/reporting/nosocomial_center_table_open.ps" style = journal startpage=no ;
1206       		*ods pdf file = "/glnd/sas/reporting/nosocomial_center_table_open.pdf" style = journal startpage=no;
1207       		ods ps file = "nosocomial_center_table_open.ps" style = journal startpage=no ;
NOTE: Writing ODS PS output to DISK destination "/home/bwu2/spelling/nosocomial_center_table_open.ps", printer "POSTSCRIPT".
1208       		ods pdf file = "nosocomial_center_table_open.pdf" style = journal startpage=no;
NOTE: Writing ODS PDF output to DISK destination "/home/bwu2/spelling/nosocomial_center_table_open.pdf", printer "PDF".
1209       		ods escapechar='^' ;
1210       
1211       /**************
1212       
1213       	BY SITE AND TYPE PRINTING CODE REMOVED! NOW IT IS EXECUTED BY "NOSOCOMIAL_ADJUDICATED_OPEN.SAS" AND THE SOURCE IS IN "NOSOCOMIAL_EPISODE_TABLE.SAS.
1214       
1215        **************/
1216       
1217       
1218       
1219       
1220       
1221       
1222       /*** Temporarily here to because I want to put the by center table on the next page. It is not working and not needed now. 10/15/07 ***/
1223       			
1224       			* print STUDY CENTER totals ;
1225       		
1226       			ods pdf startpage = yes; ods ps startpage = yes;
1227       		
1228       			
                                                                                                                      The SAS System

1228     !    proc print data= summary_temp noobs label width=minimum split = '*' style(table)= [font_width = compressed just = center] ;
1229       				title2 "Totals by Study Center";
1230       				var site_code;
1231       				var prevalent /style(data) = [just=center]; * separate var statement for separate atrributes ;
1232       				var incident /style(data) = [just=center]; * separate var statement for separate atrributes ;
1233       					
1234       
1235       				label 	
1236       						prevalent = "Prevalent Infec.:*# patients (% prev.)"
1237       						incident = "Incident Infec.:* # infec. (#patients, % incid.)"
1238       					;
1239       
1240       				format site_code $site_code.;
1241       			run;

NOTE: There were 5 observations read from the data set WORK.SUMMARY_TEMP.
NOTE: The PROCEDURE PRINT printed page 86.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

1241     !        	
1242       
1243       		ods ps close;
NOTE: ODS PS printed 1 page to /home/bwu2/spelling/nosocomial_center_table_open.ps.
1244       		ods pdf close;
NOTE: ODS PDF printed 1 page to /home/bwu2/spelling/nosocomial_center_table_open.pdf.
1245       
1246       	quit;

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           6.24 seconds
      cpu time            3.56 seconds
      
